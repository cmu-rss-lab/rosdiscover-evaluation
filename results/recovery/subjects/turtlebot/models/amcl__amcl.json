{
  "image": {
    "sha256": "d0c095577d379e64eda5f04a034479d39a0e5fe4ade901e38cd4a46ce3532fe5"
  },
  "node-name": "amcl",
  "package": {
    "name": "amcl",
    "path": "/ros_ws/src/navigation/amcl"
  },
  "sources": [
    "/ros_ws/src/navigation/amcl/src/amcl_node.cpp"
  ],
  "program": {
    "program": {
      "entrypoint": "main",
      "functions": [
        {
          "name": "AmclNode::mapReceived",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:793:3, col:25>",
                "kind": "assignment",
                "variable": "AmclNode::first_map_received_",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "||",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::first_map_only_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::first_map_only_",
                          "type": "bool",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::first_map_received_",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::first_map_only_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:793:3, col:25>",
                "kind": "assignment",
                "variable": "AmclNode::first_map_received_",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "||",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::first_map_only_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::first_map_only_",
                          "type": "bool",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::first_map_received_",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::first_map_only_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "name": "AmclNode::runFromBag",
          "parameters": [
            {
              "index": 0,
              "name": "in_bag_fn",
              "type": "string"
            }
          ],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:613:30, col:88>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "base_scan"
                  }
                },
                "format": "sensor_msgs/LaserScan"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:614:27, col:72>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/tf"
                  }
                },
                "format": "tf2_msgs/TFMessage"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:636:3 <Spelling=<scratch space>:338:1>, /ros_ws/src/navigation/amcl/src/amcl_node.cpp:636:3 <Spelling=/usr/include/boost/foreach.hpp:1107:122>>",
                "kind": "assignment",
                "variable": "_foreach_continue636",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "unknown"
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "unknown"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_foreach_continue636",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": true
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_foreach_continue636",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": true
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "unknown"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "variable-reference",
                      "qualified_name": "_foreach_continue636",
                      "type": "bool",
                      "initial-value": {
                        "kind": "bool-literal",
                        "literal": true
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:649:7, col:25>",
                "kind": "publish",
                "publisher": "tf_pub",
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "unknown"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "unknown"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_foreach_continue636",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": true
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_foreach_continue636",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": true
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "unknown"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "variable-reference",
                        "qualified_name": "_foreach_continue636",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": true
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "!=",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "tf_msg",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "null-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:660:7, col:28>",
                "kind": "publish",
                "publisher": "laser_pub",
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "unknown"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "unknown"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_foreach_continue636",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": true
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_foreach_continue636",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": true
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "unknown"
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "variable-reference",
                          "qualified_name": "_foreach_continue636",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": true
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "!=",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "tf_msg",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "null-expr"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "!=",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "base_scan",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "null-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:613:30, col:88>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "base_scan"
                  }
                },
                "format": "sensor_msgs/LaserScan"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:614:27, col:72>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/tf"
                  }
                },
                "format": "tf2_msgs/TFMessage"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:636:3 <Spelling=/usr/include/boost/foreach.hpp:1100:5>, /ros_ws/src/navigation/amcl/src/amcl_node.cpp:670:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:636:3 <Spelling=/usr/include/boost/foreach.hpp:1101:5>, /ros_ws/src/navigation/amcl/src/amcl_node.cpp:670:3>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": []
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:636:3 <Spelling=/usr/include/boost/foreach.hpp:1102:5>, /ros_ws/src/navigation/amcl/src/amcl_node.cpp:670:3>",
                            "kind": "if",
                            "trueBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": []
                            },
                            "falseBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": [
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:636:3 <Spelling=/usr/include/boost/foreach.hpp:1106:9>, /ros_ws/src/navigation/amcl/src/amcl_node.cpp:670:3>",
                                  "kind": "if",
                                  "trueBranchBody": {
                                    "source-location": "",
                                    "kind": "compound",
                                    "statements": []
                                  },
                                  "falseBranchBody": {
                                    "source-location": "",
                                    "kind": "compound",
                                    "statements": [
                                      {
                                        "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:636:3 <Spelling=<scratch space>:338:1>, /ros_ws/src/navigation/amcl/src/amcl_node.cpp:636:3 <Spelling=/usr/include/boost/foreach.hpp:1107:122>>",
                                        "kind": "assignment",
                                        "variable": "_foreach_continue636",
                                        "value": {
                                          "kind": "bool-literal",
                                          "literal": true
                                        },
                                        "path_condition": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "&&",
                                                  "lhs": {
                                                    "kind": "binary-expr",
                                                    "operator": "&&",
                                                    "lhs": {
                                                      "kind": "negate-expr",
                                                      "subExpr": {
                                                        "kind": "unknown"
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "negate-expr",
                                                      "subExpr": {
                                                        "kind": "unknown"
                                                      }
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "negate-expr",
                                                    "subExpr": {
                                                      "kind": "unknown"
                                                    }
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_foreach_continue636",
                                                  "type": "bool",
                                                  "initial-value": {
                                                    "kind": "bool-literal",
                                                    "literal": true
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_foreach_continue636",
                                                  "type": "bool",
                                                  "initial-value": {
                                                    "kind": "bool-literal",
                                                    "literal": true
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "negate-expr",
                                                  "subExpr": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "unknown"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "variable-reference",
                                              "qualified_name": "_foreach_continue636",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": true
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:647:5, line:655:5>",
                                        "kind": "if",
                                        "trueBranchBody": {
                                          "source-location": "",
                                          "kind": "compound",
                                          "statements": [
                                            {
                                              "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:649:7, col:25>",
                                              "kind": "publish",
                                              "publisher": "tf_pub",
                                              "path_condition": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "&&",
                                                  "lhs": {
                                                    "kind": "binary-expr",
                                                    "operator": "&&",
                                                    "lhs": {
                                                      "kind": "binary-expr",
                                                      "operator": "&&",
                                                      "lhs": {
                                                        "kind": "binary-expr",
                                                        "operator": "&&",
                                                        "lhs": {
                                                          "kind": "binary-expr",
                                                          "operator": "&&",
                                                          "lhs": {
                                                            "kind": "binary-expr",
                                                            "operator": "&&",
                                                            "lhs": {
                                                              "kind": "negate-expr",
                                                              "subExpr": {
                                                                "kind": "unknown"
                                                              }
                                                            },
                                                            "rhs": {
                                                              "kind": "negate-expr",
                                                              "subExpr": {
                                                                "kind": "unknown"
                                                              }
                                                            }
                                                          },
                                                          "rhs": {
                                                            "kind": "negate-expr",
                                                            "subExpr": {
                                                              "kind": "unknown"
                                                            }
                                                          }
                                                        },
                                                        "rhs": {
                                                          "kind": "variable-reference",
                                                          "qualified_name": "_foreach_continue636",
                                                          "type": "bool",
                                                          "initial-value": {
                                                            "kind": "bool-literal",
                                                            "literal": true
                                                          }
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "binary-expr",
                                                        "operator": "&&",
                                                        "lhs": {
                                                          "kind": "variable-reference",
                                                          "qualified_name": "_foreach_continue636",
                                                          "type": "bool",
                                                          "initial-value": {
                                                            "kind": "bool-literal",
                                                            "literal": true
                                                          }
                                                        },
                                                        "rhs": {
                                                          "kind": "negate-expr",
                                                          "subExpr": {
                                                            "kind": "unknown"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "negate-expr",
                                                      "subExpr": {
                                                        "kind": "unknown"
                                                      }
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "negate-expr",
                                                    "subExpr": {
                                                      "kind": "variable-reference",
                                                      "qualified_name": "_foreach_continue636",
                                                      "type": "bool",
                                                      "initial-value": {
                                                        "kind": "bool-literal",
                                                        "literal": true
                                                      }
                                                    }
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "!=",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "tf_msg",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "unknown"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "null-expr"
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:649:7, col:25>",
                                              "kind": "publish",
                                              "publisher": "tf_pub",
                                              "path_condition": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "&&",
                                                  "lhs": {
                                                    "kind": "binary-expr",
                                                    "operator": "&&",
                                                    "lhs": {
                                                      "kind": "binary-expr",
                                                      "operator": "&&",
                                                      "lhs": {
                                                        "kind": "binary-expr",
                                                        "operator": "&&",
                                                        "lhs": {
                                                          "kind": "binary-expr",
                                                          "operator": "&&",
                                                          "lhs": {
                                                            "kind": "binary-expr",
                                                            "operator": "&&",
                                                            "lhs": {
                                                              "kind": "negate-expr",
                                                              "subExpr": {
                                                                "kind": "unknown"
                                                              }
                                                            },
                                                            "rhs": {
                                                              "kind": "negate-expr",
                                                              "subExpr": {
                                                                "kind": "unknown"
                                                              }
                                                            }
                                                          },
                                                          "rhs": {
                                                            "kind": "negate-expr",
                                                            "subExpr": {
                                                              "kind": "unknown"
                                                            }
                                                          }
                                                        },
                                                        "rhs": {
                                                          "kind": "variable-reference",
                                                          "qualified_name": "_foreach_continue636",
                                                          "type": "bool",
                                                          "initial-value": {
                                                            "kind": "bool-literal",
                                                            "literal": true
                                                          }
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "binary-expr",
                                                        "operator": "&&",
                                                        "lhs": {
                                                          "kind": "variable-reference",
                                                          "qualified_name": "_foreach_continue636",
                                                          "type": "bool",
                                                          "initial-value": {
                                                            "kind": "bool-literal",
                                                            "literal": true
                                                          }
                                                        },
                                                        "rhs": {
                                                          "kind": "negate-expr",
                                                          "subExpr": {
                                                            "kind": "unknown"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "negate-expr",
                                                      "subExpr": {
                                                        "kind": "unknown"
                                                      }
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "negate-expr",
                                                    "subExpr": {
                                                      "kind": "variable-reference",
                                                      "qualified_name": "_foreach_continue636",
                                                      "type": "bool",
                                                      "initial-value": {
                                                        "kind": "bool-literal",
                                                        "literal": true
                                                      }
                                                    }
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "!=",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "tf_msg",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "unknown"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "null-expr"
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "falseBranchBody": {
                                          "source-location": "",
                                          "kind": "compound",
                                          "statements": []
                                        },
                                        "condition": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      },
                                      {
                                        "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:658:5, line:667:5>",
                                        "kind": "if",
                                        "trueBranchBody": {
                                          "source-location": "",
                                          "kind": "compound",
                                          "statements": [
                                            {
                                              "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:660:7, col:28>",
                                              "kind": "publish",
                                              "publisher": "laser_pub",
                                              "path_condition": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "&&",
                                                  "lhs": {
                                                    "kind": "binary-expr",
                                                    "operator": "&&",
                                                    "lhs": {
                                                      "kind": "binary-expr",
                                                      "operator": "&&",
                                                      "lhs": {
                                                        "kind": "binary-expr",
                                                        "operator": "&&",
                                                        "lhs": {
                                                          "kind": "binary-expr",
                                                          "operator": "&&",
                                                          "lhs": {
                                                            "kind": "binary-expr",
                                                            "operator": "&&",
                                                            "lhs": {
                                                              "kind": "binary-expr",
                                                              "operator": "&&",
                                                              "lhs": {
                                                                "kind": "negate-expr",
                                                                "subExpr": {
                                                                  "kind": "unknown"
                                                                }
                                                              },
                                                              "rhs": {
                                                                "kind": "negate-expr",
                                                                "subExpr": {
                                                                  "kind": "unknown"
                                                                }
                                                              }
                                                            },
                                                            "rhs": {
                                                              "kind": "negate-expr",
                                                              "subExpr": {
                                                                "kind": "unknown"
                                                              }
                                                            }
                                                          },
                                                          "rhs": {
                                                            "kind": "variable-reference",
                                                            "qualified_name": "_foreach_continue636",
                                                            "type": "bool",
                                                            "initial-value": {
                                                              "kind": "bool-literal",
                                                              "literal": true
                                                            }
                                                          }
                                                        },
                                                        "rhs": {
                                                          "kind": "binary-expr",
                                                          "operator": "&&",
                                                          "lhs": {
                                                            "kind": "variable-reference",
                                                            "qualified_name": "_foreach_continue636",
                                                            "type": "bool",
                                                            "initial-value": {
                                                              "kind": "bool-literal",
                                                              "literal": true
                                                            }
                                                          },
                                                          "rhs": {
                                                            "kind": "negate-expr",
                                                            "subExpr": {
                                                              "kind": "unknown"
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "negate-expr",
                                                        "subExpr": {
                                                          "kind": "unknown"
                                                        }
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "negate-expr",
                                                      "subExpr": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "_foreach_continue636",
                                                        "type": "bool",
                                                        "initial-value": {
                                                          "kind": "bool-literal",
                                                          "literal": true
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "negate-expr",
                                                    "subExpr": {
                                                      "kind": "binary-expr",
                                                      "operator": "!=",
                                                      "lhs": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "tf_msg",
                                                        "type": "unsupported",
                                                        "initial-value": {
                                                          "kind": "unknown"
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "null-expr"
                                                      }
                                                    }
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "!=",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "base_scan",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "unknown"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "null-expr"
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:660:7, col:28>",
                                              "kind": "publish",
                                              "publisher": "laser_pub",
                                              "path_condition": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "&&",
                                                  "lhs": {
                                                    "kind": "binary-expr",
                                                    "operator": "&&",
                                                    "lhs": {
                                                      "kind": "binary-expr",
                                                      "operator": "&&",
                                                      "lhs": {
                                                        "kind": "binary-expr",
                                                        "operator": "&&",
                                                        "lhs": {
                                                          "kind": "binary-expr",
                                                          "operator": "&&",
                                                          "lhs": {
                                                            "kind": "binary-expr",
                                                            "operator": "&&",
                                                            "lhs": {
                                                              "kind": "binary-expr",
                                                              "operator": "&&",
                                                              "lhs": {
                                                                "kind": "negate-expr",
                                                                "subExpr": {
                                                                  "kind": "unknown"
                                                                }
                                                              },
                                                              "rhs": {
                                                                "kind": "negate-expr",
                                                                "subExpr": {
                                                                  "kind": "unknown"
                                                                }
                                                              }
                                                            },
                                                            "rhs": {
                                                              "kind": "negate-expr",
                                                              "subExpr": {
                                                                "kind": "unknown"
                                                              }
                                                            }
                                                          },
                                                          "rhs": {
                                                            "kind": "variable-reference",
                                                            "qualified_name": "_foreach_continue636",
                                                            "type": "bool",
                                                            "initial-value": {
                                                              "kind": "bool-literal",
                                                              "literal": true
                                                            }
                                                          }
                                                        },
                                                        "rhs": {
                                                          "kind": "binary-expr",
                                                          "operator": "&&",
                                                          "lhs": {
                                                            "kind": "variable-reference",
                                                            "qualified_name": "_foreach_continue636",
                                                            "type": "bool",
                                                            "initial-value": {
                                                              "kind": "bool-literal",
                                                              "literal": true
                                                            }
                                                          },
                                                          "rhs": {
                                                            "kind": "negate-expr",
                                                            "subExpr": {
                                                              "kind": "unknown"
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "negate-expr",
                                                        "subExpr": {
                                                          "kind": "unknown"
                                                        }
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "negate-expr",
                                                      "subExpr": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "_foreach_continue636",
                                                        "type": "bool",
                                                        "initial-value": {
                                                          "kind": "bool-literal",
                                                          "literal": true
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "negate-expr",
                                                    "subExpr": {
                                                      "kind": "binary-expr",
                                                      "operator": "!=",
                                                      "lhs": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "tf_msg",
                                                        "type": "unsupported",
                                                        "initial-value": {
                                                          "kind": "unknown"
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "null-expr"
                                                      }
                                                    }
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "!=",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "base_scan",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "unknown"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "null-expr"
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "falseBranchBody": {
                                          "source-location": "",
                                          "kind": "compound",
                                          "statements": []
                                        },
                                        "condition": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      },
                                      {
                                        "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:636:3 <Spelling=<scratch space>:338:1>, /ros_ws/src/navigation/amcl/src/amcl_node.cpp:636:3 <Spelling=/usr/include/boost/foreach.hpp:1107:122>>",
                                        "kind": "assignment",
                                        "variable": "_foreach_continue636",
                                        "value": {
                                          "kind": "bool-literal",
                                          "literal": true
                                        },
                                        "path_condition": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "&&",
                                                  "lhs": {
                                                    "kind": "binary-expr",
                                                    "operator": "&&",
                                                    "lhs": {
                                                      "kind": "negate-expr",
                                                      "subExpr": {
                                                        "kind": "unknown"
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "negate-expr",
                                                      "subExpr": {
                                                        "kind": "unknown"
                                                      }
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "negate-expr",
                                                    "subExpr": {
                                                      "kind": "unknown"
                                                    }
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_foreach_continue636",
                                                  "type": "bool",
                                                  "initial-value": {
                                                    "kind": "bool-literal",
                                                    "literal": true
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_foreach_continue636",
                                                  "type": "bool",
                                                  "initial-value": {
                                                    "kind": "bool-literal",
                                                    "literal": true
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "negate-expr",
                                                  "subExpr": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "unknown"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "variable-reference",
                                              "qualified_name": "_foreach_continue636",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": true
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                }
                              ]
                            },
                            "condition": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        ]
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  ]
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              }
            ]
          }
        },
        {
          "name": "AmclNode::laserReceived",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1059:5, col:40>",
                "kind": "assignment",
                "variable": "laser_index",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "AmclNode::map_",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      },
                      "rhs": {
                        "kind": "null-expr"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "unknown"
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1092:5, col:62>",
                "kind": "assignment",
                "variable": "laser_index",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "AmclNode::map_",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      },
                      "rhs": {
                        "kind": "null-expr"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "unknown"
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1119:5, col:24>",
                "kind": "assignment",
                "variable": "update",
                "value": {
                  "kind": "binary-expr",
                  "operator": "||",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "update",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": false
                    }
                  },
                  "rhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::m_force_update",
                    "type": "bool",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::map_",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        },
                        "rhs": {
                          "kind": "null-expr"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::pf_init_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1120:5, col:20>",
                "kind": "assignment",
                "variable": "AmclNode::m_force_update",
                "value": {
                  "kind": "bool-literal",
                  "literal": false
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::map_",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        },
                        "rhs": {
                          "kind": "null-expr"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::pf_init_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1135:5, col:16>",
                "kind": "assignment",
                "variable": "AmclNode::pf_init_",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::map_",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        },
                        "rhs": {
                          "kind": "null-expr"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::pf_init_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1141:5, col:25>",
                "kind": "assignment",
                "variable": "force_publication",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::map_",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        },
                        "rhs": {
                          "kind": "null-expr"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::pf_init_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1143:5, col:23>",
                "kind": "assignment",
                "variable": "AmclNode::resample_count_",
                "value": {
                  "kind": "int-literal",
                  "literal": 0
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::map_",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        },
                        "rhs": {
                          "kind": "null-expr"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::pf_init_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1170:5, col:39>",
                "kind": "assignment",
                "variable": "amcl::AMCLSensorData::sensor",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::map_",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        },
                        "rhs": {
                          "kind": "null-expr"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1171:5, col:49>",
                "kind": "assignment",
                "variable": "amcl::AMCLLaserData::range_count",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::map_",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        },
                        "rhs": {
                          "kind": "null-expr"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1200:5, col:64 <Spelling=/usr/include/math.h:418:16>>",
                "kind": "assignment",
                "variable": "angle_increment",
                "value": {
                  "kind": "binary-expr",
                  "operator": "-",
                  "lhs": {
                    "kind": "unknown"
                  },
                  "rhs": {
                    "kind": "float-literal",
                    "literal": 3.141592653589793
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::map_",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        },
                        "rhs": {
                          "kind": "null-expr"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1206:7, col:80>",
                "kind": "assignment",
                "variable": "amcl::AMCLLaserData::range_max",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::map_",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "null-expr"
                          }
                        }
                      },
                      "rhs": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": ">",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::laser_max_range_",
                      "type": "float",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    },
                    "rhs": {
                      "kind": "float-literal",
                      "literal": 0.0
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1208:7, col:37>",
                "kind": "assignment",
                "variable": "amcl::AMCLLaserData::range_max",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "sensor_msgs::LaserScan_<std::allocator<void>>::range_max",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::map_",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "null-expr"
                          }
                        }
                      },
                      "rhs": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "AmclNode::laser_max_range_",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      },
                      "rhs": {
                        "kind": "float-literal",
                        "literal": 0.0
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1211:7, col:74>",
                "kind": "assignment",
                "variable": "range_min",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::map_",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "null-expr"
                          }
                        }
                      },
                      "rhs": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": ">",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::laser_min_range_",
                      "type": "float",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    },
                    "rhs": {
                      "kind": "float-literal",
                      "literal": 0.0
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1213:7, col:31>",
                "kind": "assignment",
                "variable": "range_min",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "sensor_msgs::LaserScan_<std::allocator<void>>::range_min",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::map_",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "null-expr"
                          }
                        }
                      },
                      "rhs": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "AmclNode::laser_min_range_",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      },
                      "rhs": {
                        "kind": "float-literal",
                        "literal": 0.0
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1215:5, col:51>",
                "kind": "assignment",
                "variable": "amcl::AMCLLaserData::ranges",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::map_",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        },
                        "rhs": {
                          "kind": "null-expr"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1240:7, col:19>",
                "kind": "assignment",
                "variable": "resampled",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::map_",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "null-expr"
                          }
                        }
                      },
                      "rhs": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "%",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "AmclNode::resample_interval_",
                        "type": "integer",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1260:7, col:43>",
                "kind": "publish",
                "publisher": "particlecloud_pub_",
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::map_",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "null-expr"
                          }
                        }
                      },
                      "rhs": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::m_force_update",
                      "type": "bool",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1288:7, col:32>",
                "kind": "assignment",
                "variable": "(anonymous struct)::weight",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "weight",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "AmclNode::map_",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "null-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "variable-reference",
                              "qualified_name": "resampled",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "resampled",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          "rhs": {
                            "kind": "variable-reference",
                            "qualified_name": "force_publication",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "resampled",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "<",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "hyp_count",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "_pf_sample_set_t::cluster_count",
                        "type": "integer",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "unknown"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1294:9, col:38>",
                "kind": "assignment",
                "variable": "max_weight",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "(anonymous struct)::weight",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "AmclNode::map_",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "null-expr"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "unknown"
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "variable-reference",
                                "qualified_name": "resampled",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "resampled",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "variable-reference",
                              "qualified_name": "force_publication",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "AmclNode::map_",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "null-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "variable-reference",
                            "qualified_name": "resampled",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "<",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "hyp_count",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "_pf_sample_set_t::cluster_count",
                          "type": "integer",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": ">",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "(anonymous struct)::weight",
                      "type": "float",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "variable-reference",
                      "qualified_name": "max_weight",
                      "type": "float",
                      "initial-value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1295:9, col:26>",
                "kind": "assignment",
                "variable": "max_weight_hyp",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "hyp_count",
                  "type": "integer",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 0
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "AmclNode::map_",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "null-expr"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "unknown"
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "variable-reference",
                                "qualified_name": "resampled",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "resampled",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "variable-reference",
                              "qualified_name": "force_publication",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "AmclNode::map_",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "null-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "variable-reference",
                            "qualified_name": "resampled",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "<",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "hyp_count",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "_pf_sample_set_t::cluster_count",
                          "type": "integer",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": ">",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "(anonymous struct)::weight",
                      "type": "float",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "variable-reference",
                      "qualified_name": "max_weight",
                      "type": "float",
                      "initial-value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1317:7, col:69>",
                "kind": "assignment",
                "variable": "geometry_msgs::Point_<std::allocator<void>>::x",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "||",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "variable-reference",
                            "qualified_name": "resampled",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "resampled",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "force_publication",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "AmclNode::map_",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "rhs": {
                              "kind": "null-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "variable-reference",
                        "qualified_name": "resampled",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": ">",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "max_weight",
                      "type": "float",
                      "initial-value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      }
                    },
                    "rhs": {
                      "kind": "float-literal",
                      "literal": 0.0
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1318:7, col:69>",
                "kind": "assignment",
                "variable": "geometry_msgs::Point_<std::allocator<void>>::y",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "||",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "variable-reference",
                            "qualified_name": "resampled",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "resampled",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "force_publication",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "AmclNode::map_",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "rhs": {
                              "kind": "null-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "variable-reference",
                        "qualified_name": "resampled",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": ">",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "max_weight",
                      "type": "float",
                      "initial-value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      }
                    },
                    "rhs": {
                      "kind": "float-literal",
                      "literal": 0.0
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1348:7, col:26>",
                "kind": "publish",
                "publisher": "pose_pub_",
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "||",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "variable-reference",
                            "qualified_name": "resampled",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "resampled",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "force_publication",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "variable-reference",
                        "qualified_name": "resampled",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": ">",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "max_weight",
                      "type": "float",
                      "initial-value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      }
                    },
                    "rhs": {
                      "kind": "float-literal",
                      "literal": 0.0
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1379:7, col:26>",
                "kind": "assignment",
                "variable": "AmclNode::latest_tf_valid_",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "||",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "variable-reference",
                            "qualified_name": "resampled",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "resampled",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "force_publication",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "AmclNode::map_",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "rhs": {
                              "kind": "null-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "variable-reference",
                        "qualified_name": "resampled",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": ">",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "max_weight",
                      "type": "float",
                      "initial-value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      }
                    },
                    "rhs": {
                      "kind": "float-literal",
                      "literal": 0.0
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1390:9, col:49>",
                "kind": "publish",
                "publisher": "tf_broadcaster",
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "AmclNode::map_",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "null-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "variable-reference",
                              "qualified_name": "resampled",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "resampled",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          "rhs": {
                            "kind": "variable-reference",
                            "qualified_name": "force_publication",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "resampled",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "max_weight",
                        "type": "float",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        }
                      },
                      "rhs": {
                        "kind": "float-literal",
                        "literal": 0.0
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::tf_broadcast_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    },
                    "rhs": {
                      "kind": "bool-literal",
                      "literal": true
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1391:9, col:33>",
                "kind": "assignment",
                "variable": "AmclNode::sent_first_transform_",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "AmclNode::map_",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "null-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "variable-reference",
                              "qualified_name": "resampled",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "resampled",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          "rhs": {
                            "kind": "variable-reference",
                            "qualified_name": "force_publication",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "resampled",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "max_weight",
                        "type": "float",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        }
                      },
                      "rhs": {
                        "kind": "float-literal",
                        "literal": 0.0
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::tf_broadcast_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    },
                    "rhs": {
                      "kind": "bool-literal",
                      "literal": true
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1410:7, col:47>",
                "kind": "publish",
                "publisher": "tf_broadcaster",
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "variable-reference",
                            "qualified_name": "resampled",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "resampled",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          "rhs": {
                            "kind": "variable-reference",
                            "qualified_name": "force_publication",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::latest_tf_valid_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "bool-literal",
                        "literal": false
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::tf_broadcast_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    },
                    "rhs": {
                      "kind": "bool-literal",
                      "literal": true
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1418:7, col:30>",
                "kind": "call",
                "callee": "AmclNode::savePoseToServer",
                "arguments": {},
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "variable-reference",
                            "qualified_name": "resampled",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "resampled",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          "rhs": {
                            "kind": "variable-reference",
                            "qualified_name": "force_publication",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::latest_tf_valid_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "bool-literal",
                        "literal": false
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "float-literal",
                        "literal": 0.0
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": ">=",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "AmclNode::save_pose_period",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1054:3, line:1093:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1059:5, col:40>",
                      "kind": "assignment",
                      "variable": "laser_index",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "AmclNode::map_",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "rhs": {
                              "kind": "null-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1059:5, col:40>",
                      "kind": "assignment",
                      "variable": "laser_index",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "AmclNode::map_",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "rhs": {
                              "kind": "null-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1092:5, col:62>",
                      "kind": "assignment",
                      "variable": "laser_index",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "AmclNode::map_",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "rhs": {
                              "kind": "null-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "unknown"
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1092:5, col:62>",
                      "kind": "assignment",
                      "variable": "laser_index",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "AmclNode::map_",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "rhs": {
                              "kind": "null-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "unknown"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1107:3, line:1126:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1119:5, col:24>",
                      "kind": "assignment",
                      "variable": "update",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "update",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::m_force_update",
                          "type": "bool",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::pf_init_",
                          "type": "bool",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1120:5, col:20>",
                      "kind": "assignment",
                      "variable": "AmclNode::m_force_update",
                      "value": {
                        "kind": "bool-literal",
                        "literal": false
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::pf_init_",
                          "type": "bool",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1119:5, col:24>",
                      "kind": "assignment",
                      "variable": "update",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "update",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::m_force_update",
                          "type": "bool",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::pf_init_",
                          "type": "bool",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1120:5, col:20>",
                      "kind": "assignment",
                      "variable": "AmclNode::m_force_update",
                      "value": {
                        "kind": "bool-literal",
                        "literal": false
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::pf_init_",
                          "type": "bool",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1129:3, line:1163:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1135:5, col:16>",
                      "kind": "assignment",
                      "variable": "AmclNode::pf_init_",
                      "value": {
                        "kind": "bool-literal",
                        "literal": true
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::pf_init_",
                            "type": "bool",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1141:5, col:25>",
                      "kind": "assignment",
                      "variable": "force_publication",
                      "value": {
                        "kind": "bool-literal",
                        "literal": true
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::pf_init_",
                            "type": "bool",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1143:5, col:23>",
                      "kind": "assignment",
                      "variable": "AmclNode::resample_count_",
                      "value": {
                        "kind": "int-literal",
                        "literal": 0
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::pf_init_",
                            "type": "bool",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1135:5, col:16>",
                      "kind": "assignment",
                      "variable": "AmclNode::pf_init_",
                      "value": {
                        "kind": "bool-literal",
                        "literal": true
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::pf_init_",
                            "type": "bool",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1141:5, col:25>",
                      "kind": "assignment",
                      "variable": "force_publication",
                      "value": {
                        "kind": "bool-literal",
                        "literal": true
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::pf_init_",
                            "type": "bool",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1143:5, col:23>",
                      "kind": "assignment",
                      "variable": "AmclNode::resample_count_",
                      "value": {
                        "kind": "int-literal",
                        "literal": 0
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::pf_init_",
                            "type": "bool",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1167:3, line:1262:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1170:5, col:39>",
                      "kind": "assignment",
                      "variable": "amcl::AMCLSensorData::sensor",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1171:5, col:49>",
                      "kind": "assignment",
                      "variable": "amcl::AMCLLaserData::range_count",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1200:5, col:64 <Spelling=/usr/include/math.h:418:16>>",
                      "kind": "assignment",
                      "variable": "angle_increment",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "-",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "float-literal",
                          "literal": 3.141592653589793
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1205:5, line:1208:37>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1206:7, col:80>",
                            "kind": "assignment",
                            "variable": "amcl::AMCLLaserData::range_max",
                            "value": {
                              "kind": "unknown"
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::map_",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "null-expr"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": ">",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "AmclNode::laser_max_range_",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1206:7, col:80>",
                            "kind": "assignment",
                            "variable": "amcl::AMCLLaserData::range_max",
                            "value": {
                              "kind": "unknown"
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::map_",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "null-expr"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": ">",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "AmclNode::laser_max_range_",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              }
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1208:7, col:37>",
                            "kind": "assignment",
                            "variable": "amcl::AMCLLaserData::range_max",
                            "value": {
                              "kind": "member-var-ref",
                              "qualified_name": "sensor_msgs::LaserScan_<std::allocator<void>>::range_max",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "float-literal",
                                "literal": 0.0
                              },
                              "base": {
                                "kind": "unknown"
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::map_",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "null-expr"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": ">",
                                  "lhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "AmclNode::laser_max_range_",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1208:7, col:37>",
                            "kind": "assignment",
                            "variable": "amcl::AMCLLaserData::range_max",
                            "value": {
                              "kind": "member-var-ref",
                              "qualified_name": "sensor_msgs::LaserScan_<std::allocator<void>>::range_max",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "float-literal",
                                "literal": 0.0
                              },
                              "base": {
                                "kind": "unknown"
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::map_",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "null-expr"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": ">",
                                  "lhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "AmclNode::laser_max_range_",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  }
                                }
                              }
                            }
                          }
                        ]
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1210:5, line:1213:31>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1211:7, col:74>",
                            "kind": "assignment",
                            "variable": "range_min",
                            "value": {
                              "kind": "unknown"
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::map_",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "null-expr"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": ">",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "AmclNode::laser_min_range_",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1211:7, col:74>",
                            "kind": "assignment",
                            "variable": "range_min",
                            "value": {
                              "kind": "unknown"
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::map_",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "null-expr"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": ">",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "AmclNode::laser_min_range_",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              }
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1213:7, col:31>",
                            "kind": "assignment",
                            "variable": "range_min",
                            "value": {
                              "kind": "member-var-ref",
                              "qualified_name": "sensor_msgs::LaserScan_<std::allocator<void>>::range_min",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "float-literal",
                                "literal": 0.0
                              },
                              "base": {
                                "kind": "unknown"
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::map_",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "null-expr"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": ">",
                                  "lhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "AmclNode::laser_min_range_",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1213:7, col:31>",
                            "kind": "assignment",
                            "variable": "range_min",
                            "value": {
                              "kind": "member-var-ref",
                              "qualified_name": "sensor_msgs::LaserScan_<std::allocator<void>>::range_min",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "float-literal",
                                "literal": 0.0
                              },
                              "base": {
                                "kind": "unknown"
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::map_",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "null-expr"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": ">",
                                  "lhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "AmclNode::laser_min_range_",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  }
                                }
                              }
                            }
                          }
                        ]
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1215:5, col:51>",
                      "kind": "assignment",
                      "variable": "amcl::AMCLLaserData::ranges",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1221:7, line:1224:50>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": []
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": []
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1237:5, line:1241:5>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1240:7, col:19>",
                            "kind": "assignment",
                            "variable": "resampled",
                            "value": {
                              "kind": "bool-literal",
                              "literal": true
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::map_",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "null-expr"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "%",
                                  "lhs": {
                                    "kind": "unknown"
                                  },
                                  "rhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "AmclNode::resample_interval_",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1240:7, col:19>",
                            "kind": "assignment",
                            "variable": "resampled",
                            "value": {
                              "kind": "bool-literal",
                              "literal": true
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::map_",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "null-expr"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "%",
                                  "lhs": {
                                    "kind": "unknown"
                                  },
                                  "rhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "AmclNode::resample_interval_",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": []
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1248:5, line:1261:5>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1260:7, col:43>",
                            "kind": "publish",
                            "publisher": "particlecloud_pub_",
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::map_",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "null-expr"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "AmclNode::m_force_update",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1260:7, col:43>",
                            "kind": "publish",
                            "publisher": "particlecloud_pub_",
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::map_",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "null-expr"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "AmclNode::m_force_update",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                }
                              }
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": []
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1170:5, col:39>",
                      "kind": "assignment",
                      "variable": "amcl::AMCLSensorData::sensor",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1171:5, col:49>",
                      "kind": "assignment",
                      "variable": "amcl::AMCLLaserData::range_count",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1200:5, col:64 <Spelling=/usr/include/math.h:418:16>>",
                      "kind": "assignment",
                      "variable": "angle_increment",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "-",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "float-literal",
                          "literal": 3.141592653589793
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1215:5, col:51>",
                      "kind": "assignment",
                      "variable": "amcl::AMCLLaserData::ranges",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1264:3, line:1421:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1288:7, col:32>",
                      "kind": "assignment",
                      "variable": "(anonymous struct)::weight",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "weight",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::map_",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "null-expr"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "variable-reference",
                                    "qualified_name": "resampled",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "resampled",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                },
                                "rhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "force_publication",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "AmclNode::map_",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      },
                                      "base": {
                                        "kind": "this-expr"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "null-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "variable-reference",
                                "qualified_name": "resampled",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "hyp_count",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "_pf_sample_set_t::cluster_count",
                              "type": "integer",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "unknown"
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1292:7, line:1296:7>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1294:9, col:38>",
                            "kind": "assignment",
                            "variable": "max_weight",
                            "value": {
                              "kind": "member-var-ref",
                              "qualified_name": "(anonymous struct)::weight",
                              "type": "float",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "unknown"
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "AmclNode::map_",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "int-literal",
                                                  "literal": 0
                                                },
                                                "base": {
                                                  "kind": "this-expr"
                                                }
                                              },
                                              "rhs": {
                                                "kind": "null-expr"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "variable-reference",
                                            "qualified_name": "resampled",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "||",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "resampled",
                                          "type": "bool",
                                          "initial-value": {
                                            "kind": "bool-literal",
                                            "literal": false
                                          }
                                        },
                                        "rhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "force_publication",
                                          "type": "bool",
                                          "initial-value": {
                                            "kind": "bool-literal",
                                            "literal": false
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "AmclNode::map_",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "int-literal",
                                                "literal": 0
                                              },
                                              "base": {
                                                "kind": "this-expr"
                                              }
                                            },
                                            "rhs": {
                                              "kind": "null-expr"
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "resampled",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "hyp_count",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "_pf_sample_set_t::cluster_count",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "unknown"
                                      },
                                      "base": {
                                        "kind": "unknown"
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": ">",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "(anonymous struct)::weight",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "max_weight",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1295:9, col:26>",
                            "kind": "assignment",
                            "variable": "max_weight_hyp",
                            "value": {
                              "kind": "variable-reference",
                              "qualified_name": "hyp_count",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "AmclNode::map_",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "int-literal",
                                                  "literal": 0
                                                },
                                                "base": {
                                                  "kind": "this-expr"
                                                }
                                              },
                                              "rhs": {
                                                "kind": "null-expr"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "variable-reference",
                                            "qualified_name": "resampled",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "||",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "resampled",
                                          "type": "bool",
                                          "initial-value": {
                                            "kind": "bool-literal",
                                            "literal": false
                                          }
                                        },
                                        "rhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "force_publication",
                                          "type": "bool",
                                          "initial-value": {
                                            "kind": "bool-literal",
                                            "literal": false
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "AmclNode::map_",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "int-literal",
                                                "literal": 0
                                              },
                                              "base": {
                                                "kind": "this-expr"
                                              }
                                            },
                                            "rhs": {
                                              "kind": "null-expr"
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "resampled",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "hyp_count",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "_pf_sample_set_t::cluster_count",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "unknown"
                                      },
                                      "base": {
                                        "kind": "unknown"
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": ">",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "(anonymous struct)::weight",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "max_weight",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1294:9, col:38>",
                            "kind": "assignment",
                            "variable": "max_weight",
                            "value": {
                              "kind": "member-var-ref",
                              "qualified_name": "(anonymous struct)::weight",
                              "type": "float",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "unknown"
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "AmclNode::map_",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "int-literal",
                                                  "literal": 0
                                                },
                                                "base": {
                                                  "kind": "this-expr"
                                                }
                                              },
                                              "rhs": {
                                                "kind": "null-expr"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "variable-reference",
                                            "qualified_name": "resampled",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "||",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "resampled",
                                          "type": "bool",
                                          "initial-value": {
                                            "kind": "bool-literal",
                                            "literal": false
                                          }
                                        },
                                        "rhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "force_publication",
                                          "type": "bool",
                                          "initial-value": {
                                            "kind": "bool-literal",
                                            "literal": false
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "AmclNode::map_",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "int-literal",
                                                "literal": 0
                                              },
                                              "base": {
                                                "kind": "this-expr"
                                              }
                                            },
                                            "rhs": {
                                              "kind": "null-expr"
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "resampled",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "hyp_count",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "_pf_sample_set_t::cluster_count",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "unknown"
                                      },
                                      "base": {
                                        "kind": "unknown"
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": ">",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "(anonymous struct)::weight",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "max_weight",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1295:9, col:26>",
                            "kind": "assignment",
                            "variable": "max_weight_hyp",
                            "value": {
                              "kind": "variable-reference",
                              "qualified_name": "hyp_count",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "AmclNode::map_",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "int-literal",
                                                  "literal": 0
                                                },
                                                "base": {
                                                  "kind": "this-expr"
                                                }
                                              },
                                              "rhs": {
                                                "kind": "null-expr"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "variable-reference",
                                            "qualified_name": "resampled",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "||",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "resampled",
                                          "type": "bool",
                                          "initial-value": {
                                            "kind": "bool-literal",
                                            "literal": false
                                          }
                                        },
                                        "rhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "force_publication",
                                          "type": "bool",
                                          "initial-value": {
                                            "kind": "bool-literal",
                                            "literal": false
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "AmclNode::map_",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "int-literal",
                                                "literal": 0
                                              },
                                              "base": {
                                                "kind": "this-expr"
                                              }
                                            },
                                            "rhs": {
                                              "kind": "null-expr"
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "resampled",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "hyp_count",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "_pf_sample_set_t::cluster_count",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "unknown"
                                      },
                                      "base": {
                                        "kind": "unknown"
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": ">",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "(anonymous struct)::weight",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "max_weight",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  }
                                }
                              }
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": []
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1299:5, line:1397:5>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1317:7, col:69>",
                            "kind": "assignment",
                            "variable": "geometry_msgs::Point_<std::allocator<void>>::x",
                            "value": {
                              "kind": "unknown"
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "AmclNode::map_",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": 0
                                            },
                                            "base": {
                                              "kind": "this-expr"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "null-expr"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "variable-reference",
                                        "qualified_name": "resampled",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "resampled",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    },
                                    "rhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "force_publication",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "==",
                                        "lhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "AmclNode::map_",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "int-literal",
                                            "literal": 0
                                          },
                                          "base": {
                                            "kind": "this-expr"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "null-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "resampled",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": ">",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "max_weight",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  }
                                },
                                "rhs": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1318:7, col:69>",
                            "kind": "assignment",
                            "variable": "geometry_msgs::Point_<std::allocator<void>>::y",
                            "value": {
                              "kind": "unknown"
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "AmclNode::map_",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": 0
                                            },
                                            "base": {
                                              "kind": "this-expr"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "null-expr"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "variable-reference",
                                        "qualified_name": "resampled",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "resampled",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    },
                                    "rhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "force_publication",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "==",
                                        "lhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "AmclNode::map_",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "int-literal",
                                            "literal": 0
                                          },
                                          "base": {
                                            "kind": "this-expr"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "null-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "resampled",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": ">",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "max_weight",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  }
                                },
                                "rhs": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1348:7, col:26>",
                            "kind": "publish",
                            "publisher": "pose_pub_",
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "unknown"
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "variable-reference",
                                        "qualified_name": "resampled",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "resampled",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    },
                                    "rhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "force_publication",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "unknown"
                                  },
                                  "rhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "resampled",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": ">",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "max_weight",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  }
                                },
                                "rhs": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1379:7, col:26>",
                            "kind": "assignment",
                            "variable": "AmclNode::latest_tf_valid_",
                            "value": {
                              "kind": "bool-literal",
                              "literal": true
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "AmclNode::map_",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": 0
                                            },
                                            "base": {
                                              "kind": "this-expr"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "null-expr"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "variable-reference",
                                        "qualified_name": "resampled",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "resampled",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    },
                                    "rhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "force_publication",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "==",
                                        "lhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "AmclNode::map_",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "int-literal",
                                            "literal": 0
                                          },
                                          "base": {
                                            "kind": "this-expr"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "null-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "resampled",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": ">",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "max_weight",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  }
                                },
                                "rhs": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1381:7, line:1392:7>",
                            "kind": "if",
                            "trueBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": [
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1390:9, col:49>",
                                  "kind": "publish",
                                  "publisher": "tf_broadcaster",
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "||",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "member-var-ref",
                                                    "qualified_name": "AmclNode::map_",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "int-literal",
                                                      "literal": 0
                                                    },
                                                    "base": {
                                                      "kind": "this-expr"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "null-expr"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "unknown"
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "variable-reference",
                                                "qualified_name": "resampled",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "resampled",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "force_publication",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "member-var-ref",
                                                  "qualified_name": "AmclNode::map_",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": 0
                                                  },
                                                  "base": {
                                                    "kind": "this-expr"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "null-expr"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "resampled",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "max_weight",
                                          "type": "float",
                                          "initial-value": {
                                            "kind": "float-literal",
                                            "literal": 0.0
                                          }
                                        },
                                        "rhs": {
                                          "kind": "float-literal",
                                          "literal": 0.0
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::tf_broadcast_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "bool-literal",
                                        "literal": true
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1391:9, col:33>",
                                  "kind": "assignment",
                                  "variable": "AmclNode::sent_first_transform_",
                                  "value": {
                                    "kind": "bool-literal",
                                    "literal": true
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "||",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "member-var-ref",
                                                    "qualified_name": "AmclNode::map_",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "int-literal",
                                                      "literal": 0
                                                    },
                                                    "base": {
                                                      "kind": "this-expr"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "null-expr"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "unknown"
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "variable-reference",
                                                "qualified_name": "resampled",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "resampled",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "force_publication",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "member-var-ref",
                                                  "qualified_name": "AmclNode::map_",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": 0
                                                  },
                                                  "base": {
                                                    "kind": "this-expr"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "null-expr"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "resampled",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "max_weight",
                                          "type": "float",
                                          "initial-value": {
                                            "kind": "float-literal",
                                            "literal": 0.0
                                          }
                                        },
                                        "rhs": {
                                          "kind": "float-literal",
                                          "literal": 0.0
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::tf_broadcast_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "bool-literal",
                                        "literal": true
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1390:9, col:49>",
                                  "kind": "publish",
                                  "publisher": "tf_broadcaster",
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "||",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "member-var-ref",
                                                    "qualified_name": "AmclNode::map_",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "int-literal",
                                                      "literal": 0
                                                    },
                                                    "base": {
                                                      "kind": "this-expr"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "null-expr"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "unknown"
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "variable-reference",
                                                "qualified_name": "resampled",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "resampled",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "force_publication",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "member-var-ref",
                                                  "qualified_name": "AmclNode::map_",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": 0
                                                  },
                                                  "base": {
                                                    "kind": "this-expr"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "null-expr"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "resampled",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "max_weight",
                                          "type": "float",
                                          "initial-value": {
                                            "kind": "float-literal",
                                            "literal": 0.0
                                          }
                                        },
                                        "rhs": {
                                          "kind": "float-literal",
                                          "literal": 0.0
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::tf_broadcast_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "bool-literal",
                                        "literal": true
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1391:9, col:33>",
                                  "kind": "assignment",
                                  "variable": "AmclNode::sent_first_transform_",
                                  "value": {
                                    "kind": "bool-literal",
                                    "literal": true
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "||",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "member-var-ref",
                                                    "qualified_name": "AmclNode::map_",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "int-literal",
                                                      "literal": 0
                                                    },
                                                    "base": {
                                                      "kind": "this-expr"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "null-expr"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "unknown"
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "variable-reference",
                                                "qualified_name": "resampled",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "resampled",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "force_publication",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "member-var-ref",
                                                  "qualified_name": "AmclNode::map_",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": 0
                                                  },
                                                  "base": {
                                                    "kind": "this-expr"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "null-expr"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "resampled",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "max_weight",
                                          "type": "float",
                                          "initial-value": {
                                            "kind": "float-literal",
                                            "literal": 0.0
                                          }
                                        },
                                        "rhs": {
                                          "kind": "float-literal",
                                          "literal": 0.0
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::tf_broadcast_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "bool-literal",
                                        "literal": true
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "falseBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": []
                            },
                            "condition": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1317:7, col:69>",
                            "kind": "assignment",
                            "variable": "geometry_msgs::Point_<std::allocator<void>>::x",
                            "value": {
                              "kind": "unknown"
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "AmclNode::map_",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": 0
                                            },
                                            "base": {
                                              "kind": "this-expr"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "null-expr"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "variable-reference",
                                        "qualified_name": "resampled",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "resampled",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    },
                                    "rhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "force_publication",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "==",
                                        "lhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "AmclNode::map_",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "int-literal",
                                            "literal": 0
                                          },
                                          "base": {
                                            "kind": "this-expr"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "null-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "resampled",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": ">",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "max_weight",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  }
                                },
                                "rhs": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1318:7, col:69>",
                            "kind": "assignment",
                            "variable": "geometry_msgs::Point_<std::allocator<void>>::y",
                            "value": {
                              "kind": "unknown"
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "AmclNode::map_",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": 0
                                            },
                                            "base": {
                                              "kind": "this-expr"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "null-expr"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "variable-reference",
                                        "qualified_name": "resampled",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "resampled",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    },
                                    "rhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "force_publication",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "==",
                                        "lhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "AmclNode::map_",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "int-literal",
                                            "literal": 0
                                          },
                                          "base": {
                                            "kind": "this-expr"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "null-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "resampled",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": ">",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "max_weight",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  }
                                },
                                "rhs": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1348:7, col:26>",
                            "kind": "publish",
                            "publisher": "pose_pub_",
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "unknown"
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "variable-reference",
                                        "qualified_name": "resampled",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "resampled",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    },
                                    "rhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "force_publication",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "unknown"
                                  },
                                  "rhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "resampled",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": ">",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "max_weight",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  }
                                },
                                "rhs": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1379:7, col:26>",
                            "kind": "assignment",
                            "variable": "AmclNode::latest_tf_valid_",
                            "value": {
                              "kind": "bool-literal",
                              "literal": true
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "AmclNode::map_",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": 0
                                            },
                                            "base": {
                                              "kind": "this-expr"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "null-expr"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "variable-reference",
                                        "qualified_name": "resampled",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "resampled",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    },
                                    "rhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "force_publication",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "==",
                                        "lhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "AmclNode::map_",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "int-literal",
                                            "literal": 0
                                          },
                                          "base": {
                                            "kind": "this-expr"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "null-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "resampled",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": ">",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "max_weight",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  }
                                },
                                "rhs": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              }
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": []
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1288:7, col:32>",
                      "kind": "assignment",
                      "variable": "(anonymous struct)::weight",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "weight",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::map_",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "null-expr"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "variable-reference",
                                    "qualified_name": "resampled",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "resampled",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                },
                                "rhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "force_publication",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "AmclNode::map_",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      },
                                      "base": {
                                        "kind": "this-expr"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "null-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "variable-reference",
                                "qualified_name": "resampled",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "hyp_count",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "_pf_sample_set_t::cluster_count",
                              "type": "integer",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "unknown"
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1399:8, line:1421:3>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1401:5, line:1411:5>",
                            "kind": "if",
                            "trueBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": [
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1410:7, col:47>",
                                  "kind": "publish",
                                  "publisher": "tf_broadcaster",
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "member-var-ref",
                                                  "qualified_name": "AmclNode::map_",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": 0
                                                  },
                                                  "base": {
                                                    "kind": "this-expr"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "null-expr"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "variable-reference",
                                              "qualified_name": "resampled",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "resampled",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "force_publication",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::latest_tf_valid_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::tf_broadcast_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "bool-literal",
                                        "literal": true
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1410:7, col:47>",
                                  "kind": "publish",
                                  "publisher": "tf_broadcaster",
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "member-var-ref",
                                                  "qualified_name": "AmclNode::map_",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": 0
                                                  },
                                                  "base": {
                                                    "kind": "this-expr"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "null-expr"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "variable-reference",
                                              "qualified_name": "resampled",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "resampled",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "force_publication",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::latest_tf_valid_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::tf_broadcast_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "bool-literal",
                                        "literal": true
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "falseBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": []
                            },
                            "condition": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1415:5, line:1420:5>",
                            "kind": "if",
                            "trueBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": [
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1418:7, col:30>",
                                  "kind": "call",
                                  "callee": "AmclNode::savePoseToServer",
                                  "arguments": {},
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "member-var-ref",
                                                  "qualified_name": "AmclNode::map_",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": 0
                                                  },
                                                  "base": {
                                                    "kind": "this-expr"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "null-expr"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "variable-reference",
                                              "qualified_name": "resampled",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "resampled",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "force_publication",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::latest_tf_valid_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "unknown"
                                        },
                                        "rhs": {
                                          "kind": "float-literal",
                                          "literal": 0.0
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": ">=",
                                        "lhs": {
                                          "kind": "unknown"
                                        },
                                        "rhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "AmclNode::save_pose_period",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "unknown"
                                          },
                                          "base": {
                                            "kind": "this-expr"
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1418:7, col:30>",
                                  "kind": "call",
                                  "callee": "AmclNode::savePoseToServer",
                                  "arguments": {},
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "member-var-ref",
                                                  "qualified_name": "AmclNode::map_",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": 0
                                                  },
                                                  "base": {
                                                    "kind": "this-expr"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "null-expr"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "variable-reference",
                                              "qualified_name": "resampled",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "resampled",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "force_publication",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::latest_tf_valid_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "unknown"
                                        },
                                        "rhs": {
                                          "kind": "float-literal",
                                          "literal": 0.0
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": ">=",
                                        "lhs": {
                                          "kind": "unknown"
                                        },
                                        "rhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "AmclNode::save_pose_period",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "unknown"
                                          },
                                          "base": {
                                            "kind": "this-expr"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "falseBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": []
                            },
                            "condition": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": []
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  ]
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              }
            ]
          }
        },
        {
          "name": "AmclNode::savePoseToServer",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:701:3, col:66>",
                "kind": "writes-to-param",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": "~"
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "initial_pose_x"
                  }
                },
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:702:3, col:66>",
                "kind": "writes-to-param",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": "~"
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "initial_pose_y"
                  }
                },
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:703:3, col:45>",
                "kind": "writes-to-param",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": "~"
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "initial_pose_a"
                  }
                },
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:704:3, line:705:77>",
                "kind": "writes-to-param",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": "~"
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "initial_cov_xx"
                  }
                },
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:706:3, line:707:77>",
                "kind": "writes-to-param",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": "~"
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "initial_cov_yy"
                  }
                },
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:708:3, line:709:77>",
                "kind": "writes-to-param",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": "~"
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "initial_cov_aa"
                  }
                },
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:701:3, col:66>",
                "kind": "writes-to-param",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": "~"
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "initial_pose_x"
                  }
                },
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:702:3, col:66>",
                "kind": "writes-to-param",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": "~"
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "initial_pose_y"
                  }
                },
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:703:3, col:45>",
                "kind": "writes-to-param",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": "~"
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "initial_pose_a"
                  }
                },
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:704:3, line:705:77>",
                "kind": "writes-to-param",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": "~"
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "initial_cov_xx"
                  }
                },
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:706:3, line:707:77>",
                "kind": "writes-to-param",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": "~"
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "initial_cov_yy"
                  }
                },
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:708:3, line:709:77>",
                "kind": "writes-to-param",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": "~"
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "initial_cov_aa"
                  }
                },
                "value": {
                  "kind": "unknown"
                }
              }
            ]
          }
        },
        {
          "name": "AmclNode::reconfigureCB",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:466:5, col:31>",
                "kind": "assignment",
                "variable": "AmclNode::first_reconfigure_call_",
                "value": {
                  "kind": "bool-literal",
                  "literal": false
                },
                "path_condition": {
                  "kind": "member-var-ref",
                  "qualified_name": "AmclNode::first_reconfigure_call_",
                  "type": "bool",
                  "initial-value": {
                    "kind": "bool-literal",
                    "literal": true
                  },
                  "base": {
                    "kind": "this-expr"
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:474:5, col:31>",
                "kind": "assignment",
                "variable": "amcl::AMCLConfig::restore_defaults",
                "value": {
                  "kind": "bool-literal",
                  "literal": false
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::first_reconfigure_call_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "bool-literal",
                        "literal": true
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "amcl::AMCLConfig::restore_defaults",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": false
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "config",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:477:3, col:22>",
                "kind": "assignment",
                "variable": "AmclNode::d_thresh_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::update_min_d",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:478:3, col:22>",
                "kind": "assignment",
                "variable": "AmclNode::a_thresh_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::update_min_a",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:480:3, col:31>",
                "kind": "assignment",
                "variable": "AmclNode::resample_interval_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::resample_interval",
                  "type": "integer",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:482:3, col:29>",
                "kind": "assignment",
                "variable": "AmclNode::laser_min_range_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::laser_min_range",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:483:3, col:29>",
                "kind": "assignment",
                "variable": "AmclNode::laser_max_range_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::laser_max_range",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:490:3, col:23>",
                "kind": "assignment",
                "variable": "AmclNode::max_beams_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::laser_max_beams",
                  "type": "integer",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:491:3, col:20>",
                "kind": "assignment",
                "variable": "AmclNode::alpha1_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::odom_alpha1",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:492:3, col:20>",
                "kind": "assignment",
                "variable": "AmclNode::alpha2_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::odom_alpha2",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:493:3, col:20>",
                "kind": "assignment",
                "variable": "AmclNode::alpha3_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::odom_alpha3",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:494:3, col:20>",
                "kind": "assignment",
                "variable": "AmclNode::alpha4_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::odom_alpha4",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:495:3, col:20>",
                "kind": "assignment",
                "variable": "AmclNode::alpha5_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::odom_alpha5",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:497:3, col:19>",
                "kind": "assignment",
                "variable": "AmclNode::z_hit_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::laser_z_hit",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:498:3, col:21>",
                "kind": "assignment",
                "variable": "AmclNode::z_short_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::laser_z_short",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:499:3, col:19>",
                "kind": "assignment",
                "variable": "AmclNode::z_max_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::laser_z_max",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:500:3, col:20>",
                "kind": "assignment",
                "variable": "AmclNode::z_rand_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::laser_z_rand",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:501:3, col:23>",
                "kind": "assignment",
                "variable": "AmclNode::sigma_hit_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::laser_sigma_hit",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:502:3, col:26>",
                "kind": "assignment",
                "variable": "AmclNode::lambda_short_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::laser_lambda_short",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:503:3, col:39>",
                "kind": "assignment",
                "variable": "AmclNode::laser_likelihood_max_dist_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::laser_likelihood_max_dist",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:506:5, col:25>",
                "kind": "assignment",
                "variable": "AmclNode::laser_model_type_",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "amcl::LASER_MODEL_BEAM",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 0
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 0
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::first_reconfigure_call_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "bool-literal",
                        "literal": true
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "amcl::AMCLConfig::laser_model_type",
                      "type": "string",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "variable-reference",
                        "qualified_name": "config",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "beam"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:508:5, col:25>",
                "kind": "assignment",
                "variable": "AmclNode::laser_model_type_",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "amcl::LASER_MODEL_LIKELIHOOD_FIELD",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 1
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 1
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "member-var-ref",
                        "qualified_name": "AmclNode::first_reconfigure_call_",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": true
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "amcl::AMCLConfig::laser_model_type",
                          "type": "string",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "config",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "beam"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "amcl::AMCLConfig::laser_model_type",
                      "type": "string",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "variable-reference",
                        "qualified_name": "config",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "likelihood_field"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:510:5, col:25>",
                "kind": "assignment",
                "variable": "AmclNode::laser_model_type_",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "amcl::LASER_MODEL_LIKELIHOOD_FIELD_PROB",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 2
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 2
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::first_reconfigure_call_",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": true
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "amcl::AMCLConfig::laser_model_type",
                            "type": "string",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "variable-reference",
                              "qualified_name": "config",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "string-literal",
                            "literal": "beam"
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "amcl::AMCLConfig::laser_model_type",
                          "type": "string",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "config",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "likelihood_field"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "amcl::AMCLConfig::laser_model_type",
                      "type": "string",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "variable-reference",
                        "qualified_name": "config",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "likelihood_field_prob"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:513:5, col:24>",
                "kind": "assignment",
                "variable": "AmclNode::odom_model_type_",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "amcl::ODOM_MODEL_DIFF",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 0
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 0
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::first_reconfigure_call_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "bool-literal",
                        "literal": true
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "amcl::AMCLConfig::odom_model_type",
                      "type": "string",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "variable-reference",
                        "qualified_name": "config",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "diff"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:515:5, col:24>",
                "kind": "assignment",
                "variable": "AmclNode::odom_model_type_",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "amcl::ODOM_MODEL_OMNI",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 1
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 1
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "member-var-ref",
                        "qualified_name": "AmclNode::first_reconfigure_call_",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": true
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "amcl::AMCLConfig::odom_model_type",
                          "type": "string",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "config",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "diff"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "amcl::AMCLConfig::odom_model_type",
                      "type": "string",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "variable-reference",
                        "qualified_name": "config",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "omni"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:517:5, col:24>",
                "kind": "assignment",
                "variable": "AmclNode::odom_model_type_",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "amcl::ODOM_MODEL_DIFF_CORRECTED",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 2
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 2
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::first_reconfigure_call_",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": true
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "amcl::AMCLConfig::odom_model_type",
                            "type": "string",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "variable-reference",
                              "qualified_name": "config",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "string-literal",
                            "literal": "diff"
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "amcl::AMCLConfig::odom_model_type",
                          "type": "string",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "config",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "omni"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "amcl::AMCLConfig::odom_model_type",
                      "type": "string",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "variable-reference",
                        "qualified_name": "config",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "diff-corrected"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:519:5, col:24>",
                "kind": "assignment",
                "variable": "AmclNode::odom_model_type_",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "amcl::ODOM_MODEL_OMNI_CORRECTED",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 3
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 3
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::first_reconfigure_call_",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": true
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "amcl::AMCLConfig::odom_model_type",
                              "type": "string",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "qualified_name": "config",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "unknown"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "string-literal",
                              "literal": "diff"
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "amcl::AMCLConfig::odom_model_type",
                            "type": "string",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "variable-reference",
                              "qualified_name": "config",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "string-literal",
                            "literal": "omni"
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "amcl::AMCLConfig::odom_model_type",
                          "type": "string",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "config",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "diff-corrected"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "amcl::AMCLConfig::odom_model_type",
                      "type": "string",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "variable-reference",
                        "qualified_name": "config",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "omni-corrected"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:524:5, col:35>",
                "kind": "assignment",
                "variable": "amcl::AMCLConfig::max_particles",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::min_particles",
                  "type": "integer",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::first_reconfigure_call_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "bool-literal",
                        "literal": true
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": ">",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "amcl::AMCLConfig::min_particles",
                      "type": "integer",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "variable-reference",
                        "qualified_name": "config",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "amcl::AMCLConfig::max_particles",
                      "type": "integer",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "variable-reference",
                        "qualified_name": "config",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:527:3, col:27>",
                "kind": "assignment",
                "variable": "AmclNode::min_particles_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::min_particles",
                  "type": "integer",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:528:3, col:27>",
                "kind": "assignment",
                "variable": "AmclNode::max_particles_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::max_particles",
                  "type": "integer",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:529:3, col:24>",
                "kind": "assignment",
                "variable": "AmclNode::alpha_slow_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::recovery_alpha_slow",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:530:3, col:24>",
                "kind": "assignment",
                "variable": "AmclNode::alpha_fast_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::recovery_alpha_fast",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:531:3, col:26>",
                "kind": "assignment",
                "variable": "AmclNode::tf_broadcast_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::tf_broadcast",
                  "type": "bool",
                  "initial-value": {
                    "kind": "bool-literal",
                    "literal": false
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:533:3, col:24>",
                "kind": "assignment",
                "variable": "AmclNode::do_beamskip_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::do_beamskip",
                  "type": "bool",
                  "initial-value": {
                    "kind": "bool-literal",
                    "literal": false
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:534:3, col:32>",
                "kind": "assignment",
                "variable": "AmclNode::beam_skip_distance_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::beam_skip_distance",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:535:3, col:33>",
                "kind": "assignment",
                "variable": "AmclNode::beam_skip_threshold_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::beam_skip_threshold",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:537:3, line:540:30>",
                "kind": "assignment",
                "variable": "AmclNode::pf_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:541:3, col:20>",
                "kind": "assignment",
                "variable": "AmclNode::pf_err_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::kld_err",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:542:3, col:18>",
                "kind": "assignment",
                "variable": "AmclNode::pf_z_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::kld_z",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:543:3, col:18>",
                "kind": "assignment",
                "variable": "_pf_t::pop_err",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "AmclNode::pf_err_",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "this-expr"
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:544:3, col:16>",
                "kind": "assignment",
                "variable": "_pf_t::pop_z",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "AmclNode::pf_z_",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "this-expr"
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:556:3, col:14>",
                "kind": "assignment",
                "variable": "AmclNode::pf_init_",
                "value": {
                  "kind": "bool-literal",
                  "literal": false
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:561:3, col:24>",
                "kind": "assignment",
                "variable": "AmclNode::odom_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:566:3, col:42>",
                "kind": "assignment",
                "variable": "AmclNode::laser_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:591:3, line:595:60>",
                "kind": "assignment",
                "variable": "AmclNode::laser_scan_filter_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:596:3, line:597:61>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "unknown"
                },
                "format": "boost/_bi::bind_t",
                "callback-name": "AmclNode::laserReceived"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:596:3, line:597:61>",
                "kind": "call",
                "callee": "AmclNode::laserReceived",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:599:23, col:91>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "initialpose"
                  }
                },
                "format": "geometry_msgs/PoseWithCovarianceStamped",
                "callback-name": "AmclNode::initialPoseReceived"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:599:23, col:91>",
                "kind": "call",
                "callee": "AmclNode::initialPoseReceived",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:464:3, line:469:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:466:5, col:31>",
                      "kind": "assignment",
                      "variable": "AmclNode::first_reconfigure_call_",
                      "value": {
                        "kind": "bool-literal",
                        "literal": false
                      },
                      "path_condition": {
                        "kind": "member-var-ref",
                        "qualified_name": "AmclNode::first_reconfigure_call_",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": true
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:466:5, col:31>",
                      "kind": "assignment",
                      "variable": "AmclNode::first_reconfigure_call_",
                      "value": {
                        "kind": "bool-literal",
                        "literal": false
                      },
                      "path_condition": {
                        "kind": "member-var-ref",
                        "qualified_name": "AmclNode::first_reconfigure_call_",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": true
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:471:3, line:475:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:474:5, col:31>",
                      "kind": "assignment",
                      "variable": "amcl::AMCLConfig::restore_defaults",
                      "value": {
                        "kind": "bool-literal",
                        "literal": false
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::first_reconfigure_call_",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": true
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "amcl::AMCLConfig::restore_defaults",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "config",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:474:5, col:31>",
                      "kind": "assignment",
                      "variable": "amcl::AMCLConfig::restore_defaults",
                      "value": {
                        "kind": "bool-literal",
                        "literal": false
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::first_reconfigure_call_",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": true
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "amcl::AMCLConfig::restore_defaults",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "config",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:477:3, col:22>",
                "kind": "assignment",
                "variable": "AmclNode::d_thresh_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::update_min_d",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:478:3, col:22>",
                "kind": "assignment",
                "variable": "AmclNode::a_thresh_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::update_min_a",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:480:3, col:31>",
                "kind": "assignment",
                "variable": "AmclNode::resample_interval_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::resample_interval",
                  "type": "integer",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:482:3, col:29>",
                "kind": "assignment",
                "variable": "AmclNode::laser_min_range_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::laser_min_range",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:483:3, col:29>",
                "kind": "assignment",
                "variable": "AmclNode::laser_max_range_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::laser_max_range",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:490:3, col:23>",
                "kind": "assignment",
                "variable": "AmclNode::max_beams_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::laser_max_beams",
                  "type": "integer",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:491:3, col:20>",
                "kind": "assignment",
                "variable": "AmclNode::alpha1_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::odom_alpha1",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:492:3, col:20>",
                "kind": "assignment",
                "variable": "AmclNode::alpha2_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::odom_alpha2",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:493:3, col:20>",
                "kind": "assignment",
                "variable": "AmclNode::alpha3_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::odom_alpha3",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:494:3, col:20>",
                "kind": "assignment",
                "variable": "AmclNode::alpha4_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::odom_alpha4",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:495:3, col:20>",
                "kind": "assignment",
                "variable": "AmclNode::alpha5_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::odom_alpha5",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:497:3, col:19>",
                "kind": "assignment",
                "variable": "AmclNode::z_hit_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::laser_z_hit",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:498:3, col:21>",
                "kind": "assignment",
                "variable": "AmclNode::z_short_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::laser_z_short",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:499:3, col:19>",
                "kind": "assignment",
                "variable": "AmclNode::z_max_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::laser_z_max",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:500:3, col:20>",
                "kind": "assignment",
                "variable": "AmclNode::z_rand_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::laser_z_rand",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:501:3, col:23>",
                "kind": "assignment",
                "variable": "AmclNode::sigma_hit_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::laser_sigma_hit",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:502:3, col:26>",
                "kind": "assignment",
                "variable": "AmclNode::lambda_short_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::laser_lambda_short",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:503:3, col:39>",
                "kind": "assignment",
                "variable": "AmclNode::laser_likelihood_max_dist_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::laser_likelihood_max_dist",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:505:3, line:510:25>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:506:5, col:25>",
                      "kind": "assignment",
                      "variable": "AmclNode::laser_model_type_",
                      "value": {
                        "kind": "enum-ref",
                        "qualified_name": "amcl::LASER_MODEL_BEAM",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        },
                        "value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::first_reconfigure_call_",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": true
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "amcl::AMCLConfig::laser_model_type",
                            "type": "string",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "variable-reference",
                              "qualified_name": "config",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "string-literal",
                            "literal": "beam"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:506:5, col:25>",
                      "kind": "assignment",
                      "variable": "AmclNode::laser_model_type_",
                      "value": {
                        "kind": "enum-ref",
                        "qualified_name": "amcl::LASER_MODEL_BEAM",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        },
                        "value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::first_reconfigure_call_",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": true
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "amcl::AMCLConfig::laser_model_type",
                            "type": "string",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "variable-reference",
                              "qualified_name": "config",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "string-literal",
                            "literal": "beam"
                          }
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:507:8, line:510:25>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:508:5, col:25>",
                            "kind": "assignment",
                            "variable": "AmclNode::laser_model_type_",
                            "value": {
                              "kind": "enum-ref",
                              "qualified_name": "amcl::LASER_MODEL_LIKELIHOOD_FIELD",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              },
                              "value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "AmclNode::first_reconfigure_call_",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": true
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "amcl::AMCLConfig::laser_model_type",
                                      "type": "string",
                                      "initial-value": {
                                        "kind": "unknown"
                                      },
                                      "base": {
                                        "kind": "variable-reference",
                                        "qualified_name": "config",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "string-literal",
                                      "literal": "beam"
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "amcl::AMCLConfig::laser_model_type",
                                  "type": "string",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "variable-reference",
                                    "qualified_name": "config",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "string-literal",
                                  "literal": "likelihood_field"
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:508:5, col:25>",
                            "kind": "assignment",
                            "variable": "AmclNode::laser_model_type_",
                            "value": {
                              "kind": "enum-ref",
                              "qualified_name": "amcl::LASER_MODEL_LIKELIHOOD_FIELD",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              },
                              "value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "AmclNode::first_reconfigure_call_",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": true
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "amcl::AMCLConfig::laser_model_type",
                                      "type": "string",
                                      "initial-value": {
                                        "kind": "unknown"
                                      },
                                      "base": {
                                        "kind": "variable-reference",
                                        "qualified_name": "config",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "string-literal",
                                      "literal": "beam"
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "amcl::AMCLConfig::laser_model_type",
                                  "type": "string",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "variable-reference",
                                    "qualified_name": "config",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "string-literal",
                                  "literal": "likelihood_field"
                                }
                              }
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:509:8, line:510:25>",
                            "kind": "if",
                            "trueBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": [
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:510:5, col:25>",
                                  "kind": "assignment",
                                  "variable": "AmclNode::laser_model_type_",
                                  "value": {
                                    "kind": "enum-ref",
                                    "qualified_name": "amcl::LASER_MODEL_LIKELIHOOD_FIELD_PROB",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 2
                                    },
                                    "value": {
                                      "kind": "int-literal",
                                      "literal": 2
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "AmclNode::first_reconfigure_call_",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "bool-literal",
                                              "literal": true
                                            },
                                            "base": {
                                              "kind": "this-expr"
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "amcl::AMCLConfig::laser_model_type",
                                              "type": "string",
                                              "initial-value": {
                                                "kind": "unknown"
                                              },
                                              "base": {
                                                "kind": "variable-reference",
                                                "qualified_name": "config",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "string-literal",
                                              "literal": "beam"
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "amcl::AMCLConfig::laser_model_type",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "unknown"
                                            },
                                            "base": {
                                              "kind": "variable-reference",
                                              "qualified_name": "config",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "unknown"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "likelihood_field"
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "amcl::AMCLConfig::laser_model_type",
                                        "type": "string",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "variable-reference",
                                          "qualified_name": "config",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "string-literal",
                                        "literal": "likelihood_field_prob"
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:510:5, col:25>",
                                  "kind": "assignment",
                                  "variable": "AmclNode::laser_model_type_",
                                  "value": {
                                    "kind": "enum-ref",
                                    "qualified_name": "amcl::LASER_MODEL_LIKELIHOOD_FIELD_PROB",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 2
                                    },
                                    "value": {
                                      "kind": "int-literal",
                                      "literal": 2
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "AmclNode::first_reconfigure_call_",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "bool-literal",
                                              "literal": true
                                            },
                                            "base": {
                                              "kind": "this-expr"
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "amcl::AMCLConfig::laser_model_type",
                                              "type": "string",
                                              "initial-value": {
                                                "kind": "unknown"
                                              },
                                              "base": {
                                                "kind": "variable-reference",
                                                "qualified_name": "config",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "string-literal",
                                              "literal": "beam"
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "amcl::AMCLConfig::laser_model_type",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "unknown"
                                            },
                                            "base": {
                                              "kind": "variable-reference",
                                              "qualified_name": "config",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "unknown"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "likelihood_field"
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "amcl::AMCLConfig::laser_model_type",
                                        "type": "string",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "variable-reference",
                                          "qualified_name": "config",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "string-literal",
                                        "literal": "likelihood_field_prob"
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "falseBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": []
                            },
                            "condition": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        ]
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  ]
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:512:3, line:519:24>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:513:5, col:24>",
                      "kind": "assignment",
                      "variable": "AmclNode::odom_model_type_",
                      "value": {
                        "kind": "enum-ref",
                        "qualified_name": "amcl::ODOM_MODEL_DIFF",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        },
                        "value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::first_reconfigure_call_",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": true
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "amcl::AMCLConfig::odom_model_type",
                            "type": "string",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "variable-reference",
                              "qualified_name": "config",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "string-literal",
                            "literal": "diff"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:513:5, col:24>",
                      "kind": "assignment",
                      "variable": "AmclNode::odom_model_type_",
                      "value": {
                        "kind": "enum-ref",
                        "qualified_name": "amcl::ODOM_MODEL_DIFF",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        },
                        "value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::first_reconfigure_call_",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": true
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "amcl::AMCLConfig::odom_model_type",
                            "type": "string",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "variable-reference",
                              "qualified_name": "config",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "string-literal",
                            "literal": "diff"
                          }
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:514:8, line:519:24>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:515:5, col:24>",
                            "kind": "assignment",
                            "variable": "AmclNode::odom_model_type_",
                            "value": {
                              "kind": "enum-ref",
                              "qualified_name": "amcl::ODOM_MODEL_OMNI",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              },
                              "value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "AmclNode::first_reconfigure_call_",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": true
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "amcl::AMCLConfig::odom_model_type",
                                      "type": "string",
                                      "initial-value": {
                                        "kind": "unknown"
                                      },
                                      "base": {
                                        "kind": "variable-reference",
                                        "qualified_name": "config",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "string-literal",
                                      "literal": "diff"
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "amcl::AMCLConfig::odom_model_type",
                                  "type": "string",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "variable-reference",
                                    "qualified_name": "config",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "string-literal",
                                  "literal": "omni"
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:515:5, col:24>",
                            "kind": "assignment",
                            "variable": "AmclNode::odom_model_type_",
                            "value": {
                              "kind": "enum-ref",
                              "qualified_name": "amcl::ODOM_MODEL_OMNI",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              },
                              "value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "AmclNode::first_reconfigure_call_",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": true
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "amcl::AMCLConfig::odom_model_type",
                                      "type": "string",
                                      "initial-value": {
                                        "kind": "unknown"
                                      },
                                      "base": {
                                        "kind": "variable-reference",
                                        "qualified_name": "config",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "string-literal",
                                      "literal": "diff"
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "amcl::AMCLConfig::odom_model_type",
                                  "type": "string",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "variable-reference",
                                    "qualified_name": "config",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "string-literal",
                                  "literal": "omni"
                                }
                              }
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:516:8, line:519:24>",
                            "kind": "if",
                            "trueBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": [
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:517:5, col:24>",
                                  "kind": "assignment",
                                  "variable": "AmclNode::odom_model_type_",
                                  "value": {
                                    "kind": "enum-ref",
                                    "qualified_name": "amcl::ODOM_MODEL_DIFF_CORRECTED",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 2
                                    },
                                    "value": {
                                      "kind": "int-literal",
                                      "literal": 2
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "AmclNode::first_reconfigure_call_",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "bool-literal",
                                              "literal": true
                                            },
                                            "base": {
                                              "kind": "this-expr"
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "amcl::AMCLConfig::odom_model_type",
                                              "type": "string",
                                              "initial-value": {
                                                "kind": "unknown"
                                              },
                                              "base": {
                                                "kind": "variable-reference",
                                                "qualified_name": "config",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "string-literal",
                                              "literal": "diff"
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "amcl::AMCLConfig::odom_model_type",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "unknown"
                                            },
                                            "base": {
                                              "kind": "variable-reference",
                                              "qualified_name": "config",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "unknown"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "omni"
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "amcl::AMCLConfig::odom_model_type",
                                        "type": "string",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "variable-reference",
                                          "qualified_name": "config",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "string-literal",
                                        "literal": "diff-corrected"
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:517:5, col:24>",
                                  "kind": "assignment",
                                  "variable": "AmclNode::odom_model_type_",
                                  "value": {
                                    "kind": "enum-ref",
                                    "qualified_name": "amcl::ODOM_MODEL_DIFF_CORRECTED",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 2
                                    },
                                    "value": {
                                      "kind": "int-literal",
                                      "literal": 2
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "AmclNode::first_reconfigure_call_",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "bool-literal",
                                              "literal": true
                                            },
                                            "base": {
                                              "kind": "this-expr"
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "amcl::AMCLConfig::odom_model_type",
                                              "type": "string",
                                              "initial-value": {
                                                "kind": "unknown"
                                              },
                                              "base": {
                                                "kind": "variable-reference",
                                                "qualified_name": "config",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "string-literal",
                                              "literal": "diff"
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "amcl::AMCLConfig::odom_model_type",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "unknown"
                                            },
                                            "base": {
                                              "kind": "variable-reference",
                                              "qualified_name": "config",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "unknown"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "omni"
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "amcl::AMCLConfig::odom_model_type",
                                        "type": "string",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "variable-reference",
                                          "qualified_name": "config",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "string-literal",
                                        "literal": "diff-corrected"
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "falseBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": [
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:518:8, line:519:24>",
                                  "kind": "if",
                                  "trueBranchBody": {
                                    "source-location": "",
                                    "kind": "compound",
                                    "statements": [
                                      {
                                        "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:519:5, col:24>",
                                        "kind": "assignment",
                                        "variable": "AmclNode::odom_model_type_",
                                        "value": {
                                          "kind": "enum-ref",
                                          "qualified_name": "amcl::ODOM_MODEL_OMNI_CORRECTED",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "int-literal",
                                            "literal": 3
                                          },
                                          "value": {
                                            "kind": "int-literal",
                                            "literal": 3
                                          }
                                        },
                                        "path_condition": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "negate-expr",
                                                  "subExpr": {
                                                    "kind": "member-var-ref",
                                                    "qualified_name": "AmclNode::first_reconfigure_call_",
                                                    "type": "bool",
                                                    "initial-value": {
                                                      "kind": "bool-literal",
                                                      "literal": true
                                                    },
                                                    "base": {
                                                      "kind": "this-expr"
                                                    }
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "negate-expr",
                                                  "subExpr": {
                                                    "kind": "binary-expr",
                                                    "operator": "==",
                                                    "lhs": {
                                                      "kind": "member-var-ref",
                                                      "qualified_name": "amcl::AMCLConfig::odom_model_type",
                                                      "type": "string",
                                                      "initial-value": {
                                                        "kind": "unknown"
                                                      },
                                                      "base": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "config",
                                                        "type": "unsupported",
                                                        "initial-value": {
                                                          "kind": "unknown"
                                                        }
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "string-literal",
                                                      "literal": "diff"
                                                    }
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "member-var-ref",
                                                    "qualified_name": "amcl::AMCLConfig::odom_model_type",
                                                    "type": "string",
                                                    "initial-value": {
                                                      "kind": "unknown"
                                                    },
                                                    "base": {
                                                      "kind": "variable-reference",
                                                      "qualified_name": "config",
                                                      "type": "unsupported",
                                                      "initial-value": {
                                                        "kind": "unknown"
                                                      }
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "string-literal",
                                                    "literal": "omni"
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "member-var-ref",
                                                  "qualified_name": "amcl::AMCLConfig::odom_model_type",
                                                  "type": "string",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  },
                                                  "base": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "config",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "unknown"
                                                    }
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "string-literal",
                                                  "literal": "diff-corrected"
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "amcl::AMCLConfig::odom_model_type",
                                              "type": "string",
                                              "initial-value": {
                                                "kind": "unknown"
                                              },
                                              "base": {
                                                "kind": "variable-reference",
                                                "qualified_name": "config",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "string-literal",
                                              "literal": "omni-corrected"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:519:5, col:24>",
                                        "kind": "assignment",
                                        "variable": "AmclNode::odom_model_type_",
                                        "value": {
                                          "kind": "enum-ref",
                                          "qualified_name": "amcl::ODOM_MODEL_OMNI_CORRECTED",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "int-literal",
                                            "literal": 3
                                          },
                                          "value": {
                                            "kind": "int-literal",
                                            "literal": 3
                                          }
                                        },
                                        "path_condition": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "negate-expr",
                                                  "subExpr": {
                                                    "kind": "member-var-ref",
                                                    "qualified_name": "AmclNode::first_reconfigure_call_",
                                                    "type": "bool",
                                                    "initial-value": {
                                                      "kind": "bool-literal",
                                                      "literal": true
                                                    },
                                                    "base": {
                                                      "kind": "this-expr"
                                                    }
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "negate-expr",
                                                  "subExpr": {
                                                    "kind": "binary-expr",
                                                    "operator": "==",
                                                    "lhs": {
                                                      "kind": "member-var-ref",
                                                      "qualified_name": "amcl::AMCLConfig::odom_model_type",
                                                      "type": "string",
                                                      "initial-value": {
                                                        "kind": "unknown"
                                                      },
                                                      "base": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "config",
                                                        "type": "unsupported",
                                                        "initial-value": {
                                                          "kind": "unknown"
                                                        }
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "string-literal",
                                                      "literal": "diff"
                                                    }
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "member-var-ref",
                                                    "qualified_name": "amcl::AMCLConfig::odom_model_type",
                                                    "type": "string",
                                                    "initial-value": {
                                                      "kind": "unknown"
                                                    },
                                                    "base": {
                                                      "kind": "variable-reference",
                                                      "qualified_name": "config",
                                                      "type": "unsupported",
                                                      "initial-value": {
                                                        "kind": "unknown"
                                                      }
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "string-literal",
                                                    "literal": "omni"
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "member-var-ref",
                                                  "qualified_name": "amcl::AMCLConfig::odom_model_type",
                                                  "type": "string",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  },
                                                  "base": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "config",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "unknown"
                                                    }
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "string-literal",
                                                  "literal": "diff-corrected"
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "amcl::AMCLConfig::odom_model_type",
                                              "type": "string",
                                              "initial-value": {
                                                "kind": "unknown"
                                              },
                                              "base": {
                                                "kind": "variable-reference",
                                                "qualified_name": "config",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "string-literal",
                                              "literal": "omni-corrected"
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "falseBranchBody": {
                                    "source-location": "",
                                    "kind": "compound",
                                    "statements": []
                                  },
                                  "condition": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                }
                              ]
                            },
                            "condition": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        ]
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  ]
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:521:3, line:525:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:524:5, col:35>",
                      "kind": "assignment",
                      "variable": "amcl::AMCLConfig::max_particles",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "amcl::AMCLConfig::min_particles",
                        "type": "integer",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "config",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::first_reconfigure_call_",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": true
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": ">",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "amcl::AMCLConfig::min_particles",
                            "type": "integer",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "variable-reference",
                              "qualified_name": "config",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "amcl::AMCLConfig::max_particles",
                            "type": "integer",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "variable-reference",
                              "qualified_name": "config",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:524:5, col:35>",
                      "kind": "assignment",
                      "variable": "amcl::AMCLConfig::max_particles",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "amcl::AMCLConfig::min_particles",
                        "type": "integer",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "config",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::first_reconfigure_call_",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": true
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": ">",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "amcl::AMCLConfig::min_particles",
                            "type": "integer",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "variable-reference",
                              "qualified_name": "config",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "amcl::AMCLConfig::max_particles",
                            "type": "integer",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "variable-reference",
                              "qualified_name": "config",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:527:3, col:27>",
                "kind": "assignment",
                "variable": "AmclNode::min_particles_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::min_particles",
                  "type": "integer",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:528:3, col:27>",
                "kind": "assignment",
                "variable": "AmclNode::max_particles_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::max_particles",
                  "type": "integer",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:529:3, col:24>",
                "kind": "assignment",
                "variable": "AmclNode::alpha_slow_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::recovery_alpha_slow",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:530:3, col:24>",
                "kind": "assignment",
                "variable": "AmclNode::alpha_fast_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::recovery_alpha_fast",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:531:3, col:26>",
                "kind": "assignment",
                "variable": "AmclNode::tf_broadcast_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::tf_broadcast",
                  "type": "bool",
                  "initial-value": {
                    "kind": "bool-literal",
                    "literal": false
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:533:3, col:24>",
                "kind": "assignment",
                "variable": "AmclNode::do_beamskip_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::do_beamskip",
                  "type": "bool",
                  "initial-value": {
                    "kind": "bool-literal",
                    "literal": false
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:534:3, col:32>",
                "kind": "assignment",
                "variable": "AmclNode::beam_skip_distance_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::beam_skip_distance",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:535:3, col:33>",
                "kind": "assignment",
                "variable": "AmclNode::beam_skip_threshold_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::beam_skip_threshold",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:537:3, line:540:30>",
                "kind": "assignment",
                "variable": "AmclNode::pf_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:541:3, col:20>",
                "kind": "assignment",
                "variable": "AmclNode::pf_err_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::kld_err",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:542:3, col:18>",
                "kind": "assignment",
                "variable": "AmclNode::pf_z_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::kld_z",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:543:3, col:18>",
                "kind": "assignment",
                "variable": "_pf_t::pop_err",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "AmclNode::pf_err_",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "this-expr"
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:544:3, col:16>",
                "kind": "assignment",
                "variable": "_pf_t::pop_z",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "AmclNode::pf_z_",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "this-expr"
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:556:3, col:14>",
                "kind": "assignment",
                "variable": "AmclNode::pf_init_",
                "value": {
                  "kind": "bool-literal",
                  "literal": false
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:561:3, col:24>",
                "kind": "assignment",
                "variable": "AmclNode::odom_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:566:3, col:42>",
                "kind": "assignment",
                "variable": "AmclNode::laser_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:591:3, line:595:60>",
                "kind": "assignment",
                "variable": "AmclNode::laser_scan_filter_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:596:3, line:597:61>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "unknown"
                },
                "format": "boost/_bi::bind_t",
                "callback-name": "AmclNode::laserReceived"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:596:3, line:597:61>",
                "kind": "call",
                "callee": "AmclNode::laserReceived",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:599:23, col:91>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "initialpose"
                  }
                },
                "format": "geometry_msgs/PoseWithCovarianceStamped",
                "callback-name": "AmclNode::initialPoseReceived"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:599:23, col:91>",
                "kind": "call",
                "callee": "AmclNode::initialPoseReceived",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        },
        {
          "name": "AmclNode::initialPoseReceived",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": []
          }
        },
        {
          "name": "AmclNode::setMapCallback",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1039:3, col:17>",
                "kind": "assignment",
                "variable": "nav_msgs::SetMapResponse_<std::allocator<void>>::success",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1039:3, col:17>",
                "kind": "assignment",
                "variable": "nav_msgs::SetMapResponse_<std::allocator<void>>::success",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        },
        {
          "name": "AmclNode::nomotionUpdateCallback",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1028:2, col:19>",
                "kind": "assignment",
                "variable": "AmclNode::m_force_update",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1028:2, col:19>",
                "kind": "assignment",
                "variable": "AmclNode::m_force_update",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        },
        {
          "name": "main",
          "parameters": [
            {
              "index": 0,
              "name": "argc",
              "type": "integer"
            }
          ],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:288:3, col:31>",
                "kind": "ros-init",
                "name": {
                  "kind": "string-literal",
                  "literal": "amcl"
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:295:27, col:36>",
                "kind": "call",
                "callee": "AmclNode::AmclNode",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:304:5, col:38>",
                "kind": "call",
                "callee": "AmclNode::runFromBag",
                "arguments": {
                  "in_bag_fn": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "argc",
                        "type": "integer",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "argc",
                        "type": "integer",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 3
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "string-literal",
                        "literal": "--run-from-bag"
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:288:3, col:31>",
                "kind": "ros-init",
                "name": {
                  "kind": "string-literal",
                  "literal": "amcl"
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:295:27, col:36>",
                "kind": "call",
                "callee": "AmclNode::AmclNode",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:297:3, line:305:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:302:8, line:305:3>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:304:5, col:38>",
                            "kind": "call",
                            "callee": "AmclNode::runFromBag",
                            "arguments": {
                              "in_bag_fn": {
                                "kind": "unknown"
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "argc",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "argc",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 3
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "unknown"
                                  },
                                  "rhs": {
                                    "kind": "string-literal",
                                    "literal": "--run-from-bag"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:304:5, col:38>",
                            "kind": "call",
                            "callee": "AmclNode::runFromBag",
                            "arguments": {
                              "in_bag_fn": {
                                "kind": "unknown"
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "argc",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "argc",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 3
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "unknown"
                                  },
                                  "rhs": {
                                    "kind": "string-literal",
                                    "literal": "--run-from-bag"
                                  }
                                }
                              }
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": []
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  ]
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              }
            ]
          }
        },
        {
          "name": "AmclNode::AmclNode",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:330:3, col:59>",
                "kind": "assignment",
                "variable": "v0",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "use_map_topic"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:331:3, col:61>",
                "kind": "assignment",
                "variable": "v1",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "first_map_only"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:334:3, col:50>",
                "kind": "assignment",
                "variable": "v2",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "gui_publish_rate"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:336:3, col:47>",
                "kind": "assignment",
                "variable": "v3",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "save_pose_rate"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:339:3, col:62>",
                "kind": "assignment",
                "variable": "v4",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "laser_min_range"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:340:3, col:62>",
                "kind": "assignment",
                "variable": "v5",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "laser_max_range"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:341:3, col:54>",
                "kind": "assignment",
                "variable": "v6",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "laser_max_beams"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:342:3, col:57>",
                "kind": "assignment",
                "variable": "v7",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "min_particles"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:343:3, col:58>",
                "kind": "assignment",
                "variable": "v8",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "max_particles"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:344:3, col:45>",
                "kind": "assignment",
                "variable": "v9",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "kld_err"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:345:3, col:41>",
                "kind": "assignment",
                "variable": "v10",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "kld_z"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:346:3, col:48>",
                "kind": "assignment",
                "variable": "v11",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "odom_alpha1"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:347:3, col:48>",
                "kind": "assignment",
                "variable": "v12",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "odom_alpha2"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:348:3, col:48>",
                "kind": "assignment",
                "variable": "v13",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "odom_alpha3"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:349:3, col:48>",
                "kind": "assignment",
                "variable": "v14",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "odom_alpha4"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:350:3, col:48>",
                "kind": "assignment",
                "variable": "v15",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "odom_alpha5"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:352:3, col:55>",
                "kind": "assignment",
                "variable": "v16",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "do_beamskip"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:353:3, col:67>",
                "kind": "assignment",
                "variable": "v17",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "beam_skip_distance"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:354:3, col:69>",
                "kind": "assignment",
                "variable": "v18",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "beam_skip_threshold"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:355:3, col:82>",
                "kind": "assignment",
                "variable": "v19",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "beam_skip_error_threshold_"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:357:3, col:48>",
                "kind": "assignment",
                "variable": "v20",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "laser_z_hit"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:358:3, col:51>",
                "kind": "assignment",
                "variable": "v21",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "laser_z_short"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:359:3, col:48>",
                "kind": "assignment",
                "variable": "v22",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "laser_z_max"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:360:3, col:50>",
                "kind": "assignment",
                "variable": "v23",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "laser_z_rand"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:361:3, col:55>",
                "kind": "assignment",
                "variable": "v24",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "laser_sigma_hit"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:362:3, col:61>",
                "kind": "assignment",
                "variable": "v25",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "laser_lambda_short"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:363:3, col:81>",
                "kind": "assignment",
                "variable": "v26",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "laser_likelihood_max_dist"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:365:3, col:88>",
                "kind": "assignment",
                "variable": "v27",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "laser_model_type"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:367:5, col:25>",
                "kind": "assignment",
                "variable": "AmclNode::laser_model_type_",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "amcl::LASER_MODEL_BEAM",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 0
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 0
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "==",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "tmp_model_type",
                    "type": "string",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "beam"
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:369:5, col:25>",
                "kind": "assignment",
                "variable": "AmclNode::laser_model_type_",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "amcl::LASER_MODEL_LIKELIHOOD_FIELD",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 1
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 1
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "tmp_model_type",
                        "type": "string",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "string-literal",
                        "literal": "beam"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "tmp_model_type",
                      "type": "string",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "likelihood_field"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:371:5, col:25>",
                "kind": "assignment",
                "variable": "AmclNode::laser_model_type_",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "amcl::LASER_MODEL_LIKELIHOOD_FIELD_PROB",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 2
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 2
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "tmp_model_type",
                          "type": "string",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "beam"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "tmp_model_type",
                          "type": "string",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "likelihood_field"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "tmp_model_type",
                      "type": "string",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "likelihood_field_prob"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:377:5, col:25>",
                "kind": "assignment",
                "variable": "AmclNode::laser_model_type_",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "amcl::LASER_MODEL_LIKELIHOOD_FIELD",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 1
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 1
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "tmp_model_type",
                          "type": "string",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "beam"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "tmp_model_type",
                          "type": "string",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "likelihood_field"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "tmp_model_type",
                        "type": "string",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "string-literal",
                        "literal": "likelihood_field_prob"
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:380:3, col:75>",
                "kind": "assignment",
                "variable": "v28",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "odom_model_type"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:382:5, col:24>",
                "kind": "assignment",
                "variable": "AmclNode::odom_model_type_",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "amcl::ODOM_MODEL_DIFF",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 0
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 0
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "==",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "tmp_model_type",
                    "type": "string",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "diff"
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:384:5, col:24>",
                "kind": "assignment",
                "variable": "AmclNode::odom_model_type_",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "amcl::ODOM_MODEL_OMNI",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 1
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 1
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "tmp_model_type",
                        "type": "string",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "string-literal",
                        "literal": "diff"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "tmp_model_type",
                      "type": "string",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "omni"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:386:5, col:24>",
                "kind": "assignment",
                "variable": "AmclNode::odom_model_type_",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "amcl::ODOM_MODEL_DIFF_CORRECTED",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 2
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 2
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "tmp_model_type",
                          "type": "string",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "diff"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "tmp_model_type",
                          "type": "string",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "omni"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "tmp_model_type",
                      "type": "string",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "diff-corrected"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:388:5, col:24>",
                "kind": "assignment",
                "variable": "AmclNode::odom_model_type_",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "amcl::ODOM_MODEL_OMNI_CORRECTED",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 3
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 3
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "tmp_model_type",
                            "type": "string",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "string-literal",
                            "literal": "diff"
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "tmp_model_type",
                            "type": "string",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "string-literal",
                            "literal": "omni"
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "tmp_model_type",
                          "type": "string",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "diff-corrected"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "tmp_model_type",
                      "type": "string",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "omni-corrected"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:393:5, col:24>",
                "kind": "assignment",
                "variable": "AmclNode::odom_model_type_",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "amcl::ODOM_MODEL_DIFF",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 0
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 0
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "tmp_model_type",
                            "type": "string",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "string-literal",
                            "literal": "diff"
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "tmp_model_type",
                            "type": "string",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "string-literal",
                            "literal": "omni"
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "tmp_model_type",
                          "type": "string",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "diff-corrected"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "tmp_model_type",
                        "type": "string",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "string-literal",
                        "literal": "omni-corrected"
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:396:3, col:51>",
                "kind": "assignment",
                "variable": "v29",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "update_min_d"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:397:3, col:56>",
                "kind": "assignment",
                "variable": "v30",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "update_min_a"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:398:3, col:73>",
                "kind": "assignment",
                "variable": "v31",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "odom_frame_id"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:399:3, col:78>",
                "kind": "assignment",
                "variable": "v32",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "base_frame_id"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:400:3, col:76>",
                "kind": "assignment",
                "variable": "v33",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "global_frame_id"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:401:3, col:63>",
                "kind": "assignment",
                "variable": "v34",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "resample_interval"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:403:3, col:56>",
                "kind": "assignment",
                "variable": "v35",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "transform_tolerance"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:404:3, col:62>",
                "kind": "assignment",
                "variable": "v36",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "recovery_alpha_slow"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:405:3, col:60>",
                "kind": "assignment",
                "variable": "v37",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "recovery_alpha_fast"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:406:3, col:56>",
                "kind": "assignment",
                "variable": "v38",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "tf_broadcast"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:412:5, col:63>",
                "kind": "assignment",
                "variable": "v39",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "bag_scan_period"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:416:3, col:24>",
                "kind": "call",
                "callee": "AmclNode::updatePoseFromServer",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:419:3, col:39>",
                "kind": "assignment",
                "variable": "AmclNode::tfb_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:420:3, col:38>",
                "kind": "assignment",
                "variable": "AmclNode::tf_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:422:15, col:91>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "amcl_pose"
                  }
                },
                "format": "geometry_msgs/PoseWithCovarianceStamped"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:423:24, col:88>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "particlecloud"
                  }
                },
                "format": "geometry_msgs/PoseArray"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:424:21, line:426:46>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "global_localization"
                  }
                },
                "format": "std_srvs/Empty",
                "callback-name": "AmclNode::globalLocalizationCallback"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:424:21, line:426:46>",
                "kind": "call",
                "callee": "AmclNode::globalLocalizationCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:427:25, col:112>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "request_nomotion_update"
                  }
                },
                "format": "std_srvs/Empty",
                "callback-name": "AmclNode::nomotionUpdateCallback"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:427:25, col:112>",
                "kind": "call",
                "callee": "AmclNode::nomotionUpdateCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:428:17, col:80>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "set_map"
                  }
                },
                "format": "nav_msgs/SetMap",
                "callback-name": "AmclNode::setMapCallback"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:428:17, col:80>",
                "kind": "call",
                "callee": "AmclNode::setMapCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:430:3, col:98>",
                "kind": "assignment",
                "variable": "AmclNode::laser_scan_sub_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:430:25, col:98>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "scan"
                  }
                },
                "format": "sensor_msgs/LaserScan",
                "callback-name": "unknown"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:431:3, line:435:60>",
                "kind": "assignment",
                "variable": "AmclNode::laser_scan_filter_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:436:3, line:437:61>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "unknown"
                },
                "format": "boost/_bi::bind_t",
                "callback-name": "AmclNode::laserReceived"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:436:3, line:437:61>",
                "kind": "call",
                "callee": "AmclNode::laserReceived",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:438:23, col:91>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "initialpose"
                  }
                },
                "format": "geometry_msgs/PoseWithCovarianceStamped",
                "callback-name": "AmclNode::initialPoseReceived"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:438:23, col:91>",
                "kind": "call",
                "callee": "AmclNode::initialPoseReceived",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:441:16, col:68>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "map"
                  }
                },
                "format": "nav_msgs/OccupancyGrid",
                "callback-name": "AmclNode::mapReceived"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:441:16, col:68>",
                "kind": "call",
                "callee": "AmclNode::mapReceived",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:444:5, col:16>",
                "kind": "call",
                "callee": "AmclNode::requestMap",
                "arguments": {},
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::use_map_topic_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:446:3, col:20>",
                "kind": "assignment",
                "variable": "AmclNode::m_force_update",
                "value": {
                  "kind": "bool-literal",
                  "literal": false
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:448:3, col:81>",
                "kind": "assignment",
                "variable": "AmclNode::dsrv_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:454:24, line:455:92>",
                "kind": "createtimer",
                "rate": {
                  "kind": "unknown"
                },
                "callback-name": "AmclNode::checkLaserReceived"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:454:24, line:455:92>",
                "kind": "call",
                "callee": "AmclNode::checkLaserReceived",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:330:3, col:59>",
                "kind": "assignment",
                "variable": "v40",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "use_map_topic"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:331:3, col:61>",
                "kind": "assignment",
                "variable": "v41",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "first_map_only"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:334:3, col:50>",
                "kind": "assignment",
                "variable": "v42",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "gui_publish_rate"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:336:3, col:47>",
                "kind": "assignment",
                "variable": "v43",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "save_pose_rate"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:339:3, col:62>",
                "kind": "assignment",
                "variable": "v44",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "laser_min_range"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:340:3, col:62>",
                "kind": "assignment",
                "variable": "v45",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "laser_max_range"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:341:3, col:54>",
                "kind": "assignment",
                "variable": "v46",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "laser_max_beams"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:342:3, col:57>",
                "kind": "assignment",
                "variable": "v47",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "min_particles"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:343:3, col:58>",
                "kind": "assignment",
                "variable": "v48",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "max_particles"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:344:3, col:45>",
                "kind": "assignment",
                "variable": "v49",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "kld_err"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:345:3, col:41>",
                "kind": "assignment",
                "variable": "v50",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "kld_z"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:346:3, col:48>",
                "kind": "assignment",
                "variable": "v51",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "odom_alpha1"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:347:3, col:48>",
                "kind": "assignment",
                "variable": "v52",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "odom_alpha2"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:348:3, col:48>",
                "kind": "assignment",
                "variable": "v53",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "odom_alpha3"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:349:3, col:48>",
                "kind": "assignment",
                "variable": "v54",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "odom_alpha4"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:350:3, col:48>",
                "kind": "assignment",
                "variable": "v55",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "odom_alpha5"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:352:3, col:55>",
                "kind": "assignment",
                "variable": "v56",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "do_beamskip"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:353:3, col:67>",
                "kind": "assignment",
                "variable": "v57",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "beam_skip_distance"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:354:3, col:69>",
                "kind": "assignment",
                "variable": "v58",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "beam_skip_threshold"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:355:3, col:82>",
                "kind": "assignment",
                "variable": "v59",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "beam_skip_error_threshold_"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:357:3, col:48>",
                "kind": "assignment",
                "variable": "v60",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "laser_z_hit"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:358:3, col:51>",
                "kind": "assignment",
                "variable": "v61",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "laser_z_short"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:359:3, col:48>",
                "kind": "assignment",
                "variable": "v62",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "laser_z_max"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:360:3, col:50>",
                "kind": "assignment",
                "variable": "v63",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "laser_z_rand"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:361:3, col:55>",
                "kind": "assignment",
                "variable": "v64",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "laser_sigma_hit"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:362:3, col:61>",
                "kind": "assignment",
                "variable": "v65",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "laser_lambda_short"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:363:3, col:81>",
                "kind": "assignment",
                "variable": "v66",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "laser_likelihood_max_dist"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:365:3, col:88>",
                "kind": "assignment",
                "variable": "v67",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "laser_model_type"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:366:3, line:378:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:367:5, col:25>",
                      "kind": "assignment",
                      "variable": "AmclNode::laser_model_type_",
                      "value": {
                        "kind": "enum-ref",
                        "qualified_name": "amcl::LASER_MODEL_BEAM",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        },
                        "value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "tmp_model_type",
                          "type": "string",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "beam"
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:367:5, col:25>",
                      "kind": "assignment",
                      "variable": "AmclNode::laser_model_type_",
                      "value": {
                        "kind": "enum-ref",
                        "qualified_name": "amcl::LASER_MODEL_BEAM",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        },
                        "value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "tmp_model_type",
                          "type": "string",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "beam"
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:368:8, line:378:3>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:369:5, col:25>",
                            "kind": "assignment",
                            "variable": "AmclNode::laser_model_type_",
                            "value": {
                              "kind": "enum-ref",
                              "qualified_name": "amcl::LASER_MODEL_LIKELIHOOD_FIELD",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              },
                              "value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "tmp_model_type",
                                    "type": "string",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "string-literal",
                                    "literal": "beam"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "tmp_model_type",
                                  "type": "string",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "string-literal",
                                  "literal": "likelihood_field"
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:369:5, col:25>",
                            "kind": "assignment",
                            "variable": "AmclNode::laser_model_type_",
                            "value": {
                              "kind": "enum-ref",
                              "qualified_name": "amcl::LASER_MODEL_LIKELIHOOD_FIELD",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              },
                              "value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "tmp_model_type",
                                    "type": "string",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "string-literal",
                                    "literal": "beam"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "tmp_model_type",
                                  "type": "string",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "string-literal",
                                  "literal": "likelihood_field"
                                }
                              }
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:370:8, line:378:3>",
                            "kind": "if",
                            "trueBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": [
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:371:5, col:25>",
                                  "kind": "assignment",
                                  "variable": "AmclNode::laser_model_type_",
                                  "value": {
                                    "kind": "enum-ref",
                                    "qualified_name": "amcl::LASER_MODEL_LIKELIHOOD_FIELD_PROB",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 2
                                    },
                                    "value": {
                                      "kind": "int-literal",
                                      "literal": 2
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "tmp_model_type",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "beam"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "tmp_model_type",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "likelihood_field"
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "tmp_model_type",
                                        "type": "string",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "string-literal",
                                        "literal": "likelihood_field_prob"
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:371:5, col:25>",
                                  "kind": "assignment",
                                  "variable": "AmclNode::laser_model_type_",
                                  "value": {
                                    "kind": "enum-ref",
                                    "qualified_name": "amcl::LASER_MODEL_LIKELIHOOD_FIELD_PROB",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 2
                                    },
                                    "value": {
                                      "kind": "int-literal",
                                      "literal": 2
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "tmp_model_type",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "beam"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "tmp_model_type",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "likelihood_field"
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "tmp_model_type",
                                        "type": "string",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "string-literal",
                                        "literal": "likelihood_field_prob"
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "falseBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": [
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:377:5, col:25>",
                                  "kind": "assignment",
                                  "variable": "AmclNode::laser_model_type_",
                                  "value": {
                                    "kind": "enum-ref",
                                    "qualified_name": "amcl::LASER_MODEL_LIKELIHOOD_FIELD",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    },
                                    "value": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "tmp_model_type",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "beam"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "tmp_model_type",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "likelihood_field"
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "==",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "tmp_model_type",
                                          "type": "string",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "string-literal",
                                          "literal": "likelihood_field_prob"
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:377:5, col:25>",
                                  "kind": "assignment",
                                  "variable": "AmclNode::laser_model_type_",
                                  "value": {
                                    "kind": "enum-ref",
                                    "qualified_name": "amcl::LASER_MODEL_LIKELIHOOD_FIELD",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    },
                                    "value": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "tmp_model_type",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "beam"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "tmp_model_type",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "likelihood_field"
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "==",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "tmp_model_type",
                                          "type": "string",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "string-literal",
                                          "literal": "likelihood_field_prob"
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "condition": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        ]
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  ]
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:380:3, col:75>",
                "kind": "assignment",
                "variable": "v68",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "odom_model_type"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:381:3, line:394:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:382:5, col:24>",
                      "kind": "assignment",
                      "variable": "AmclNode::odom_model_type_",
                      "value": {
                        "kind": "enum-ref",
                        "qualified_name": "amcl::ODOM_MODEL_DIFF",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        },
                        "value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "tmp_model_type",
                          "type": "string",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "diff"
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:382:5, col:24>",
                      "kind": "assignment",
                      "variable": "AmclNode::odom_model_type_",
                      "value": {
                        "kind": "enum-ref",
                        "qualified_name": "amcl::ODOM_MODEL_DIFF",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        },
                        "value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "tmp_model_type",
                          "type": "string",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "diff"
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:383:8, line:394:3>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:384:5, col:24>",
                            "kind": "assignment",
                            "variable": "AmclNode::odom_model_type_",
                            "value": {
                              "kind": "enum-ref",
                              "qualified_name": "amcl::ODOM_MODEL_OMNI",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              },
                              "value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "tmp_model_type",
                                    "type": "string",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "string-literal",
                                    "literal": "diff"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "tmp_model_type",
                                  "type": "string",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "string-literal",
                                  "literal": "omni"
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:384:5, col:24>",
                            "kind": "assignment",
                            "variable": "AmclNode::odom_model_type_",
                            "value": {
                              "kind": "enum-ref",
                              "qualified_name": "amcl::ODOM_MODEL_OMNI",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              },
                              "value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "tmp_model_type",
                                    "type": "string",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "string-literal",
                                    "literal": "diff"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "tmp_model_type",
                                  "type": "string",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "string-literal",
                                  "literal": "omni"
                                }
                              }
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:385:8, line:394:3>",
                            "kind": "if",
                            "trueBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": [
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:386:5, col:24>",
                                  "kind": "assignment",
                                  "variable": "AmclNode::odom_model_type_",
                                  "value": {
                                    "kind": "enum-ref",
                                    "qualified_name": "amcl::ODOM_MODEL_DIFF_CORRECTED",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 2
                                    },
                                    "value": {
                                      "kind": "int-literal",
                                      "literal": 2
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "tmp_model_type",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "diff"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "tmp_model_type",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "omni"
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "tmp_model_type",
                                        "type": "string",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "string-literal",
                                        "literal": "diff-corrected"
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:386:5, col:24>",
                                  "kind": "assignment",
                                  "variable": "AmclNode::odom_model_type_",
                                  "value": {
                                    "kind": "enum-ref",
                                    "qualified_name": "amcl::ODOM_MODEL_DIFF_CORRECTED",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 2
                                    },
                                    "value": {
                                      "kind": "int-literal",
                                      "literal": 2
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "tmp_model_type",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "diff"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "tmp_model_type",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "omni"
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "tmp_model_type",
                                        "type": "string",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "string-literal",
                                        "literal": "diff-corrected"
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "falseBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": [
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:387:8, line:394:3>",
                                  "kind": "if",
                                  "trueBranchBody": {
                                    "source-location": "",
                                    "kind": "compound",
                                    "statements": [
                                      {
                                        "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:388:5, col:24>",
                                        "kind": "assignment",
                                        "variable": "AmclNode::odom_model_type_",
                                        "value": {
                                          "kind": "enum-ref",
                                          "qualified_name": "amcl::ODOM_MODEL_OMNI_CORRECTED",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "int-literal",
                                            "literal": 3
                                          },
                                          "value": {
                                            "kind": "int-literal",
                                            "literal": 3
                                          }
                                        },
                                        "path_condition": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "tmp_model_type",
                                                    "type": "string",
                                                    "initial-value": {
                                                      "kind": "unknown"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "string-literal",
                                                    "literal": "diff"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "tmp_model_type",
                                                    "type": "string",
                                                    "initial-value": {
                                                      "kind": "unknown"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "string-literal",
                                                    "literal": "omni"
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "tmp_model_type",
                                                  "type": "string",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "string-literal",
                                                  "literal": "diff-corrected"
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "tmp_model_type",
                                              "type": "string",
                                              "initial-value": {
                                                "kind": "unknown"
                                              }
                                            },
                                            "rhs": {
                                              "kind": "string-literal",
                                              "literal": "omni-corrected"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:388:5, col:24>",
                                        "kind": "assignment",
                                        "variable": "AmclNode::odom_model_type_",
                                        "value": {
                                          "kind": "enum-ref",
                                          "qualified_name": "amcl::ODOM_MODEL_OMNI_CORRECTED",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "int-literal",
                                            "literal": 3
                                          },
                                          "value": {
                                            "kind": "int-literal",
                                            "literal": 3
                                          }
                                        },
                                        "path_condition": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "tmp_model_type",
                                                    "type": "string",
                                                    "initial-value": {
                                                      "kind": "unknown"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "string-literal",
                                                    "literal": "diff"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "tmp_model_type",
                                                    "type": "string",
                                                    "initial-value": {
                                                      "kind": "unknown"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "string-literal",
                                                    "literal": "omni"
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "tmp_model_type",
                                                  "type": "string",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "string-literal",
                                                  "literal": "diff-corrected"
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "tmp_model_type",
                                              "type": "string",
                                              "initial-value": {
                                                "kind": "unknown"
                                              }
                                            },
                                            "rhs": {
                                              "kind": "string-literal",
                                              "literal": "omni-corrected"
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "falseBranchBody": {
                                    "source-location": "",
                                    "kind": "compound",
                                    "statements": [
                                      {
                                        "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:393:5, col:24>",
                                        "kind": "assignment",
                                        "variable": "AmclNode::odom_model_type_",
                                        "value": {
                                          "kind": "enum-ref",
                                          "qualified_name": "amcl::ODOM_MODEL_DIFF",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "int-literal",
                                            "literal": 0
                                          },
                                          "value": {
                                            "kind": "int-literal",
                                            "literal": 0
                                          }
                                        },
                                        "path_condition": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "tmp_model_type",
                                                    "type": "string",
                                                    "initial-value": {
                                                      "kind": "unknown"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "string-literal",
                                                    "literal": "diff"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "tmp_model_type",
                                                    "type": "string",
                                                    "initial-value": {
                                                      "kind": "unknown"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "string-literal",
                                                    "literal": "omni"
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "tmp_model_type",
                                                  "type": "string",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "string-literal",
                                                  "literal": "diff-corrected"
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "tmp_model_type",
                                                "type": "string",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              },
                                              "rhs": {
                                                "kind": "string-literal",
                                                "literal": "omni-corrected"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:393:5, col:24>",
                                        "kind": "assignment",
                                        "variable": "AmclNode::odom_model_type_",
                                        "value": {
                                          "kind": "enum-ref",
                                          "qualified_name": "amcl::ODOM_MODEL_DIFF",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "int-literal",
                                            "literal": 0
                                          },
                                          "value": {
                                            "kind": "int-literal",
                                            "literal": 0
                                          }
                                        },
                                        "path_condition": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "tmp_model_type",
                                                    "type": "string",
                                                    "initial-value": {
                                                      "kind": "unknown"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "string-literal",
                                                    "literal": "diff"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "tmp_model_type",
                                                    "type": "string",
                                                    "initial-value": {
                                                      "kind": "unknown"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "string-literal",
                                                    "literal": "omni"
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "tmp_model_type",
                                                  "type": "string",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "string-literal",
                                                  "literal": "diff-corrected"
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "tmp_model_type",
                                                "type": "string",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              },
                                              "rhs": {
                                                "kind": "string-literal",
                                                "literal": "omni-corrected"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                }
                              ]
                            },
                            "condition": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        ]
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  ]
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:396:3, col:51>",
                "kind": "assignment",
                "variable": "v69",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "update_min_d"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:397:3, col:56>",
                "kind": "assignment",
                "variable": "v70",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "update_min_a"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:398:3, col:73>",
                "kind": "assignment",
                "variable": "v71",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "odom_frame_id"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:399:3, col:78>",
                "kind": "assignment",
                "variable": "v72",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "base_frame_id"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:400:3, col:76>",
                "kind": "assignment",
                "variable": "v73",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "global_frame_id"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:401:3, col:63>",
                "kind": "assignment",
                "variable": "v74",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "resample_interval"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:403:3, col:56>",
                "kind": "assignment",
                "variable": "v75",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "transform_tolerance"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:404:3, col:62>",
                "kind": "assignment",
                "variable": "v76",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "recovery_alpha_slow"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:405:3, col:60>",
                "kind": "assignment",
                "variable": "v77",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "recovery_alpha_fast"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:406:3, col:56>",
                "kind": "assignment",
                "variable": "v78",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "tf_broadcast"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:412:5, col:63>",
                "kind": "assignment",
                "variable": "v79",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "bag_scan_period"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:416:3, col:24>",
                "kind": "call",
                "callee": "AmclNode::updatePoseFromServer",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:419:3, col:39>",
                "kind": "assignment",
                "variable": "AmclNode::tfb_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:420:3, col:38>",
                "kind": "assignment",
                "variable": "AmclNode::tf_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:422:15, col:91>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "amcl_pose"
                  }
                },
                "format": "geometry_msgs/PoseWithCovarianceStamped"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:423:24, col:88>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "particlecloud"
                  }
                },
                "format": "geometry_msgs/PoseArray"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:424:21, line:426:46>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "global_localization"
                  }
                },
                "format": "std_srvs/Empty",
                "callback-name": "AmclNode::globalLocalizationCallback"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:424:21, line:426:46>",
                "kind": "call",
                "callee": "AmclNode::globalLocalizationCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:427:25, col:112>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "request_nomotion_update"
                  }
                },
                "format": "std_srvs/Empty",
                "callback-name": "AmclNode::nomotionUpdateCallback"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:427:25, col:112>",
                "kind": "call",
                "callee": "AmclNode::nomotionUpdateCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:428:17, col:80>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "set_map"
                  }
                },
                "format": "nav_msgs/SetMap",
                "callback-name": "AmclNode::setMapCallback"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:428:17, col:80>",
                "kind": "call",
                "callee": "AmclNode::setMapCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:430:3, col:98>",
                "kind": "assignment",
                "variable": "AmclNode::laser_scan_sub_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:430:25, col:98>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "scan"
                  }
                },
                "format": "sensor_msgs/LaserScan",
                "callback-name": "unknown"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:431:3, line:435:60>",
                "kind": "assignment",
                "variable": "AmclNode::laser_scan_filter_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:436:3, line:437:61>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "unknown"
                },
                "format": "boost/_bi::bind_t",
                "callback-name": "AmclNode::laserReceived"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:436:3, line:437:61>",
                "kind": "call",
                "callee": "AmclNode::laserReceived",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:438:23, col:91>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "initialpose"
                  }
                },
                "format": "geometry_msgs/PoseWithCovarianceStamped",
                "callback-name": "AmclNode::initialPoseReceived"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:438:23, col:91>",
                "kind": "call",
                "callee": "AmclNode::initialPoseReceived",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:440:3, line:445:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:441:16, col:68>",
                      "kind": "subscribes-to",
                      "name": {
                        "kind": "concatenate",
                        "lhs": {
                          "kind": "node-handle",
                          "namespace": {
                            "kind": "string-literal",
                            "literal": ""
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "map"
                        }
                      },
                      "format": "nav_msgs/OccupancyGrid",
                      "callback-name": "AmclNode::mapReceived"
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:441:16, col:68>",
                      "kind": "call",
                      "callee": "AmclNode::mapReceived",
                      "arguments": {},
                      "path_condition": {
                        "kind": "bool-literal",
                        "literal": true
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:441:16, col:68>",
                      "kind": "subscribes-to",
                      "name": {
                        "kind": "concatenate",
                        "lhs": {
                          "kind": "node-handle",
                          "namespace": {
                            "kind": "string-literal",
                            "literal": ""
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "map"
                        }
                      },
                      "format": "nav_msgs/OccupancyGrid",
                      "callback-name": "AmclNode::mapReceived"
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:441:16, col:68>",
                      "kind": "call",
                      "callee": "AmclNode::mapReceived",
                      "arguments": {},
                      "path_condition": {
                        "kind": "bool-literal",
                        "literal": true
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:444:5, col:16>",
                      "kind": "call",
                      "callee": "AmclNode::requestMap",
                      "arguments": {},
                      "path_condition": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::use_map_topic_",
                          "type": "bool",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:444:5, col:16>",
                      "kind": "call",
                      "callee": "AmclNode::requestMap",
                      "arguments": {},
                      "path_condition": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::use_map_topic_",
                          "type": "bool",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    }
                  ]
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:446:3, col:20>",
                "kind": "assignment",
                "variable": "AmclNode::m_force_update",
                "value": {
                  "kind": "bool-literal",
                  "literal": false
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:448:3, col:81>",
                "kind": "assignment",
                "variable": "AmclNode::dsrv_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:454:24, line:455:92>",
                "kind": "createtimer",
                "rate": {
                  "kind": "unknown"
                },
                "callback-name": "AmclNode::checkLaserReceived"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:454:24, line:455:92>",
                "kind": "call",
                "callee": "AmclNode::checkLaserReceived",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        },
        {
          "name": "AmclNode::requestMap",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:775:10, col:52>",
                "kind": "calls-service",
                "name": {
                  "kind": "string-literal",
                  "literal": "static_map"
                },
                "format": "todo/service"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:779:5, col:13>",
                "kind": "ratesleep",
                "rate": {
                  "kind": "unknown"
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:775:3, line:780:3>",
                "kind": "while",
                "body": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:775:10, col:52>",
                      "kind": "calls-service",
                      "name": {
                        "kind": "string-literal",
                        "literal": "static_map"
                      },
                      "format": "todo/service"
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:779:5, col:13>",
                      "kind": "ratesleep",
                      "rate": {
                        "kind": "unknown"
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:775:10, col:52>",
                      "kind": "calls-service",
                      "name": {
                        "kind": "string-literal",
                        "literal": "static_map"
                      },
                      "format": "todo/service"
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:779:5, col:13>",
                      "kind": "ratesleep",
                      "rate": {
                        "kind": "unknown"
                      }
                    }
                  ]
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              }
            ]
          }
        },
        {
          "name": "AmclNode::checkLaserReceived",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": []
          }
        },
        {
          "name": "AmclNode::updatePoseFromServer",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:722:3, col:61>",
                "kind": "assignment",
                "variable": "v0",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "initial_pose_x"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:727:3, col:61>",
                "kind": "assignment",
                "variable": "v1",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "initial_pose_y"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:732:3, col:61>",
                "kind": "assignment",
                "variable": "v2",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "initial_pose_a"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:737:3, col:60>",
                "kind": "assignment",
                "variable": "v3",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "initial_cov_xx"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:742:3, col:60>",
                "kind": "assignment",
                "variable": "v4",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "initial_cov_yy"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:747:3, col:60>",
                "kind": "assignment",
                "variable": "v5",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "initial_cov_aa"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:722:3, col:61>",
                "kind": "assignment",
                "variable": "v6",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "initial_pose_x"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:723:3, line:726:5 <Spelling=/ros_ws/src/ros_comm/rosconsole/include/ros/console.h:381:12>>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:727:3, col:61>",
                "kind": "assignment",
                "variable": "v7",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "initial_pose_y"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:728:3, line:731:5 <Spelling=/ros_ws/src/ros_comm/rosconsole/include/ros/console.h:381:12>>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:732:3, col:61>",
                "kind": "assignment",
                "variable": "v8",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "initial_pose_a"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:733:3, line:736:5 <Spelling=/ros_ws/src/ros_comm/rosconsole/include/ros/console.h:381:12>>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:737:3, col:60>",
                "kind": "assignment",
                "variable": "v9",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "initial_cov_xx"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:738:3, line:741:5 <Spelling=/ros_ws/src/ros_comm/rosconsole/include/ros/console.h:381:12>>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:742:3, col:60>",
                "kind": "assignment",
                "variable": "v10",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "initial_cov_yy"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:743:3, line:746:5 <Spelling=/ros_ws/src/ros_comm/rosconsole/include/ros/console.h:381:12>>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:747:3, col:60>",
                "kind": "assignment",
                "variable": "v11",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "initial_cov_aa"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:748:3, line:751:5 <Spelling=/ros_ws/src/ros_comm/rosconsole/include/ros/console.h:381:12>>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              }
            ]
          }
        },
        {
          "name": "AmclNode::globalLocalizationCallback",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1019:3, col:14>",
                "kind": "assignment",
                "variable": "AmclNode::pf_init_",
                "value": {
                  "kind": "bool-literal",
                  "literal": false
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::map_",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    },
                    "rhs": {
                      "kind": "null-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1019:3, col:14>",
                "kind": "assignment",
                "variable": "AmclNode::pf_init_",
                "value": {
                  "kind": "bool-literal",
                  "literal": false
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::map_",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    },
                    "rhs": {
                      "kind": "null-expr"
                    }
                  }
                }
              }
            ]
          }
        }
      ]
    }
  }
}