{
  "image": {
    "sha256": "66d3186041a66d858724cf5f48d49ffb170dbb061b60afbad2f689521c32be3e"
  },
  "node-name": "vehicle_receiver",
  "package": {
    "name": "vehicle_socket",
    "path": "/home/autoware/Autoware/ros/src/socket/packages/vehicle_socket"
  },
  "sources": [
    "/home/autoware/Autoware/ros/src/socket/packages/vehicle_socket/nodes/vehicle_receiver/vehicle_receiver.cpp"
  ],
  "program": {
    "program": {
      "entrypoint": "main",
      "functions": [
        {
          "name": "main",
          "parameters": [
            {
              "index": 0,
              "name": "argc",
              "type": "integer"
            }
          ],
          "body": {
            "kind": "compound",
            "statements": [
              {
                "kind": "ros-init",
                "name": {
                  "kind": "string-literal",
                  "literal": "vehicle_receiver"
                }
              },
              {
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "can_info"
                  }
                },
                "format": "autoware_can_msgs/CANInfo"
              },
              {
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "mode_info"
                  }
                },
                "format": "tablet_socket_msgs/mode_info"
              },
              {
                "kind": "assignment",
                "variable": "ret",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "ros-init",
                "name": {
                  "kind": "string-literal",
                  "literal": "vehicle_receiver"
                }
              },
              {
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "can_info"
                  }
                },
                "format": "autoware_can_msgs/CANInfo"
              },
              {
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "mode_info"
                  }
                },
                "format": "tablet_socket_msgs/mode_info"
              },
              {
                "kind": "assignment",
                "variable": "ret",
                "value": {
                  "kind": "unknown"
                }
              }
            ]
          }
        },
        {
          "name": "getCanValue",
          "parameters": [],
          "body": {
            "kind": "compound",
            "statements": [
              {
                "kind": "publish",
                "publisher": "can_pub",
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "<",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "unknown"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "variable": "ret",
                    "type": "bool",
                    "initialValue": {
                      "kind": "bool-literal",
                      "literal": false
                    }
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "tablet_socket_msgs::mode_info_<std::allocator<void>>::mode",
                "value": {
                  "kind": "variable-reference",
                  "variable": "mode",
                  "type": "integer",
                  "initialValue": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "kind": "publish",
                "publisher": "mode_pub",
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "<",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "unknown"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "variable": "ret",
                    "type": "bool",
                    "initialValue": {
                      "kind": "bool-literal",
                      "literal": false
                    }
                  }
                }
              },
              {
                "kind": "publish",
                "publisher": "can_pub",
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "<",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "unknown"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "variable": "ret",
                    "type": "bool",
                    "initialValue": {
                      "kind": "bool-literal",
                      "literal": false
                    }
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "tablet_socket_msgs::mode_info_<std::allocator<void>>::mode",
                "value": {
                  "kind": "variable-reference",
                  "variable": "mode",
                  "type": "integer",
                  "initialValue": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "kind": "publish",
                "publisher": "mode_pub",
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "<",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "unknown"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "variable": "ret",
                    "type": "bool",
                    "initialValue": {
                      "kind": "bool-literal",
                      "literal": false
                    }
                  }
                }
              }
            ]
          }
        }
      ]
    }
  }
}