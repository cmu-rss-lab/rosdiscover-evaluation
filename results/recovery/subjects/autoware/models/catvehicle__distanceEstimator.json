{
  "image": {
    "sha256": "66d3186041a66d858724cf5f48d49ffb170dbb061b60afbad2f689521c32be3e"
  },
  "node-name": "distanceEstimator",
  "package": {
    "name": "catvehicle",
    "path": "/home/autoware/Autoware/ros/src/system/gazebo/catvehicle"
  },
  "sources": [
    "/home/autoware/Autoware/ros/src/system/gazebo/catvehicle/src/distanceEstimator.cpp"
  ],
  "program": {
    "program": {
      "entrypoint": "main",
      "functions": [
        {
          "name": "main",
          "parameters": [
            {
              "index": 0,
              "name": "argc",
              "type": "integer"
            }
          ],
          "body": {
            "kind": "compound",
            "statements": [
              {
                "kind": "assignment",
                "variable": "std_msgs::Float32_<std::allocator<void>>::data",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "assignment",
                "variable": "std_msgs::Float32_<std::allocator<void>>::data",
                "value": {
                  "kind": "int-literal",
                  "literal": 0
                }
              },
              {
                "kind": "assignment",
                "variable": "std_msgs::Float32_<std::allocator<void>>::data",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "assignment",
                "variable": "std_msgs::Float32_<std::allocator<void>>::data",
                "value": {
                  "kind": "int-literal",
                  "literal": 0
                }
              },
              {
                "kind": "assignment",
                "variable": "std_msgs::Float32_<std::allocator<void>>::data",
                "value": {
                  "kind": "int-literal",
                  "literal": 0
                }
              },
              {
                "kind": "ros-init",
                "name": {
                  "kind": "string-literal",
                  "literal": "DistanceEstimator"
                }
              },
              {
                "kind": "assignment",
                "variable": "v0",
                "value": {
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "dist_topic"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "v1",
                "value": {
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "angle_topic"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "v2",
                "value": {
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "scan_topic"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "v3",
                "value": {
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "angle_min"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "v4",
                "value": {
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "angle_max"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": "~"
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                },
                "format": "std_msgs/Float32"
              },
              {
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": "~"
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                },
                "format": "std_msgs/Float32"
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": "~"
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                },
                "format": "sensor_msgs/LaserScan",
                "callback-name": "scanCallback"
              },
              {
                "kind": "call",
                "callee": "scanCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "assignment",
                "variable": "newMessage",
                "value": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "kind": "publish",
                "publisher": "dist_pub",
                "path_condition": {
                  "kind": "variable-reference",
                  "variable": "newMessage",
                  "type": "bool",
                  "initialValue": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "kind": "publish",
                "publisher": "angle_pub",
                "path_condition": {
                  "kind": "variable-reference",
                  "variable": "newMessage",
                  "type": "bool",
                  "initialValue": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "newMessage",
                "value": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "kind": "ratesleep",
                "rate": {
                  "kind": "float-literal",
                  "literal": 1000.0
                }
              },
              {
                "kind": "assignment",
                "variable": "std_msgs::Float32_<std::allocator<void>>::data",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "assignment",
                "variable": "std_msgs::Float32_<std::allocator<void>>::data",
                "value": {
                  "kind": "int-literal",
                  "literal": 0
                }
              },
              {
                "kind": "assignment",
                "variable": "std_msgs::Float32_<std::allocator<void>>::data",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "assignment",
                "variable": "std_msgs::Float32_<std::allocator<void>>::data",
                "value": {
                  "kind": "int-literal",
                  "literal": 0
                }
              },
              {
                "kind": "assignment",
                "variable": "std_msgs::Float32_<std::allocator<void>>::data",
                "value": {
                  "kind": "int-literal",
                  "literal": 0
                }
              },
              {
                "kind": "ros-init",
                "name": {
                  "kind": "string-literal",
                  "literal": "DistanceEstimator"
                }
              },
              {
                "kind": "assignment",
                "variable": "v5",
                "value": {
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "dist_topic"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "v6",
                "value": {
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "angle_topic"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "v7",
                "value": {
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "scan_topic"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "v8",
                "value": {
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "angle_min"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "v9",
                "value": {
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "angle_max"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": "~"
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                },
                "format": "std_msgs/Float32"
              },
              {
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": "~"
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                },
                "format": "std_msgs/Float32"
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": "~"
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                },
                "format": "sensor_msgs/LaserScan",
                "callback-name": "scanCallback"
              },
              {
                "kind": "call",
                "callee": "scanCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "assignment",
                "variable": "newMessage",
                "value": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "kind": "while",
                "body": {
                  "kind": "compound",
                  "statements": [
                    {
                      "kind": "if",
                      "trueBranchBody": {
                        "kind": "compound",
                        "statements": [
                          {
                            "kind": "publish",
                            "publisher": "dist_pub",
                            "path_condition": {
                              "kind": "variable-reference",
                              "variable": "newMessage",
                              "type": "bool",
                              "initialValue": {
                                "kind": "unknown"
                              }
                            }
                          },
                          {
                            "kind": "publish",
                            "publisher": "angle_pub",
                            "path_condition": {
                              "kind": "variable-reference",
                              "variable": "newMessage",
                              "type": "bool",
                              "initialValue": {
                                "kind": "unknown"
                              }
                            }
                          },
                          {
                            "kind": "assignment",
                            "variable": "newMessage",
                            "value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "kind": "compound",
                        "statements": []
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    },
                    {
                      "kind": "if",
                      "trueBranchBody": {
                        "kind": "compound",
                        "statements": [
                          {
                            "kind": "publish",
                            "publisher": "dist_pub",
                            "path_condition": {
                              "kind": "variable-reference",
                              "variable": "newMessage",
                              "type": "bool",
                              "initialValue": {
                                "kind": "unknown"
                              }
                            }
                          },
                          {
                            "kind": "publish",
                            "publisher": "angle_pub",
                            "path_condition": {
                              "kind": "variable-reference",
                              "variable": "newMessage",
                              "type": "bool",
                              "initialValue": {
                                "kind": "unknown"
                              }
                            }
                          },
                          {
                            "kind": "assignment",
                            "variable": "newMessage",
                            "value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "kind": "compound",
                        "statements": []
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    },
                    {
                      "kind": "if",
                      "trueBranchBody": {
                        "kind": "compound",
                        "statements": [
                          {
                            "kind": "publish",
                            "publisher": "dist_pub",
                            "path_condition": {
                              "kind": "variable-reference",
                              "variable": "newMessage",
                              "type": "bool",
                              "initialValue": {
                                "kind": "unknown"
                              }
                            }
                          },
                          {
                            "kind": "publish",
                            "publisher": "angle_pub",
                            "path_condition": {
                              "kind": "variable-reference",
                              "variable": "newMessage",
                              "type": "bool",
                              "initialValue": {
                                "kind": "unknown"
                              }
                            }
                          },
                          {
                            "kind": "assignment",
                            "variable": "newMessage",
                            "value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "kind": "compound",
                        "statements": []
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    },
                    {
                      "kind": "ratesleep",
                      "rate": {
                        "kind": "float-literal",
                        "literal": 1000.0
                      }
                    }
                  ]
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              }
            ]
          }
        },
        {
          "name": "scanCallback",
          "parameters": [],
          "body": {
            "kind": "compound",
            "statements": [
              {
                "kind": "assignment",
                "variable": "newMessage",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "assignment",
                "variable": "std_msgs::Float32_<std::allocator<void>>::data",
                "value": {
                  "kind": "member-var-ref",
                  "variable": "sensor_msgs::LaserScan_<std::allocator<void>>::range_max",
                  "type": "unsupported",
                  "initialValue": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "std_msgs::Float32_<std::allocator<void>>::data",
                "value": {
                  "kind": "member-var-ref",
                  "variable": "sensor_msgs::LaserScan_<std::allocator<void>>::angle_min",
                  "type": "unsupported",
                  "initialValue": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "angle_tmp",
                "value": {
                  "kind": "binary-expr",
                  "operator": "+",
                  "lhs": {
                    "kind": "variable-reference",
                    "variable": "angle_tmp",
                    "type": "float",
                    "initialValue": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "variable": "inc",
                    "type": "float",
                    "initialValue": {
                      "kind": "unknown"
                    }
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "std_msgs::Float32_<std::allocator<void>>::data",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "assignment",
                "variable": "std_msgs::Float32_<std::allocator<void>>::data",
                "value": {
                  "kind": "variable-reference",
                  "variable": "angle_tmp",
                  "type": "float",
                  "initialValue": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "std_msgs::Float32_<std::allocator<void>>::data",
                "value": {
                  "kind": "binary-expr",
                  "operator": "/",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "-",
                    "lhs": {
                      "kind": "member-var-ref",
                      "variable": "std_msgs::Float32_<std::allocator<void>>::data",
                      "type": "unsupported",
                      "initialValue": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "variable-reference",
                        "variable": "dist",
                        "type": "unsupported",
                        "initialValue": {
                          "kind": "unknown"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "member-var-ref",
                      "variable": "std_msgs::Float32_<std::allocator<void>>::data",
                      "type": "unsupported",
                      "initialValue": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "variable-reference",
                        "variable": "dist_1",
                        "type": "unsupported",
                        "initialValue": {
                          "kind": "unknown"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "float-literal",
                    "literal": 0.02
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "std_msgs::Float32_<std::allocator<void>>::data",
                "value": {
                  "kind": "binary-expr",
                  "operator": "/",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "-",
                    "lhs": {
                      "kind": "member-var-ref",
                      "variable": "std_msgs::Float32_<std::allocator<void>>::data",
                      "type": "unsupported",
                      "initialValue": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "variable-reference",
                        "variable": "vel",
                        "type": "unsupported",
                        "initialValue": {
                          "kind": "unknown"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "member-var-ref",
                      "variable": "std_msgs::Float32_<std::allocator<void>>::data",
                      "type": "unsupported",
                      "initialValue": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "variable-reference",
                        "variable": "vel_1",
                        "type": "unsupported",
                        "initialValue": {
                          "kind": "unknown"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "float-literal",
                    "literal": 0.02
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "newMessage",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "assignment",
                "variable": "std_msgs::Float32_<std::allocator<void>>::data",
                "value": {
                  "kind": "member-var-ref",
                  "variable": "sensor_msgs::LaserScan_<std::allocator<void>>::range_max",
                  "type": "unsupported",
                  "initialValue": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "std_msgs::Float32_<std::allocator<void>>::data",
                "value": {
                  "kind": "member-var-ref",
                  "variable": "sensor_msgs::LaserScan_<std::allocator<void>>::angle_min",
                  "type": "unsupported",
                  "initialValue": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "angle_tmp",
                "value": {
                  "kind": "binary-expr",
                  "operator": "+",
                  "lhs": {
                    "kind": "variable-reference",
                    "variable": "angle_tmp",
                    "type": "float",
                    "initialValue": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "variable": "inc",
                    "type": "float",
                    "initialValue": {
                      "kind": "unknown"
                    }
                  }
                }
              },
              {
                "kind": "if",
                "trueBranchBody": {
                  "kind": "compound",
                  "statements": [
                    {
                      "kind": "assignment",
                      "variable": "std_msgs::Float32_<std::allocator<void>>::data",
                      "value": {
                        "kind": "unknown"
                      }
                    },
                    {
                      "kind": "assignment",
                      "variable": "std_msgs::Float32_<std::allocator<void>>::data",
                      "value": {
                        "kind": "variable-reference",
                        "variable": "angle_tmp",
                        "type": "float",
                        "initialValue": {
                          "kind": "unknown"
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "kind": "assignment",
                "variable": "std_msgs::Float32_<std::allocator<void>>::data",
                "value": {
                  "kind": "binary-expr",
                  "operator": "/",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "-",
                    "lhs": {
                      "kind": "member-var-ref",
                      "variable": "std_msgs::Float32_<std::allocator<void>>::data",
                      "type": "unsupported",
                      "initialValue": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "variable-reference",
                        "variable": "dist",
                        "type": "unsupported",
                        "initialValue": {
                          "kind": "unknown"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "member-var-ref",
                      "variable": "std_msgs::Float32_<std::allocator<void>>::data",
                      "type": "unsupported",
                      "initialValue": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "variable-reference",
                        "variable": "dist_1",
                        "type": "unsupported",
                        "initialValue": {
                          "kind": "unknown"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "float-literal",
                    "literal": 0.02
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "std_msgs::Float32_<std::allocator<void>>::data",
                "value": {
                  "kind": "binary-expr",
                  "operator": "/",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "-",
                    "lhs": {
                      "kind": "member-var-ref",
                      "variable": "std_msgs::Float32_<std::allocator<void>>::data",
                      "type": "unsupported",
                      "initialValue": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "variable-reference",
                        "variable": "vel",
                        "type": "unsupported",
                        "initialValue": {
                          "kind": "unknown"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "member-var-ref",
                      "variable": "std_msgs::Float32_<std::allocator<void>>::data",
                      "type": "unsupported",
                      "initialValue": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "variable-reference",
                        "variable": "vel_1",
                        "type": "unsupported",
                        "initialValue": {
                          "kind": "unknown"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "float-literal",
                    "literal": 0.02
                  }
                }
              }
            ]
          }
        }
      ]
    }
  }
}