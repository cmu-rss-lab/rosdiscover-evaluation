{
  "image": {
    "sha256": "66d3186041a66d858724cf5f48d49ffb170dbb061b60afbad2f689521c32be3e"
  },
  "node-name": "feat_proj",
  "package": {
    "name": "trafficlight_recognizer",
    "path": "/home/autoware/Autoware/ros/src/computing/perception/detection/trafficlight_recognizer"
  },
  "sources": [
    "/home/autoware/Autoware/ros/src/computing/perception/detection/trafficlight_recognizer/nodes/feat_proj/feat_proj.cpp"
  ],
  "program": {
    "program": {
      "entrypoint": "main",
      "functions": [
        {
          "name": "VectorMap::load_dtlanes",
          "parameters": [],
          "body": {
            "kind": "compound",
            "statements": []
          }
        },
        {
          "name": "echoSignals2",
          "parameters": [
            {
              "index": 1,
              "name": "useOpenGLCoord",
              "type": "bool"
            }
          ],
          "body": {
            "kind": "compound",
            "statements": [
              {
                "kind": "assignment",
                "variable": "(anonymous struct)::id",
                "value": {
                  "kind": "member-var-ref",
                  "variable": "vector_map_msgs::Signal_<std::allocator<void>>::id",
                  "type": "unsupported",
                  "initialValue": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "variable": "response",
                    "type": "unsupported",
                    "initialValue": {
                      "kind": "unknown"
                    }
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "(anonymous struct)::vid",
                "value": {
                  "kind": "member-var-ref",
                  "variable": "vector_map_msgs::Signal_<std::allocator<void>>::vid",
                  "type": "unsupported",
                  "initialValue": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "variable": "response",
                    "type": "unsupported",
                    "initialValue": {
                      "kind": "unknown"
                    }
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "(anonymous struct)::plid",
                "value": {
                  "kind": "member-var-ref",
                  "variable": "vector_map_msgs::Signal_<std::allocator<void>>::plid",
                  "type": "unsupported",
                  "initialValue": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "variable": "response",
                    "type": "unsupported",
                    "initialValue": {
                      "kind": "unknown"
                    }
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "(anonymous struct)::type",
                "value": {
                  "kind": "member-var-ref",
                  "variable": "vector_map_msgs::Signal_<std::allocator<void>>::type",
                  "type": "unsupported",
                  "initialValue": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "variable": "response",
                    "type": "unsupported",
                    "initialValue": {
                      "kind": "unknown"
                    }
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "(anonymous struct)::linkid",
                "value": {
                  "kind": "member-var-ref",
                  "variable": "vector_map_msgs::Signal_<std::allocator<void>>::linkid",
                  "type": "unsupported",
                  "initialValue": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "variable": "response",
                    "type": "unsupported",
                    "initialValue": {
                      "kind": "unknown"
                    }
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "radius",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "assignment",
                "variable": "autoware_msgs::ExtractedPosition_<std::allocator<void>>::signalId",
                "value": {
                  "kind": "member-var-ref",
                  "variable": "(anonymous struct)::id",
                  "type": "unsupported",
                  "initialValue": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "variable": "signal",
                    "type": "unsupported",
                    "initialValue": {
                      "kind": "unknown"
                    }
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "autoware_msgs::ExtractedPosition_<std::allocator<void>>::u",
                "value": {
                  "kind": "binary-expr",
                  "operator": "+",
                  "lhs": {
                    "kind": "variable-reference",
                    "variable": "u",
                    "type": "integer",
                    "initialValue": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "variable": "adjust_proj_x",
                    "type": "integer",
                    "initialValue": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "autoware_msgs::ExtractedPosition_<std::allocator<void>>::v",
                "value": {
                  "kind": "binary-expr",
                  "operator": "+",
                  "lhs": {
                    "kind": "variable-reference",
                    "variable": "v",
                    "type": "integer",
                    "initialValue": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "variable": "adjust_proj_y",
                    "type": "integer",
                    "initialValue": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "autoware_msgs::ExtractedPosition_<std::allocator<void>>::radius",
                "value": {
                  "kind": "variable-reference",
                  "variable": "radius",
                  "type": "integer",
                  "initialValue": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "autoware_msgs::ExtractedPosition_<std::allocator<void>>::x",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "assignment",
                "variable": "autoware_msgs::ExtractedPosition_<std::allocator<void>>::y",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "assignment",
                "variable": "autoware_msgs::ExtractedPosition_<std::allocator<void>>::z",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "assignment",
                "variable": "autoware_msgs::ExtractedPosition_<std::allocator<void>>::hang",
                "value": {
                  "kind": "member-var-ref",
                  "variable": "(anonymous struct)::hang",
                  "type": "float",
                  "initialValue": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "autoware_msgs::ExtractedPosition_<std::allocator<void>>::type",
                "value": {
                  "kind": "member-var-ref",
                  "variable": "(anonymous struct)::type",
                  "type": "unsupported",
                  "initialValue": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "variable": "signal",
                    "type": "unsupported",
                    "initialValue": {
                      "kind": "unknown"
                    }
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "autoware_msgs::ExtractedPosition_<std::allocator<void>>::linkId",
                "value": {
                  "kind": "member-var-ref",
                  "variable": "(anonymous struct)::linkid",
                  "type": "unsupported",
                  "initialValue": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "variable": "signal",
                    "type": "unsupported",
                    "initialValue": {
                      "kind": "unknown"
                    }
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "autoware_msgs::ExtractedPosition_<std::allocator<void>>::plId",
                "value": {
                  "kind": "member-var-ref",
                  "variable": "(anonymous struct)::plid",
                  "type": "unsupported",
                  "initialValue": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "variable": "signal",
                    "type": "unsupported",
                    "initialValue": {
                      "kind": "unknown"
                    }
                  }
                }
              },
              {
                "kind": "publish",
                "publisher": "pub",
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "if",
                "trueBranchBody": {
                  "kind": "compound",
                  "statements": [
                    {
                      "kind": "if",
                      "trueBranchBody": {
                        "kind": "compound",
                        "statements": [
                          {
                            "kind": "assignment",
                            "variable": "(anonymous struct)::id",
                            "value": {
                              "kind": "member-var-ref",
                              "variable": "vector_map_msgs::Signal_<std::allocator<void>>::id",
                              "type": "unsupported",
                              "initialValue": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "variable": "response",
                                "type": "unsupported",
                                "initialValue": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          },
                          {
                            "kind": "assignment",
                            "variable": "(anonymous struct)::vid",
                            "value": {
                              "kind": "member-var-ref",
                              "variable": "vector_map_msgs::Signal_<std::allocator<void>>::vid",
                              "type": "unsupported",
                              "initialValue": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "variable": "response",
                                "type": "unsupported",
                                "initialValue": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          },
                          {
                            "kind": "assignment",
                            "variable": "(anonymous struct)::plid",
                            "value": {
                              "kind": "member-var-ref",
                              "variable": "vector_map_msgs::Signal_<std::allocator<void>>::plid",
                              "type": "unsupported",
                              "initialValue": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "variable": "response",
                                "type": "unsupported",
                                "initialValue": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          },
                          {
                            "kind": "assignment",
                            "variable": "(anonymous struct)::type",
                            "value": {
                              "kind": "member-var-ref",
                              "variable": "vector_map_msgs::Signal_<std::allocator<void>>::type",
                              "type": "unsupported",
                              "initialValue": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "variable": "response",
                                "type": "unsupported",
                                "initialValue": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          },
                          {
                            "kind": "assignment",
                            "variable": "(anonymous struct)::linkid",
                            "value": {
                              "kind": "member-var-ref",
                              "variable": "vector_map_msgs::Signal_<std::allocator<void>>::linkid",
                              "type": "unsupported",
                              "initialValue": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "variable": "response",
                                "type": "unsupported",
                                "initialValue": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "kind": "compound",
                        "statements": []
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    },
                    {
                      "kind": "if",
                      "trueBranchBody": {
                        "kind": "compound",
                        "statements": [
                          {
                            "kind": "assignment",
                            "variable": "(anonymous struct)::id",
                            "value": {
                              "kind": "member-var-ref",
                              "variable": "vector_map_msgs::Signal_<std::allocator<void>>::id",
                              "type": "unsupported",
                              "initialValue": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "variable": "response",
                                "type": "unsupported",
                                "initialValue": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          },
                          {
                            "kind": "assignment",
                            "variable": "(anonymous struct)::vid",
                            "value": {
                              "kind": "member-var-ref",
                              "variable": "vector_map_msgs::Signal_<std::allocator<void>>::vid",
                              "type": "unsupported",
                              "initialValue": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "variable": "response",
                                "type": "unsupported",
                                "initialValue": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          },
                          {
                            "kind": "assignment",
                            "variable": "(anonymous struct)::plid",
                            "value": {
                              "kind": "member-var-ref",
                              "variable": "vector_map_msgs::Signal_<std::allocator<void>>::plid",
                              "type": "unsupported",
                              "initialValue": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "variable": "response",
                                "type": "unsupported",
                                "initialValue": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          },
                          {
                            "kind": "assignment",
                            "variable": "(anonymous struct)::type",
                            "value": {
                              "kind": "member-var-ref",
                              "variable": "vector_map_msgs::Signal_<std::allocator<void>>::type",
                              "type": "unsupported",
                              "initialValue": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "variable": "response",
                                "type": "unsupported",
                                "initialValue": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          },
                          {
                            "kind": "assignment",
                            "variable": "(anonymous struct)::linkid",
                            "value": {
                              "kind": "member-var-ref",
                              "variable": "vector_map_msgs::Signal_<std::allocator<void>>::linkid",
                              "type": "unsupported",
                              "initialValue": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "variable": "response",
                                "type": "unsupported",
                                "initialValue": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "kind": "compound",
                        "statements": []
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    },
                    {
                      "kind": "if",
                      "trueBranchBody": {
                        "kind": "compound",
                        "statements": [
                          {
                            "kind": "assignment",
                            "variable": "(anonymous struct)::id",
                            "value": {
                              "kind": "member-var-ref",
                              "variable": "vector_map_msgs::Signal_<std::allocator<void>>::id",
                              "type": "unsupported",
                              "initialValue": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "variable": "response",
                                "type": "unsupported",
                                "initialValue": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          },
                          {
                            "kind": "assignment",
                            "variable": "(anonymous struct)::vid",
                            "value": {
                              "kind": "member-var-ref",
                              "variable": "vector_map_msgs::Signal_<std::allocator<void>>::vid",
                              "type": "unsupported",
                              "initialValue": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "variable": "response",
                                "type": "unsupported",
                                "initialValue": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          },
                          {
                            "kind": "assignment",
                            "variable": "(anonymous struct)::plid",
                            "value": {
                              "kind": "member-var-ref",
                              "variable": "vector_map_msgs::Signal_<std::allocator<void>>::plid",
                              "type": "unsupported",
                              "initialValue": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "variable": "response",
                                "type": "unsupported",
                                "initialValue": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          },
                          {
                            "kind": "assignment",
                            "variable": "(anonymous struct)::type",
                            "value": {
                              "kind": "member-var-ref",
                              "variable": "vector_map_msgs::Signal_<std::allocator<void>>::type",
                              "type": "unsupported",
                              "initialValue": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "variable": "response",
                                "type": "unsupported",
                                "initialValue": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          },
                          {
                            "kind": "assignment",
                            "variable": "(anonymous struct)::linkid",
                            "value": {
                              "kind": "member-var-ref",
                              "variable": "vector_map_msgs::Signal_<std::allocator<void>>::linkid",
                              "type": "unsupported",
                              "initialValue": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "variable": "response",
                                "type": "unsupported",
                                "initialValue": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "kind": "compound",
                        "statements": []
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    },
                    {
                      "kind": "if",
                      "trueBranchBody": {
                        "kind": "compound",
                        "statements": [
                          {
                            "kind": "assignment",
                            "variable": "(anonymous struct)::id",
                            "value": {
                              "kind": "member-var-ref",
                              "variable": "vector_map_msgs::Signal_<std::allocator<void>>::id",
                              "type": "unsupported",
                              "initialValue": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "variable": "response",
                                "type": "unsupported",
                                "initialValue": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          },
                          {
                            "kind": "assignment",
                            "variable": "(anonymous struct)::vid",
                            "value": {
                              "kind": "member-var-ref",
                              "variable": "vector_map_msgs::Signal_<std::allocator<void>>::vid",
                              "type": "unsupported",
                              "initialValue": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "variable": "response",
                                "type": "unsupported",
                                "initialValue": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          },
                          {
                            "kind": "assignment",
                            "variable": "(anonymous struct)::plid",
                            "value": {
                              "kind": "member-var-ref",
                              "variable": "vector_map_msgs::Signal_<std::allocator<void>>::plid",
                              "type": "unsupported",
                              "initialValue": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "variable": "response",
                                "type": "unsupported",
                                "initialValue": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          },
                          {
                            "kind": "assignment",
                            "variable": "(anonymous struct)::type",
                            "value": {
                              "kind": "member-var-ref",
                              "variable": "vector_map_msgs::Signal_<std::allocator<void>>::type",
                              "type": "unsupported",
                              "initialValue": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "variable": "response",
                                "type": "unsupported",
                                "initialValue": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          },
                          {
                            "kind": "assignment",
                            "variable": "(anonymous struct)::linkid",
                            "value": {
                              "kind": "member-var-ref",
                              "variable": "vector_map_msgs::Signal_<std::allocator<void>>::linkid",
                              "type": "unsupported",
                              "initialValue": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "variable": "response",
                                "type": "unsupported",
                                "initialValue": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "kind": "compound",
                        "statements": []
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    },
                    {
                      "kind": "if",
                      "trueBranchBody": {
                        "kind": "compound",
                        "statements": [
                          {
                            "kind": "assignment",
                            "variable": "(anonymous struct)::id",
                            "value": {
                              "kind": "member-var-ref",
                              "variable": "vector_map_msgs::Signal_<std::allocator<void>>::id",
                              "type": "unsupported",
                              "initialValue": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "variable": "response",
                                "type": "unsupported",
                                "initialValue": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          },
                          {
                            "kind": "assignment",
                            "variable": "(anonymous struct)::vid",
                            "value": {
                              "kind": "member-var-ref",
                              "variable": "vector_map_msgs::Signal_<std::allocator<void>>::vid",
                              "type": "unsupported",
                              "initialValue": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "variable": "response",
                                "type": "unsupported",
                                "initialValue": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          },
                          {
                            "kind": "assignment",
                            "variable": "(anonymous struct)::plid",
                            "value": {
                              "kind": "member-var-ref",
                              "variable": "vector_map_msgs::Signal_<std::allocator<void>>::plid",
                              "type": "unsupported",
                              "initialValue": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "variable": "response",
                                "type": "unsupported",
                                "initialValue": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          },
                          {
                            "kind": "assignment",
                            "variable": "(anonymous struct)::type",
                            "value": {
                              "kind": "member-var-ref",
                              "variable": "vector_map_msgs::Signal_<std::allocator<void>>::type",
                              "type": "unsupported",
                              "initialValue": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "variable": "response",
                                "type": "unsupported",
                                "initialValue": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          },
                          {
                            "kind": "assignment",
                            "variable": "(anonymous struct)::linkid",
                            "value": {
                              "kind": "member-var-ref",
                              "variable": "vector_map_msgs::Signal_<std::allocator<void>>::linkid",
                              "type": "unsupported",
                              "initialValue": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "variable": "response",
                                "type": "unsupported",
                                "initialValue": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "kind": "compound",
                        "statements": []
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "kind": "if",
                "trueBranchBody": {
                  "kind": "compound",
                  "statements": [
                    {
                      "kind": "assignment",
                      "variable": "radius",
                      "value": {
                        "kind": "unknown"
                      }
                    },
                    {
                      "kind": "assignment",
                      "variable": "autoware_msgs::ExtractedPosition_<std::allocator<void>>::signalId",
                      "value": {
                        "kind": "member-var-ref",
                        "variable": "(anonymous struct)::id",
                        "type": "unsupported",
                        "initialValue": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "variable": "signal",
                          "type": "unsupported",
                          "initialValue": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    {
                      "kind": "assignment",
                      "variable": "autoware_msgs::ExtractedPosition_<std::allocator<void>>::u",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "+",
                        "lhs": {
                          "kind": "variable-reference",
                          "variable": "u",
                          "type": "integer",
                          "initialValue": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "variable": "adjust_proj_x",
                          "type": "integer",
                          "initialValue": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      }
                    },
                    {
                      "kind": "assignment",
                      "variable": "autoware_msgs::ExtractedPosition_<std::allocator<void>>::v",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "+",
                        "lhs": {
                          "kind": "variable-reference",
                          "variable": "v",
                          "type": "integer",
                          "initialValue": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "variable": "adjust_proj_y",
                          "type": "integer",
                          "initialValue": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      }
                    },
                    {
                      "kind": "assignment",
                      "variable": "autoware_msgs::ExtractedPosition_<std::allocator<void>>::radius",
                      "value": {
                        "kind": "variable-reference",
                        "variable": "radius",
                        "type": "integer",
                        "initialValue": {
                          "kind": "unknown"
                        }
                      }
                    },
                    {
                      "kind": "assignment",
                      "variable": "autoware_msgs::ExtractedPosition_<std::allocator<void>>::x",
                      "value": {
                        "kind": "unknown"
                      }
                    },
                    {
                      "kind": "assignment",
                      "variable": "autoware_msgs::ExtractedPosition_<std::allocator<void>>::y",
                      "value": {
                        "kind": "unknown"
                      }
                    },
                    {
                      "kind": "assignment",
                      "variable": "autoware_msgs::ExtractedPosition_<std::allocator<void>>::z",
                      "value": {
                        "kind": "unknown"
                      }
                    },
                    {
                      "kind": "assignment",
                      "variable": "autoware_msgs::ExtractedPosition_<std::allocator<void>>::hang",
                      "value": {
                        "kind": "member-var-ref",
                        "variable": "(anonymous struct)::hang",
                        "type": "float",
                        "initialValue": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "unknown"
                        }
                      }
                    },
                    {
                      "kind": "assignment",
                      "variable": "autoware_msgs::ExtractedPosition_<std::allocator<void>>::type",
                      "value": {
                        "kind": "member-var-ref",
                        "variable": "(anonymous struct)::type",
                        "type": "unsupported",
                        "initialValue": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "variable": "signal",
                          "type": "unsupported",
                          "initialValue": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    {
                      "kind": "assignment",
                      "variable": "autoware_msgs::ExtractedPosition_<std::allocator<void>>::linkId",
                      "value": {
                        "kind": "member-var-ref",
                        "variable": "(anonymous struct)::linkid",
                        "type": "unsupported",
                        "initialValue": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "variable": "signal",
                          "type": "unsupported",
                          "initialValue": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    {
                      "kind": "assignment",
                      "variable": "autoware_msgs::ExtractedPosition_<std::allocator<void>>::plId",
                      "value": {
                        "kind": "member-var-ref",
                        "variable": "(anonymous struct)::plid",
                        "type": "unsupported",
                        "initialValue": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "variable": "signal",
                          "type": "unsupported",
                          "initialValue": {
                            "kind": "unknown"
                          }
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "kind": "publish",
                "publisher": "pub",
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        },
        {
          "name": "VectorMap::load_lanes",
          "parameters": [],
          "body": {
            "kind": "compound",
            "statements": []
          }
        },
        {
          "name": "(anonymous namespace)::VectorMapClient::set_pose",
          "parameters": [],
          "body": {
            "kind": "compound",
            "statements": []
          }
        },
        {
          "name": "main",
          "parameters": [
            {
              "index": 0,
              "name": "argc",
              "type": "integer"
            }
          ],
          "body": {
            "kind": "compound",
            "statements": [
              {
                "kind": "ros-init",
                "name": {
                  "kind": "string-literal",
                  "literal": "feat_proj"
                }
              },
              {
                "kind": "assignment",
                "variable": "v0",
                "value": {
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "camera_info_topic"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "v1",
                "value": {
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "use_path_info"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_info/point"
                  }
                },
                "format": "vector_map_msgs/PointArray",
                "callback-name": "VectorMap::load_points"
              },
              {
                "kind": "call",
                "callee": "VectorMap::load_points",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_info/line"
                  }
                },
                "format": "vector_map_msgs/LineArray",
                "callback-name": "VectorMap::load_lines"
              },
              {
                "kind": "call",
                "callee": "VectorMap::load_lines",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_info/lane"
                  }
                },
                "format": "vector_map_msgs/LaneArray",
                "callback-name": "VectorMap::load_lanes"
              },
              {
                "kind": "call",
                "callee": "VectorMap::load_lanes",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_info/vector"
                  }
                },
                "format": "vector_map_msgs/VectorArray",
                "callback-name": "VectorMap::load_vectors"
              },
              {
                "kind": "call",
                "callee": "VectorMap::load_vectors",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_info/signal"
                  }
                },
                "format": "vector_map_msgs/SignalArray",
                "callback-name": "VectorMap::load_signals"
              },
              {
                "kind": "call",
                "callee": "VectorMap::load_signals",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_info/white_line"
                  }
                },
                "format": "vector_map_msgs/WhiteLineArray",
                "callback-name": "VectorMap::load_whitelines"
              },
              {
                "kind": "call",
                "callee": "VectorMap::load_whitelines",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_info/dtlane"
                  }
                },
                "format": "vector_map_msgs/DTLaneArray",
                "callback-name": "VectorMap::load_dtlanes"
              },
              {
                "kind": "call",
                "callee": "VectorMap::load_dtlanes",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "ratesleep",
                "rate": {
                  "kind": "float-literal",
                  "literal": 100.0
                }
              },
              {
                "kind": "assignment",
                "variable": "VectorMap::loaded",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                },
                "format": "boost/shared_ptr",
                "callback-name": "cameraInfoCallback"
              },
              {
                "kind": "call",
                "callee": "cameraInfoCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                },
                "format": "boost/shared_ptr",
                "callback-name": "cameraInfoCallback"
              },
              {
                "kind": "call",
                "callee": "cameraInfoCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/config/adjust_xy"
                  }
                },
                "format": "autoware_msgs/AdjustXY",
                "callback-name": "adjust_xyCallback"
              },
              {
                "kind": "call",
                "callee": "adjust_xyCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/current_pose"
                  }
                },
                "format": "geometry_msgs/PoseStamped",
                "callback-name": "(anonymous namespace)::VectorMapClient::set_pose"
              },
              {
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapClient::set_pose",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/final_waypoints"
                  }
                },
                "format": "autoware_msgs/Lane",
                "callback-name": "(anonymous namespace)::VectorMapClient::set_waypoints"
              },
              {
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapClient::set_waypoints",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "calls-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_signal"
                  }
                },
                "format": "vector_map_server/GetSignal"
              },
              {
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "roi_signal"
                  }
                },
                "format": "autoware_msgs/Signals"
              },
              {
                "kind": "call",
                "callee": "echoSignals2",
                "arguments": {},
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "!=",
                    "lhs": {
                      "kind": "unknown"
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "!=",
                    "lhs": {
                      "kind": "variable-reference",
                      "variable": "prev_position",
                      "type": "unsupported",
                      "initialValue": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "variable-reference",
                      "variable": "position",
                      "type": "unsupported",
                      "initialValue": {
                        "kind": "unknown"
                      }
                    }
                  }
                }
              },
              {
                "kind": "ros-init",
                "name": {
                  "kind": "string-literal",
                  "literal": "feat_proj"
                }
              },
              {
                "kind": "assignment",
                "variable": "v2",
                "value": {
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "camera_info_topic"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "v3",
                "value": {
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "use_path_info"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_info/point"
                  }
                },
                "format": "vector_map_msgs/PointArray",
                "callback-name": "VectorMap::load_points"
              },
              {
                "kind": "call",
                "callee": "VectorMap::load_points",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_info/line"
                  }
                },
                "format": "vector_map_msgs/LineArray",
                "callback-name": "VectorMap::load_lines"
              },
              {
                "kind": "call",
                "callee": "VectorMap::load_lines",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_info/lane"
                  }
                },
                "format": "vector_map_msgs/LaneArray",
                "callback-name": "VectorMap::load_lanes"
              },
              {
                "kind": "call",
                "callee": "VectorMap::load_lanes",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_info/vector"
                  }
                },
                "format": "vector_map_msgs/VectorArray",
                "callback-name": "VectorMap::load_vectors"
              },
              {
                "kind": "call",
                "callee": "VectorMap::load_vectors",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_info/signal"
                  }
                },
                "format": "vector_map_msgs/SignalArray",
                "callback-name": "VectorMap::load_signals"
              },
              {
                "kind": "call",
                "callee": "VectorMap::load_signals",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_info/white_line"
                  }
                },
                "format": "vector_map_msgs/WhiteLineArray",
                "callback-name": "VectorMap::load_whitelines"
              },
              {
                "kind": "call",
                "callee": "VectorMap::load_whitelines",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_info/dtlane"
                  }
                },
                "format": "vector_map_msgs/DTLaneArray",
                "callback-name": "VectorMap::load_dtlanes"
              },
              {
                "kind": "call",
                "callee": "VectorMap::load_dtlanes",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "while",
                "body": {
                  "kind": "compound",
                  "statements": [
                    {
                      "kind": "ratesleep",
                      "rate": {
                        "kind": "float-literal",
                        "literal": 100.0
                      }
                    }
                  ]
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "kind": "assignment",
                "variable": "VectorMap::loaded",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                },
                "format": "boost/shared_ptr",
                "callback-name": "cameraInfoCallback"
              },
              {
                "kind": "call",
                "callee": "cameraInfoCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                },
                "format": "boost/shared_ptr",
                "callback-name": "cameraInfoCallback"
              },
              {
                "kind": "call",
                "callee": "cameraInfoCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/config/adjust_xy"
                  }
                },
                "format": "autoware_msgs/AdjustXY",
                "callback-name": "adjust_xyCallback"
              },
              {
                "kind": "call",
                "callee": "adjust_xyCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "if",
                "trueBranchBody": {
                  "kind": "compound",
                  "statements": [
                    {
                      "kind": "subscribes-to",
                      "name": {
                        "kind": "concatenate",
                        "lhs": {
                          "kind": "node-handle",
                          "namespace": {
                            "kind": "string-literal",
                            "literal": ""
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "/current_pose"
                        }
                      },
                      "format": "geometry_msgs/PoseStamped",
                      "callback-name": "(anonymous namespace)::VectorMapClient::set_pose"
                    },
                    {
                      "kind": "call",
                      "callee": "(anonymous namespace)::VectorMapClient::set_pose",
                      "arguments": {},
                      "path_condition": {
                        "kind": "bool-literal",
                        "literal": true
                      }
                    },
                    {
                      "kind": "subscribes-to",
                      "name": {
                        "kind": "concatenate",
                        "lhs": {
                          "kind": "node-handle",
                          "namespace": {
                            "kind": "string-literal",
                            "literal": ""
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "/final_waypoints"
                        }
                      },
                      "format": "autoware_msgs/Lane",
                      "callback-name": "(anonymous namespace)::VectorMapClient::set_waypoints"
                    },
                    {
                      "kind": "call",
                      "callee": "(anonymous namespace)::VectorMapClient::set_waypoints",
                      "arguments": {},
                      "path_condition": {
                        "kind": "bool-literal",
                        "literal": true
                      }
                    },
                    {
                      "kind": "calls-service",
                      "name": {
                        "kind": "concatenate",
                        "lhs": {
                          "kind": "node-handle",
                          "namespace": {
                            "kind": "string-literal",
                            "literal": ""
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "vector_map_server/get_signal"
                        }
                      },
                      "format": "vector_map_server/GetSignal"
                    }
                  ]
                },
                "falseBranchBody": {
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "roi_signal"
                  }
                },
                "format": "autoware_msgs/Signals"
              },
              {
                "kind": "while",
                "body": {
                  "kind": "compound",
                  "statements": [
                    {
                      "kind": "if",
                      "trueBranchBody": {
                        "kind": "compound",
                        "statements": [
                          {
                            "kind": "call",
                            "callee": "echoSignals2",
                            "arguments": {},
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "!=",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "!=",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "variable": "prev_position",
                                  "type": "unsupported",
                                  "initialValue": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "variable-reference",
                                  "variable": "position",
                                  "type": "unsupported",
                                  "initialValue": {
                                    "kind": "unknown"
                                  }
                                }
                              }
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "kind": "compound",
                        "statements": []
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  ]
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        },
        {
          "name": "(anonymous namespace)::VectorMapClient::set_waypoints",
          "parameters": [],
          "body": {
            "kind": "compound",
            "statements": []
          }
        },
        {
          "name": "VectorMap::load_whitelines",
          "parameters": [],
          "body": {
            "kind": "compound",
            "statements": []
          }
        },
        {
          "name": "VectorMap::load_signals",
          "parameters": [],
          "body": {
            "kind": "compound",
            "statements": []
          }
        },
        {
          "name": "adjust_xyCallback",
          "parameters": [],
          "body": {
            "kind": "compound",
            "statements": [
              {
                "kind": "assignment",
                "variable": "adjust_proj_x",
                "value": {
                  "kind": "member-var-ref",
                  "variable": "autoware_msgs::AdjustXY_<std::allocator<void>>::x",
                  "type": "unsupported",
                  "initialValue": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "adjust_proj_y",
                "value": {
                  "kind": "member-var-ref",
                  "variable": "autoware_msgs::AdjustXY_<std::allocator<void>>::y",
                  "type": "unsupported",
                  "initialValue": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "adjust_proj_x",
                "value": {
                  "kind": "member-var-ref",
                  "variable": "autoware_msgs::AdjustXY_<std::allocator<void>>::x",
                  "type": "unsupported",
                  "initialValue": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "adjust_proj_y",
                "value": {
                  "kind": "member-var-ref",
                  "variable": "autoware_msgs::AdjustXY_<std::allocator<void>>::y",
                  "type": "unsupported",
                  "initialValue": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "unknown"
                  }
                }
              }
            ]
          }
        },
        {
          "name": "VectorMap::load_points",
          "parameters": [],
          "body": {
            "kind": "compound",
            "statements": []
          }
        },
        {
          "name": "VectorMap::load_vectors",
          "parameters": [],
          "body": {
            "kind": "compound",
            "statements": []
          }
        },
        {
          "name": "VectorMap::load_lines",
          "parameters": [],
          "body": {
            "kind": "compound",
            "statements": []
          }
        },
        {
          "name": "cameraInfoCallback",
          "parameters": [],
          "body": {
            "kind": "compound",
            "statements": [
              {
                "kind": "assignment",
                "variable": "fx",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "assignment",
                "variable": "fy",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "assignment",
                "variable": "imageWidth",
                "value": {
                  "kind": "member-var-ref",
                  "variable": "sensor_msgs::CameraInfo_<std::allocator<void>>::width",
                  "type": "unsupported",
                  "initialValue": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "imageHeight",
                "value": {
                  "kind": "member-var-ref",
                  "variable": "sensor_msgs::CameraInfo_<std::allocator<void>>::height",
                  "type": "unsupported",
                  "initialValue": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "cx",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "assignment",
                "variable": "cy",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "assignment",
                "variable": "fx",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "assignment",
                "variable": "fy",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "assignment",
                "variable": "imageWidth",
                "value": {
                  "kind": "member-var-ref",
                  "variable": "sensor_msgs::CameraInfo_<std::allocator<void>>::width",
                  "type": "unsupported",
                  "initialValue": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "imageHeight",
                "value": {
                  "kind": "member-var-ref",
                  "variable": "sensor_msgs::CameraInfo_<std::allocator<void>>::height",
                  "type": "unsupported",
                  "initialValue": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "cx",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "assignment",
                "variable": "cy",
                "value": {
                  "kind": "unknown"
                }
              }
            ]
          }
        }
      ]
    }
  }
}