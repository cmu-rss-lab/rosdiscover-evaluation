{
  "image": {
    "sha256": "95a3283df69676a0a64484edcf6b09f886abb9ab1dec292863aa0bffd2ce613b"
  },
  "node-name": "lattice_trajectory_gen",
  "package": {
    "name": "lattice_planner",
    "path": "/home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner"
  },
  "sources": [
    "/home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp"
  ],
  "program": {
    "program": {
      "entrypoint": "main",
      "functions": [
        {
          "name": "canInfoCallback",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:172:3, col:61>",
                "kind": "assignment",
                "variable": "steering_wheel_angle",
                "value": {
                  "kind": "binary-expr",
                  "operator": "*",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "steering_wheel_angle",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "/",
                    "lhs": {
                      "kind": "float-literal",
                      "literal": 3.1496
                    },
                    "rhs": {
                      "kind": "float-literal",
                      "literal": 180.0
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:173:3, col:80 <Spelling=line:64:25>>",
                "kind": "assignment",
                "variable": "g_can_info_curvature",
                "value": {
                  "kind": "binary-expr",
                  "operator": "/",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "/",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "steering_wheel_angle",
                      "type": "float",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "/",
                      "lhs": {
                        "kind": "float-literal",
                        "literal": 666.0
                      },
                      "rhs": {
                        "kind": "float-literal",
                        "literal": 31.28067
                      }
                    }
                  },
                  "rhs": {
                    "kind": "float-literal",
                    "literal": 2.7
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:172:3, col:61>",
                "kind": "assignment",
                "variable": "steering_wheel_angle",
                "value": {
                  "kind": "binary-expr",
                  "operator": "*",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "steering_wheel_angle",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "/",
                    "lhs": {
                      "kind": "float-literal",
                      "literal": 3.1496
                    },
                    "rhs": {
                      "kind": "float-literal",
                      "literal": 180.0
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:173:3, col:80 <Spelling=line:64:25>>",
                "kind": "assignment",
                "variable": "g_can_info_curvature",
                "value": {
                  "kind": "binary-expr",
                  "operator": "/",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "/",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "steering_wheel_angle",
                      "type": "float",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "/",
                      "lhs": {
                        "kind": "float-literal",
                        "literal": 666.0
                      },
                      "rhs": {
                        "kind": "float-literal",
                        "literal": 31.28067
                      }
                    }
                  },
                  "rhs": {
                    "kind": "float-literal",
                    "literal": 2.7
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        },
        {
          "name": "displayNextWaypoint",
          "parameters": [
            {
              "index": 0,
              "name": "i",
              "type": "integer"
            }
          ],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:223:3, col:15>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::id",
                "value": {
                  "kind": "int-literal",
                  "literal": 0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:224:3, col:45>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::type",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "visualization_msgs::Marker_<std::allocator<void>>::SPHERE",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 2
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 2
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:225:3, col:47>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::action",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "visualization_msgs::Marker_<std::allocator<void>>::ADD",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 0
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 0
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:228:3, col:20>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                "value": {
                  "kind": "float-literal",
                  "literal": 1.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:229:3, col:20>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::y",
                "value": {
                  "kind": "float-literal",
                  "literal": 1.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:230:3, col:20>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::z",
                "value": {
                  "kind": "float-literal",
                  "literal": 1.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:231:3, col:20>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::a",
                "value": {
                  "kind": "float-literal",
                  "literal": 1.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:232:3, col:20>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::r",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:233:3, col:20>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::g",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:234:3, col:20>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::b",
                "value": {
                  "kind": "float-literal",
                  "literal": 1.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:235:3, col:25>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::frame_locked",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:236:3, col:27>",
                "kind": "publish",
                "publisher": "g_vis_pub",
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:223:3, col:15>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::id",
                "value": {
                  "kind": "int-literal",
                  "literal": 0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:224:3, col:45>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::type",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "visualization_msgs::Marker_<std::allocator<void>>::SPHERE",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 2
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 2
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:225:3, col:47>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::action",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "visualization_msgs::Marker_<std::allocator<void>>::ADD",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 0
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 0
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:228:3, col:20>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                "value": {
                  "kind": "float-literal",
                  "literal": 1.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:229:3, col:20>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::y",
                "value": {
                  "kind": "float-literal",
                  "literal": 1.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:230:3, col:20>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::z",
                "value": {
                  "kind": "float-literal",
                  "literal": 1.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:231:3, col:20>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::a",
                "value": {
                  "kind": "float-literal",
                  "literal": 1.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:232:3, col:20>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::r",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:233:3, col:20>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::g",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:234:3, col:20>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::b",
                "value": {
                  "kind": "float-literal",
                  "literal": 1.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:235:3, col:25>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::frame_locked",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:236:3, col:27>",
                "kind": "publish",
                "publisher": "g_vis_pub",
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        },
        {
          "name": "main",
          "parameters": [
            {
              "index": 0,
              "name": "argc",
              "type": "integer"
            }
          ],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:517:3, col:49>",
                "kind": "ros-init",
                "name": {
                  "kind": "string-literal",
                  "literal": "lattice_trajectory_gen"
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:524:3, col:45>",
                "kind": "assignment",
                "variable": "v0",
                "value": {
                  "source-location": "",
                  "kind": "reads-param",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "sim_mode"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:525:3, col:49>",
                "kind": "assignment",
                "variable": "v1",
                "value": {
                  "source-location": "",
                  "kind": "reads-param",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "prius_mode"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:526:3, col:45>",
                "kind": "assignment",
                "variable": "v2",
                "value": {
                  "source-location": "",
                  "kind": "reads-param",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "mkz_mode"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:532:15, col:79>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "next_waypoint_mark"
                  }
                },
                "format": "visualization_msgs/Marker"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:533:16, col:57>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "wf_stat"
                  }
                },
                "format": "std_msgs/Bool"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:535:42, col:96>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "spline"
                  }
                },
                "format": "std_msgs/Float64MultiArray"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:536:41, col:94>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "state"
                  }
                },
                "format": "std_msgs/Float64MultiArray"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:538:18, col:82>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "cubic_splines_viz"
                  }
                },
                "format": "visualization_msgs/Marker"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:541:42, col:93>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "final_waypoints"
                  }
                },
                "format": "autoware_msgs/Lane",
                "callback-name": "WayPointCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:541:42, col:93>",
                "kind": "call",
                "callee": "WayPointCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:542:45, col:96>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "current_pose"
                  }
                },
                "format": "geometry_msgs/PoseStamped",
                "callback-name": "currentPoseCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:542:45, col:96>",
                "kind": "call",
                "callee": "currentPoseCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:543:44, col:98>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "current_velocity"
                  }
                },
                "format": "geometry_msgs/TwistStamped",
                "callback-name": "currentVelCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:543:44, col:98>",
                "kind": "call",
                "callee": "currentVelCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:544:39, col:97>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "config/waypoint_follower"
                  }
                },
                "format": "autoware_config_msgs/ConfigWaypointFollower",
                "callback-name": "ConfigCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:544:39, col:97>",
                "kind": "call",
                "callee": "ConfigCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:550:16, col:59>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "can_info"
                  }
                },
                "format": "autoware_can_msgs/CANInfo",
                "callback-name": "canInfoCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:550:16, col:59>",
                "kind": "call",
                "callee": "canInfoCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:594:7, col:23>",
                "kind": "ratesleep",
                "rate": {
                  "kind": "float-literal",
                  "literal": 10.0
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:613:11, col:44>",
                "kind": "call",
                "callee": "displayNextWaypoint",
                "arguments": {},
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "g_waypoint_set",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "g_waypoint_set",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "g_pose_set",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "closest_waypoint",
                        "type": "integer",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": ">",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "next_waypoint",
                      "type": "integer",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:614:11, col:27>",
                "kind": "assignment",
                "variable": "std_msgs::Bool_<std::allocator<void>>::data",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "g_waypoint_set",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "g_waypoint_set",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "g_pose_set",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "closest_waypoint",
                        "type": "integer",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": ">",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "next_waypoint",
                      "type": "integer",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:615:11, col:37>",
                "kind": "publish",
                "publisher": "_stat_pub",
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "g_waypoint_set",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "g_waypoint_set",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "g_pose_set",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "closest_waypoint",
                        "type": "integer",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": ">",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "next_waypoint",
                      "type": "integer",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:635:11, col:20 <Spelling=/home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/include/libtraj_gen.h:57:14>>",
                "kind": "assignment",
                "variable": "initFlag",
                "value": {
                  "kind": "int-literal",
                  "literal": 1
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "g_waypoint_set",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "g_waypoint_set",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "g_pose_set",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "closest_waypoint",
                        "type": "integer",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": ">",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "next_waypoint",
                      "type": "integer",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:648:11, col:47>",
                "kind": "publish",
                "publisher": "spline_parameters_pub",
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "g_waypoint_set",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "g_waypoint_set",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "g_pose_set",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": ">",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "closest_waypoint",
                          "type": "integer",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "next_waypoint",
                        "type": "integer",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "Spline::(anonymous struct)::success",
                      "type": "bool",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "member-var-ref",
                        "qualified_name": "Spline::(anonymous)",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "curvature",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:663:11, col:45>",
                "kind": "publish",
                "publisher": "state_parameters_pub",
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "g_waypoint_set",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "g_waypoint_set",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "g_pose_set",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "closest_waypoint",
                        "type": "integer",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": ">",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "next_waypoint",
                      "type": "integer",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:672:17, col:47>",
                "kind": "call",
                "callee": "drawSpline",
                "arguments": {},
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "g_waypoint_set",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "g_waypoint_set",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "g_pose_set",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": ">",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "closest_waypoint",
                            "type": "integer",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": ">",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "next_waypoint",
                          "type": "integer",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    },
                    "rhs": {
                      "kind": "variable-reference",
                      "qualified_name": "g_sim_mode",
                      "type": "bool",
                      "initial-value": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": ">",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "State::(anonymous struct)::v",
                      "type": "float",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "member-var-ref",
                        "qualified_name": "State::(anonymous)",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "veh",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:690:21, col:23>",
                "kind": "assignment",
                "variable": "i",
                "value": {
                  "kind": "int-literal",
                  "literal": 1
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "g_waypoint_set",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "g_waypoint_set",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "g_pose_set",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": ">",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "closest_waypoint",
                          "type": "integer",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "next_waypoint",
                        "type": "integer",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "g_sim_mode",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": false
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:693:19, col:58>",
                "kind": "assignment",
                "variable": "State::(anonymous struct)::sy",
                "value": {
                  "kind": "binary-expr",
                  "operator": "+",
                  "lhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "State::(anonymous struct)::sy",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "member-var-ref",
                      "qualified_name": "State::(anonymous)",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "variable-reference",
                        "qualified_name": "tempGoal",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "g_waypoint_set",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "g_waypoint_set",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "g_pose_set",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": ">",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "closest_waypoint",
                            "type": "integer",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": ">",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "next_waypoint",
                          "type": "integer",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    },
                    "rhs": {
                      "kind": "variable-reference",
                      "qualified_name": "g_sim_mode",
                      "type": "bool",
                      "initial-value": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "<",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "i",
                      "type": "integer",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 31
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:707:11, col:25>",
                "kind": "assignment",
                "variable": "old_time",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "State::(anonymous struct)::timestamp",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "qualified_name": "State::(anonymous)",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "veh",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "g_waypoint_set",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "g_waypoint_set",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "g_pose_set",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "closest_waypoint",
                        "type": "integer",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": ">",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "next_waypoint",
                      "type": "integer",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:708:11, col:25>",
                "kind": "assignment",
                "variable": "old_theta",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "State::(anonymous struct)::theta",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "qualified_name": "State::(anonymous)",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "veh",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "g_waypoint_set",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "g_waypoint_set",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "g_pose_set",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "closest_waypoint",
                        "type": "integer",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": ">",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "next_waypoint",
                      "type": "integer",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:714:11, col:27>",
                "kind": "assignment",
                "variable": "std_msgs::Bool_<std::allocator<void>>::data",
                "value": {
                  "kind": "bool-literal",
                  "literal": false
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "g_waypoint_set",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "g_waypoint_set",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "g_pose_set",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "closest_waypoint",
                        "type": "integer",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "next_waypoint",
                        "type": "integer",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:715:11, col:37>",
                "kind": "publish",
                "publisher": "_stat_pub",
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "g_waypoint_set",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "g_waypoint_set",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "g_pose_set",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "closest_waypoint",
                        "type": "integer",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "next_waypoint",
                        "type": "integer",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:716:11, col:34>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                "value": {
                  "kind": "int-literal",
                  "literal": 0
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "g_waypoint_set",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "g_waypoint_set",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "g_pose_set",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "closest_waypoint",
                        "type": "integer",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "next_waypoint",
                        "type": "integer",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:717:11, col:35>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::z",
                "value": {
                  "kind": "int-literal",
                  "literal": 0
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "g_waypoint_set",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "g_waypoint_set",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "g_pose_set",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "closest_waypoint",
                        "type": "integer",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "next_waypoint",
                        "type": "integer",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:722:5, col:42>",
                "kind": "assignment",
                "variable": "g_prev_velocity",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "qualified_name": "geometry_msgs::Twist_<std::allocator<void>>::linear",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "member-var-ref",
                      "qualified_name": "geometry_msgs::TwistStamped_<std::allocator<void>>::twist",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "variable-reference",
                        "qualified_name": "twist",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "g_waypoint_set",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "g_waypoint_set",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "g_pose_set",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:723:5, col:21>",
                "kind": "ratesleep",
                "rate": {
                  "kind": "float-literal",
                  "literal": 10.0
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:517:3, col:49>",
                "kind": "ros-init",
                "name": {
                  "kind": "string-literal",
                  "literal": "lattice_trajectory_gen"
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:524:3, col:45>",
                "kind": "assignment",
                "variable": "v3",
                "value": {
                  "source-location": "",
                  "kind": "reads-param",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "sim_mode"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:525:3, col:49>",
                "kind": "assignment",
                "variable": "v4",
                "value": {
                  "source-location": "",
                  "kind": "reads-param",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "prius_mode"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:526:3, col:45>",
                "kind": "assignment",
                "variable": "v5",
                "value": {
                  "source-location": "",
                  "kind": "reads-param",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "mkz_mode"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:532:15, col:79>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "next_waypoint_mark"
                  }
                },
                "format": "visualization_msgs/Marker"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:533:16, col:57>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "wf_stat"
                  }
                },
                "format": "std_msgs/Bool"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:535:42, col:96>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "spline"
                  }
                },
                "format": "std_msgs/Float64MultiArray"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:536:41, col:94>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "state"
                  }
                },
                "format": "std_msgs/Float64MultiArray"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:538:18, col:82>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "cubic_splines_viz"
                  }
                },
                "format": "visualization_msgs/Marker"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:541:42, col:93>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "final_waypoints"
                  }
                },
                "format": "autoware_msgs/Lane",
                "callback-name": "WayPointCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:541:42, col:93>",
                "kind": "call",
                "callee": "WayPointCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:542:45, col:96>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "current_pose"
                  }
                },
                "format": "geometry_msgs/PoseStamped",
                "callback-name": "currentPoseCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:542:45, col:96>",
                "kind": "call",
                "callee": "currentPoseCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:543:44, col:98>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "current_velocity"
                  }
                },
                "format": "geometry_msgs/TwistStamped",
                "callback-name": "currentVelCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:543:44, col:98>",
                "kind": "call",
                "callee": "currentVelCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:544:39, col:97>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "config/waypoint_follower"
                  }
                },
                "format": "autoware_config_msgs/ConfigWaypointFollower",
                "callback-name": "ConfigCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:544:39, col:97>",
                "kind": "call",
                "callee": "ConfigCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:548:3, line:551:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:550:16, col:59>",
                      "kind": "subscribes-to",
                      "name": {
                        "kind": "concatenate",
                        "lhs": {
                          "kind": "node-handle",
                          "namespace": {
                            "kind": "string-literal",
                            "literal": ""
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "can_info"
                        }
                      },
                      "format": "autoware_can_msgs/CANInfo",
                      "callback-name": "canInfoCallback"
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:550:16, col:59>",
                      "kind": "call",
                      "callee": "canInfoCallback",
                      "arguments": {},
                      "path_condition": {
                        "kind": "bool-literal",
                        "literal": true
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:550:16, col:59>",
                      "kind": "subscribes-to",
                      "name": {
                        "kind": "concatenate",
                        "lhs": {
                          "kind": "node-handle",
                          "namespace": {
                            "kind": "string-literal",
                            "literal": ""
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "can_info"
                        }
                      },
                      "format": "autoware_can_msgs/CANInfo",
                      "callback-name": "canInfoCallback"
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:550:16, col:59>",
                      "kind": "call",
                      "callee": "canInfoCallback",
                      "arguments": {},
                      "path_condition": {
                        "kind": "bool-literal",
                        "literal": true
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:584:3, line:724:3>",
                "kind": "while",
                "body": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:591:5, line:596:5>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:594:7, col:23>",
                            "kind": "ratesleep",
                            "rate": {
                              "kind": "float-literal",
                              "literal": 10.0
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:594:7, col:23>",
                            "kind": "ratesleep",
                            "rate": {
                              "kind": "float-literal",
                              "literal": 10.0
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": []
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:603:7, line:720:7>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:610:9, line:718:9>",
                            "kind": "if",
                            "trueBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": [
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:613:11, col:44>",
                                  "kind": "call",
                                  "callee": "displayNextWaypoint",
                                  "arguments": {},
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "g_waypoint_set",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "g_waypoint_set",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "g_pose_set",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "closest_waypoint",
                                          "type": "integer",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": ">",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "next_waypoint",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:614:11, col:27>",
                                  "kind": "assignment",
                                  "variable": "std_msgs::Bool_<std::allocator<void>>::data",
                                  "value": {
                                    "kind": "bool-literal",
                                    "literal": true
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "g_waypoint_set",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "g_waypoint_set",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "g_pose_set",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "closest_waypoint",
                                          "type": "integer",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": ">",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "next_waypoint",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:615:11, col:37>",
                                  "kind": "publish",
                                  "publisher": "_stat_pub",
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "g_waypoint_set",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "g_waypoint_set",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "g_pose_set",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "closest_waypoint",
                                          "type": "integer",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": ">",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "next_waypoint",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:635:11, col:20 <Spelling=/home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/include/libtraj_gen.h:57:14>>",
                                  "kind": "assignment",
                                  "variable": "initFlag",
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "g_waypoint_set",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "g_waypoint_set",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "g_pose_set",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "closest_waypoint",
                                          "type": "integer",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": ">",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "next_waypoint",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:638:11, line:653:11>",
                                  "kind": "if",
                                  "trueBranchBody": {
                                    "source-location": "",
                                    "kind": "compound",
                                    "statements": [
                                      {
                                        "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:648:11, col:47>",
                                        "kind": "publish",
                                        "publisher": "spline_parameters_pub",
                                        "path_condition": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "negate-expr",
                                                  "subExpr": {
                                                    "kind": "binary-expr",
                                                    "operator": "==",
                                                    "lhs": {
                                                      "kind": "variable-reference",
                                                      "qualified_name": "g_waypoint_set",
                                                      "type": "bool",
                                                      "initial-value": {
                                                        "kind": "bool-literal",
                                                        "literal": false
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "bool-literal",
                                                      "literal": false
                                                    }
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "negate-expr",
                                                  "subExpr": {
                                                    "kind": "binary-expr",
                                                    "operator": "||",
                                                    "lhs": {
                                                      "kind": "binary-expr",
                                                      "operator": "==",
                                                      "lhs": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "g_waypoint_set",
                                                        "type": "bool",
                                                        "initial-value": {
                                                          "kind": "bool-literal",
                                                          "literal": false
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "bool-literal",
                                                        "literal": false
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "binary-expr",
                                                      "operator": "==",
                                                      "lhs": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "g_pose_set",
                                                        "type": "bool",
                                                        "initial-value": {
                                                          "kind": "bool-literal",
                                                          "literal": false
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "bool-literal",
                                                        "literal": false
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "binary-expr",
                                                "operator": ">",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "closest_waypoint",
                                                  "type": "integer",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "int-literal",
                                                  "literal": 0
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": ">",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "next_waypoint",
                                                "type": "integer",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              },
                                              "rhs": {
                                                "kind": "int-literal",
                                                "literal": 0
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "Spline::(anonymous struct)::success",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "unknown"
                                              },
                                              "base": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "Spline::(anonymous)",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "curvature",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "int-literal",
                                              "literal": 1
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:648:11, col:47>",
                                        "kind": "publish",
                                        "publisher": "spline_parameters_pub",
                                        "path_condition": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "negate-expr",
                                                  "subExpr": {
                                                    "kind": "binary-expr",
                                                    "operator": "==",
                                                    "lhs": {
                                                      "kind": "variable-reference",
                                                      "qualified_name": "g_waypoint_set",
                                                      "type": "bool",
                                                      "initial-value": {
                                                        "kind": "bool-literal",
                                                        "literal": false
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "bool-literal",
                                                      "literal": false
                                                    }
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "negate-expr",
                                                  "subExpr": {
                                                    "kind": "binary-expr",
                                                    "operator": "||",
                                                    "lhs": {
                                                      "kind": "binary-expr",
                                                      "operator": "==",
                                                      "lhs": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "g_waypoint_set",
                                                        "type": "bool",
                                                        "initial-value": {
                                                          "kind": "bool-literal",
                                                          "literal": false
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "bool-literal",
                                                        "literal": false
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "binary-expr",
                                                      "operator": "==",
                                                      "lhs": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "g_pose_set",
                                                        "type": "bool",
                                                        "initial-value": {
                                                          "kind": "bool-literal",
                                                          "literal": false
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "bool-literal",
                                                        "literal": false
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "binary-expr",
                                                "operator": ">",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "closest_waypoint",
                                                  "type": "integer",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "int-literal",
                                                  "literal": 0
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": ">",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "next_waypoint",
                                                "type": "integer",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              },
                                              "rhs": {
                                                "kind": "int-literal",
                                                "literal": 0
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "Spline::(anonymous struct)::success",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "unknown"
                                              },
                                              "base": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "Spline::(anonymous)",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "curvature",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "int-literal",
                                              "literal": 1
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "falseBranchBody": {
                                    "source-location": "",
                                    "kind": "compound",
                                    "statements": []
                                  },
                                  "condition": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:663:11, col:45>",
                                  "kind": "publish",
                                  "publisher": "state_parameters_pub",
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "g_waypoint_set",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "g_waypoint_set",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "g_pose_set",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "closest_waypoint",
                                          "type": "integer",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": ">",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "next_waypoint",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:667:11, line:704:11>",
                                  "kind": "if",
                                  "trueBranchBody": {
                                    "source-location": "",
                                    "kind": "compound",
                                    "statements": [
                                      {
                                        "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:670:15, line:675:15>",
                                        "kind": "if",
                                        "trueBranchBody": {
                                          "source-location": "",
                                          "kind": "compound",
                                          "statements": [
                                            {
                                              "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:672:17, col:47>",
                                              "kind": "call",
                                              "callee": "drawSpline",
                                              "arguments": {},
                                              "path_condition": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "&&",
                                                  "lhs": {
                                                    "kind": "binary-expr",
                                                    "operator": "&&",
                                                    "lhs": {
                                                      "kind": "binary-expr",
                                                      "operator": "&&",
                                                      "lhs": {
                                                        "kind": "binary-expr",
                                                        "operator": "&&",
                                                        "lhs": {
                                                          "kind": "negate-expr",
                                                          "subExpr": {
                                                            "kind": "binary-expr",
                                                            "operator": "==",
                                                            "lhs": {
                                                              "kind": "variable-reference",
                                                              "qualified_name": "g_waypoint_set",
                                                              "type": "bool",
                                                              "initial-value": {
                                                                "kind": "bool-literal",
                                                                "literal": false
                                                              }
                                                            },
                                                            "rhs": {
                                                              "kind": "bool-literal",
                                                              "literal": false
                                                            }
                                                          }
                                                        },
                                                        "rhs": {
                                                          "kind": "negate-expr",
                                                          "subExpr": {
                                                            "kind": "binary-expr",
                                                            "operator": "||",
                                                            "lhs": {
                                                              "kind": "binary-expr",
                                                              "operator": "==",
                                                              "lhs": {
                                                                "kind": "variable-reference",
                                                                "qualified_name": "g_waypoint_set",
                                                                "type": "bool",
                                                                "initial-value": {
                                                                  "kind": "bool-literal",
                                                                  "literal": false
                                                                }
                                                              },
                                                              "rhs": {
                                                                "kind": "bool-literal",
                                                                "literal": false
                                                              }
                                                            },
                                                            "rhs": {
                                                              "kind": "binary-expr",
                                                              "operator": "==",
                                                              "lhs": {
                                                                "kind": "variable-reference",
                                                                "qualified_name": "g_pose_set",
                                                                "type": "bool",
                                                                "initial-value": {
                                                                  "kind": "bool-literal",
                                                                  "literal": false
                                                                }
                                                              },
                                                              "rhs": {
                                                                "kind": "bool-literal",
                                                                "literal": false
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "binary-expr",
                                                        "operator": ">",
                                                        "lhs": {
                                                          "kind": "variable-reference",
                                                          "qualified_name": "closest_waypoint",
                                                          "type": "integer",
                                                          "initial-value": {
                                                            "kind": "unknown"
                                                          }
                                                        },
                                                        "rhs": {
                                                          "kind": "int-literal",
                                                          "literal": 0
                                                        }
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "binary-expr",
                                                      "operator": ">",
                                                      "lhs": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "next_waypoint",
                                                        "type": "integer",
                                                        "initial-value": {
                                                          "kind": "unknown"
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "int-literal",
                                                        "literal": 0
                                                      }
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "g_sim_mode",
                                                    "type": "bool",
                                                    "initial-value": {
                                                      "kind": "bool-literal",
                                                      "literal": false
                                                    }
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "binary-expr",
                                                  "operator": ">",
                                                  "lhs": {
                                                    "kind": "member-var-ref",
                                                    "qualified_name": "State::(anonymous struct)::v",
                                                    "type": "float",
                                                    "initial-value": {
                                                      "kind": "unknown"
                                                    },
                                                    "base": {
                                                      "kind": "member-var-ref",
                                                      "qualified_name": "State::(anonymous)",
                                                      "type": "unsupported",
                                                      "initial-value": {
                                                        "kind": "unknown"
                                                      },
                                                      "base": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "veh",
                                                        "type": "unsupported",
                                                        "initial-value": {
                                                          "kind": "unknown"
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "int-literal",
                                                    "literal": 0
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:672:17, col:47>",
                                              "kind": "call",
                                              "callee": "drawSpline",
                                              "arguments": {},
                                              "path_condition": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "&&",
                                                  "lhs": {
                                                    "kind": "binary-expr",
                                                    "operator": "&&",
                                                    "lhs": {
                                                      "kind": "binary-expr",
                                                      "operator": "&&",
                                                      "lhs": {
                                                        "kind": "binary-expr",
                                                        "operator": "&&",
                                                        "lhs": {
                                                          "kind": "negate-expr",
                                                          "subExpr": {
                                                            "kind": "binary-expr",
                                                            "operator": "==",
                                                            "lhs": {
                                                              "kind": "variable-reference",
                                                              "qualified_name": "g_waypoint_set",
                                                              "type": "bool",
                                                              "initial-value": {
                                                                "kind": "bool-literal",
                                                                "literal": false
                                                              }
                                                            },
                                                            "rhs": {
                                                              "kind": "bool-literal",
                                                              "literal": false
                                                            }
                                                          }
                                                        },
                                                        "rhs": {
                                                          "kind": "negate-expr",
                                                          "subExpr": {
                                                            "kind": "binary-expr",
                                                            "operator": "||",
                                                            "lhs": {
                                                              "kind": "binary-expr",
                                                              "operator": "==",
                                                              "lhs": {
                                                                "kind": "variable-reference",
                                                                "qualified_name": "g_waypoint_set",
                                                                "type": "bool",
                                                                "initial-value": {
                                                                  "kind": "bool-literal",
                                                                  "literal": false
                                                                }
                                                              },
                                                              "rhs": {
                                                                "kind": "bool-literal",
                                                                "literal": false
                                                              }
                                                            },
                                                            "rhs": {
                                                              "kind": "binary-expr",
                                                              "operator": "==",
                                                              "lhs": {
                                                                "kind": "variable-reference",
                                                                "qualified_name": "g_pose_set",
                                                                "type": "bool",
                                                                "initial-value": {
                                                                  "kind": "bool-literal",
                                                                  "literal": false
                                                                }
                                                              },
                                                              "rhs": {
                                                                "kind": "bool-literal",
                                                                "literal": false
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "binary-expr",
                                                        "operator": ">",
                                                        "lhs": {
                                                          "kind": "variable-reference",
                                                          "qualified_name": "closest_waypoint",
                                                          "type": "integer",
                                                          "initial-value": {
                                                            "kind": "unknown"
                                                          }
                                                        },
                                                        "rhs": {
                                                          "kind": "int-literal",
                                                          "literal": 0
                                                        }
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "binary-expr",
                                                      "operator": ">",
                                                      "lhs": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "next_waypoint",
                                                        "type": "integer",
                                                        "initial-value": {
                                                          "kind": "unknown"
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "int-literal",
                                                        "literal": 0
                                                      }
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "g_sim_mode",
                                                    "type": "bool",
                                                    "initial-value": {
                                                      "kind": "bool-literal",
                                                      "literal": false
                                                    }
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "binary-expr",
                                                  "operator": ">",
                                                  "lhs": {
                                                    "kind": "member-var-ref",
                                                    "qualified_name": "State::(anonymous struct)::v",
                                                    "type": "float",
                                                    "initial-value": {
                                                      "kind": "unknown"
                                                    },
                                                    "base": {
                                                      "kind": "member-var-ref",
                                                      "qualified_name": "State::(anonymous)",
                                                      "type": "unsupported",
                                                      "initial-value": {
                                                        "kind": "unknown"
                                                      },
                                                      "base": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "veh",
                                                        "type": "unsupported",
                                                        "initial-value": {
                                                          "kind": "unknown"
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "int-literal",
                                                    "literal": 0
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "falseBranchBody": {
                                          "source-location": "",
                                          "kind": "compound",
                                          "statements": []
                                        },
                                        "condition": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      }
                                    ]
                                  },
                                  "falseBranchBody": {
                                    "source-location": "",
                                    "kind": "compound",
                                    "statements": []
                                  },
                                  "condition": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:707:11, col:25>",
                                  "kind": "assignment",
                                  "variable": "old_time",
                                  "value": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "State::(anonymous struct)::timestamp",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "State::(anonymous)",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "unknown"
                                      },
                                      "base": {
                                        "kind": "variable-reference",
                                        "qualified_name": "veh",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      }
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "g_waypoint_set",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "g_waypoint_set",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "g_pose_set",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "closest_waypoint",
                                          "type": "integer",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": ">",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "next_waypoint",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:708:11, col:25>",
                                  "kind": "assignment",
                                  "variable": "old_theta",
                                  "value": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "State::(anonymous struct)::theta",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "State::(anonymous)",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "unknown"
                                      },
                                      "base": {
                                        "kind": "variable-reference",
                                        "qualified_name": "veh",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      }
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "g_waypoint_set",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "g_waypoint_set",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "g_pose_set",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "closest_waypoint",
                                          "type": "integer",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": ">",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "next_waypoint",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:613:11, col:44>",
                                  "kind": "call",
                                  "callee": "displayNextWaypoint",
                                  "arguments": {},
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "g_waypoint_set",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "g_waypoint_set",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "g_pose_set",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "closest_waypoint",
                                          "type": "integer",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": ">",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "next_waypoint",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:614:11, col:27>",
                                  "kind": "assignment",
                                  "variable": "std_msgs::Bool_<std::allocator<void>>::data",
                                  "value": {
                                    "kind": "bool-literal",
                                    "literal": true
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "g_waypoint_set",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "g_waypoint_set",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "g_pose_set",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "closest_waypoint",
                                          "type": "integer",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": ">",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "next_waypoint",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:615:11, col:37>",
                                  "kind": "publish",
                                  "publisher": "_stat_pub",
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "g_waypoint_set",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "g_waypoint_set",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "g_pose_set",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "closest_waypoint",
                                          "type": "integer",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": ">",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "next_waypoint",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:635:11, col:20 <Spelling=/home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/include/libtraj_gen.h:57:14>>",
                                  "kind": "assignment",
                                  "variable": "initFlag",
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "g_waypoint_set",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "g_waypoint_set",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "g_pose_set",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "closest_waypoint",
                                          "type": "integer",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": ">",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "next_waypoint",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:663:11, col:45>",
                                  "kind": "publish",
                                  "publisher": "state_parameters_pub",
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "g_waypoint_set",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "g_waypoint_set",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "g_pose_set",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "closest_waypoint",
                                          "type": "integer",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": ">",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "next_waypoint",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:707:11, col:25>",
                                  "kind": "assignment",
                                  "variable": "old_time",
                                  "value": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "State::(anonymous struct)::timestamp",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "State::(anonymous)",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "unknown"
                                      },
                                      "base": {
                                        "kind": "variable-reference",
                                        "qualified_name": "veh",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      }
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "g_waypoint_set",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "g_waypoint_set",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "g_pose_set",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "closest_waypoint",
                                          "type": "integer",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": ">",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "next_waypoint",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:708:11, col:25>",
                                  "kind": "assignment",
                                  "variable": "old_theta",
                                  "value": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "State::(anonymous struct)::theta",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "State::(anonymous)",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "unknown"
                                      },
                                      "base": {
                                        "kind": "variable-reference",
                                        "qualified_name": "veh",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      }
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "g_waypoint_set",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "g_waypoint_set",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "g_pose_set",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "closest_waypoint",
                                          "type": "integer",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": ">",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "next_waypoint",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "falseBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": [
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:714:11, col:27>",
                                  "kind": "assignment",
                                  "variable": "std_msgs::Bool_<std::allocator<void>>::data",
                                  "value": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "g_waypoint_set",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "g_waypoint_set",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "g_pose_set",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "closest_waypoint",
                                          "type": "integer",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "next_waypoint",
                                          "type": "integer",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:715:11, col:37>",
                                  "kind": "publish",
                                  "publisher": "_stat_pub",
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "g_waypoint_set",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "g_waypoint_set",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "g_pose_set",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "closest_waypoint",
                                          "type": "integer",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "next_waypoint",
                                          "type": "integer",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:716:11, col:34>",
                                  "kind": "assignment",
                                  "variable": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "g_waypoint_set",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "g_waypoint_set",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "g_pose_set",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "closest_waypoint",
                                          "type": "integer",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "next_waypoint",
                                          "type": "integer",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:717:11, col:35>",
                                  "kind": "assignment",
                                  "variable": "geometry_msgs::Vector3_<std::allocator<void>>::z",
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "g_waypoint_set",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "g_waypoint_set",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "g_pose_set",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "closest_waypoint",
                                          "type": "integer",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "next_waypoint",
                                          "type": "integer",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:714:11, col:27>",
                                  "kind": "assignment",
                                  "variable": "std_msgs::Bool_<std::allocator<void>>::data",
                                  "value": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "g_waypoint_set",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "g_waypoint_set",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "g_pose_set",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "closest_waypoint",
                                          "type": "integer",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "next_waypoint",
                                          "type": "integer",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:715:11, col:37>",
                                  "kind": "publish",
                                  "publisher": "_stat_pub",
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "g_waypoint_set",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "g_waypoint_set",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "g_pose_set",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "closest_waypoint",
                                          "type": "integer",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "next_waypoint",
                                          "type": "integer",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:716:11, col:34>",
                                  "kind": "assignment",
                                  "variable": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "g_waypoint_set",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "g_waypoint_set",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "g_pose_set",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "closest_waypoint",
                                          "type": "integer",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "next_waypoint",
                                          "type": "integer",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:717:11, col:35>",
                                  "kind": "assignment",
                                  "variable": "geometry_msgs::Vector3_<std::allocator<void>>::z",
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "g_waypoint_set",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "g_waypoint_set",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "g_pose_set",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "closest_waypoint",
                                          "type": "integer",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "next_waypoint",
                                          "type": "integer",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "condition": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": []
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:722:5, col:42>",
                      "kind": "assignment",
                      "variable": "g_prev_velocity",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        },
                        "base": {
                          "kind": "member-var-ref",
                          "qualified_name": "geometry_msgs::Twist_<std::allocator<void>>::linear",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "member-var-ref",
                            "qualified_name": "geometry_msgs::TwistStamped_<std::allocator<void>>::twist",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "variable-reference",
                              "qualified_name": "twist",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            }
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "g_waypoint_set",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "g_waypoint_set",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "g_pose_set",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:723:5, col:21>",
                      "kind": "ratesleep",
                      "rate": {
                        "kind": "float-literal",
                        "literal": 10.0
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:722:5, col:42>",
                      "kind": "assignment",
                      "variable": "g_prev_velocity",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        },
                        "base": {
                          "kind": "member-var-ref",
                          "qualified_name": "geometry_msgs::Twist_<std::allocator<void>>::linear",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "member-var-ref",
                            "qualified_name": "geometry_msgs::TwistStamped_<std::allocator<void>>::twist",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "variable-reference",
                              "qualified_name": "twist",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            }
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "g_waypoint_set",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "g_waypoint_set",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "g_pose_set",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:723:5, col:21>",
                      "kind": "ratesleep",
                      "rate": {
                        "kind": "float-literal",
                        "literal": 10.0
                      }
                    }
                  ]
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              }
            ]
          }
        },
        {
          "name": "WayPointCallback",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:130:3, col:20>",
                "kind": "assignment",
                "variable": "g_waypoint_set",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:130:3, col:20>",
                "kind": "assignment",
                "variable": "g_waypoint_set",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        },
        {
          "name": "currentVelCallback",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:124:3, col:42>",
                "kind": "assignment",
                "variable": "g_current_velocity",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "qualified_name": "geometry_msgs::Twist_<std::allocator<void>>::linear",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "member-var-ref",
                      "qualified_name": "geometry_msgs::TwistStamped_<std::allocator<void>>::twist",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "unknown"
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:124:3, col:42>",
                "kind": "assignment",
                "variable": "g_current_velocity",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "qualified_name": "geometry_msgs::Twist_<std::allocator<void>>::linear",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "member-var-ref",
                      "qualified_name": "geometry_msgs::TwistStamped_<std::allocator<void>>::twist",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "unknown"
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        },
        {
          "name": "currentPoseCallback",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:119:3, col:16>",
                "kind": "assignment",
                "variable": "g_pose_set",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:119:3, col:16>",
                "kind": "assignment",
                "variable": "g_pose_set",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        },
        {
          "name": "ConfigCallback",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:107:3, col:26>",
                "kind": "assignment",
                "variable": "g_param_flag",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigWaypointFollower_<std::allocator<void>>::param_flag",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:108:3, col:35>",
                "kind": "assignment",
                "variable": "g_lookahead_threshold",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigWaypointFollower_<std::allocator<void>>::lookahead_distance",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:109:3, col:32>",
                "kind": "assignment",
                "variable": "g_initial_velocity",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigWaypointFollower_<std::allocator<void>>::velocity",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:110:3, col:47>",
                "kind": "assignment",
                "variable": "g_look_ahead_threshold_calc_ratio",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigWaypointFollower_<std::allocator<void>>::lookahead_ratio",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:111:3, col:44>",
                "kind": "assignment",
                "variable": "g_minimum_look_ahead_threshold",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigWaypointFollower_<std::allocator<void>>::minimum_lookahead_distance",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:107:3, col:26>",
                "kind": "assignment",
                "variable": "g_param_flag",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigWaypointFollower_<std::allocator<void>>::param_flag",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:108:3, col:35>",
                "kind": "assignment",
                "variable": "g_lookahead_threshold",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigWaypointFollower_<std::allocator<void>>::lookahead_distance",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:109:3, col:32>",
                "kind": "assignment",
                "variable": "g_initial_velocity",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigWaypointFollower_<std::allocator<void>>::velocity",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:110:3, col:47>",
                "kind": "assignment",
                "variable": "g_look_ahead_threshold_calc_ratio",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigWaypointFollower_<std::allocator<void>>::lookahead_ratio",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:111:3, col:44>",
                "kind": "assignment",
                "variable": "g_minimum_look_ahead_threshold",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigWaypointFollower_<std::allocator<void>>::minimum_lookahead_distance",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        },
        {
          "name": "drawSpline",
          "parameters": [
            {
              "index": 3,
              "name": "selected",
              "type": "integer"
            },
            {
              "index": 2,
              "name": "flag",
              "type": "integer"
            }
          ],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:448:3, col:51>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::action",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "visualization_msgs::Marker_<std::allocator<void>>::ADD",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 0
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 0
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:452:3, col:19>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::id",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "flag",
                  "type": "integer",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:453:3, col:49>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::type",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "visualization_msgs::Marker_<std::allocator<void>>::LINE_STRIP",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 4
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 4
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:459:5, col:26>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.08
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": ">",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "selected",
                    "type": "integer",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "int-literal",
                    "literal": 0
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:460:5, col:26>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::r",
                "value": {
                  "kind": "float-literal",
                  "literal": 1.0
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": ">",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "selected",
                    "type": "integer",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "int-literal",
                    "literal": 0
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:461:5, col:26>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::a",
                "value": {
                  "kind": "float-literal",
                  "literal": 1.0
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": ">",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "selected",
                    "type": "integer",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "int-literal",
                    "literal": 0
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:467:5, col:26>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.1
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "binary-expr",
                    "operator": ">",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "selected",
                      "type": "integer",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:468:5, col:25>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::g",
                "value": {
                  "kind": "float-literal",
                  "literal": 1.0
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "binary-expr",
                    "operator": ">",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "selected",
                      "type": "integer",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:469:5, col:26>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::a",
                "value": {
                  "kind": "float-literal",
                  "literal": 1.0
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "binary-expr",
                    "operator": ">",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "selected",
                      "type": "integer",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:489:5, col:16>",
                "kind": "assignment",
                "variable": "geometry_msgs::Point_<std::allocator<void>>::x",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "State::(anonymous struct)::sx",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "qualified_name": "State::(anonymous)",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "temp",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "<",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "sim_time",
                      "type": "float",
                      "initial-value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      }
                    },
                    "rhs": {
                      "kind": "variable-reference",
                      "qualified_name": "horizon",
                      "type": "float",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "<",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "sim_time",
                        "type": "float",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        }
                      },
                      "rhs": {
                        "kind": "variable-reference",
                        "qualified_name": "horizon",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "Spline::(anonymous struct)::success",
                        "type": "bool",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "member-var-ref",
                          "qualified_name": "Spline::(anonymous)",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "curvature",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:490:5, col:16>",
                "kind": "assignment",
                "variable": "geometry_msgs::Point_<std::allocator<void>>::y",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "State::(anonymous struct)::sy",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "qualified_name": "State::(anonymous)",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "temp",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "<",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "sim_time",
                      "type": "float",
                      "initial-value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      }
                    },
                    "rhs": {
                      "kind": "variable-reference",
                      "qualified_name": "horizon",
                      "type": "float",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "<",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "sim_time",
                        "type": "float",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        }
                      },
                      "rhs": {
                        "kind": "variable-reference",
                        "qualified_name": "horizon",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "Spline::(anonymous struct)::success",
                        "type": "bool",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "member-var-ref",
                          "qualified_name": "Spline::(anonymous)",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "curvature",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:491:5, col:11>",
                "kind": "assignment",
                "variable": "geometry_msgs::Point_<std::allocator<void>>::z",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "<",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "sim_time",
                      "type": "float",
                      "initial-value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      }
                    },
                    "rhs": {
                      "kind": "variable-reference",
                      "qualified_name": "horizon",
                      "type": "float",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "<",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "sim_time",
                        "type": "float",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        }
                      },
                      "rhs": {
                        "kind": "variable-reference",
                        "qualified_name": "horizon",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "Spline::(anonymous struct)::success",
                        "type": "bool",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "member-var-ref",
                          "qualified_name": "Spline::(anonymous)",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "curvature",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:494:5, col:26 <Spelling=/home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/include/libtraj_gen.h:118:28>>",
                "kind": "assignment",
                "variable": "sim_time",
                "value": {
                  "kind": "binary-expr",
                  "operator": "+",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "sim_time",
                    "type": "float",
                    "initial-value": {
                      "kind": "float-literal",
                      "literal": 0.0
                    }
                  },
                  "rhs": {
                    "kind": "float-literal",
                    "literal": 0.1
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "<",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "sim_time",
                      "type": "float",
                      "initial-value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      }
                    },
                    "rhs": {
                      "kind": "variable-reference",
                      "qualified_name": "horizon",
                      "type": "float",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "<",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "sim_time",
                        "type": "float",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        }
                      },
                      "rhs": {
                        "kind": "variable-reference",
                        "qualified_name": "horizon",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "Spline::(anonymous struct)::success",
                        "type": "bool",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "member-var-ref",
                          "qualified_name": "Spline::(anonymous)",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "curvature",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:498:3, col:34>",
                "kind": "publish",
                "publisher": "g_marker_pub",
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:448:3, col:51>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::action",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "visualization_msgs::Marker_<std::allocator<void>>::ADD",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 0
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 0
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:452:3, col:19>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::id",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "flag",
                  "type": "integer",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:453:3, col:49>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::type",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "visualization_msgs::Marker_<std::allocator<void>>::LINE_STRIP",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 4
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 4
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:457:3, line:470:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:459:5, col:26>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                      "value": {
                        "kind": "float-literal",
                        "literal": 0.08
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": ">",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "selected",
                          "type": "integer",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:460:5, col:26>",
                      "kind": "assignment",
                      "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::r",
                      "value": {
                        "kind": "float-literal",
                        "literal": 1.0
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": ">",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "selected",
                          "type": "integer",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:461:5, col:26>",
                      "kind": "assignment",
                      "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::a",
                      "value": {
                        "kind": "float-literal",
                        "literal": 1.0
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": ">",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "selected",
                          "type": "integer",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:459:5, col:26>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                      "value": {
                        "kind": "float-literal",
                        "literal": 0.08
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": ">",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "selected",
                          "type": "integer",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:460:5, col:26>",
                      "kind": "assignment",
                      "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::r",
                      "value": {
                        "kind": "float-literal",
                        "literal": 1.0
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": ">",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "selected",
                          "type": "integer",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:461:5, col:26>",
                      "kind": "assignment",
                      "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::a",
                      "value": {
                        "kind": "float-literal",
                        "literal": 1.0
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": ">",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "selected",
                          "type": "integer",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:467:5, col:26>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                      "value": {
                        "kind": "float-literal",
                        "literal": 0.1
                      },
                      "path_condition": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": ">",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "selected",
                            "type": "integer",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:468:5, col:25>",
                      "kind": "assignment",
                      "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::g",
                      "value": {
                        "kind": "float-literal",
                        "literal": 1.0
                      },
                      "path_condition": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": ">",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "selected",
                            "type": "integer",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:469:5, col:26>",
                      "kind": "assignment",
                      "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::a",
                      "value": {
                        "kind": "float-literal",
                        "literal": 1.0
                      },
                      "path_condition": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": ">",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "selected",
                            "type": "integer",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:467:5, col:26>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                      "value": {
                        "kind": "float-literal",
                        "literal": 0.1
                      },
                      "path_condition": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": ">",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "selected",
                            "type": "integer",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:468:5, col:25>",
                      "kind": "assignment",
                      "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::g",
                      "value": {
                        "kind": "float-literal",
                        "literal": 1.0
                      },
                      "path_condition": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": ">",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "selected",
                            "type": "integer",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:469:5, col:26>",
                      "kind": "assignment",
                      "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::a",
                      "value": {
                        "kind": "float-literal",
                        "literal": 1.0
                      },
                      "path_condition": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": ">",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "selected",
                            "type": "integer",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      }
                    }
                  ]
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:486:3, line:495:3>",
                "kind": "while",
                "body": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:489:5, col:16>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Point_<std::allocator<void>>::x",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "State::(anonymous struct)::sx",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "member-var-ref",
                          "qualified_name": "State::(anonymous)",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "temp",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "sim_time",
                            "type": "float",
                            "initial-value": {
                              "kind": "float-literal",
                              "literal": 0.0
                            }
                          },
                          "rhs": {
                            "kind": "variable-reference",
                            "qualified_name": "horizon",
                            "type": "float",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "sim_time",
                              "type": "float",
                              "initial-value": {
                                "kind": "float-literal",
                                "literal": 0.0
                              }
                            },
                            "rhs": {
                              "kind": "variable-reference",
                              "qualified_name": "horizon",
                              "type": "float",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "Spline::(anonymous struct)::success",
                              "type": "bool",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "member-var-ref",
                                "qualified_name": "Spline::(anonymous)",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "variable-reference",
                                  "qualified_name": "curvature",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:490:5, col:16>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Point_<std::allocator<void>>::y",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "State::(anonymous struct)::sy",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "member-var-ref",
                          "qualified_name": "State::(anonymous)",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "temp",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "sim_time",
                            "type": "float",
                            "initial-value": {
                              "kind": "float-literal",
                              "literal": 0.0
                            }
                          },
                          "rhs": {
                            "kind": "variable-reference",
                            "qualified_name": "horizon",
                            "type": "float",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "sim_time",
                              "type": "float",
                              "initial-value": {
                                "kind": "float-literal",
                                "literal": 0.0
                              }
                            },
                            "rhs": {
                              "kind": "variable-reference",
                              "qualified_name": "horizon",
                              "type": "float",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "Spline::(anonymous struct)::success",
                              "type": "bool",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "member-var-ref",
                                "qualified_name": "Spline::(anonymous)",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "variable-reference",
                                  "qualified_name": "curvature",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:491:5, col:11>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Point_<std::allocator<void>>::z",
                      "value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "sim_time",
                            "type": "float",
                            "initial-value": {
                              "kind": "float-literal",
                              "literal": 0.0
                            }
                          },
                          "rhs": {
                            "kind": "variable-reference",
                            "qualified_name": "horizon",
                            "type": "float",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "sim_time",
                              "type": "float",
                              "initial-value": {
                                "kind": "float-literal",
                                "literal": 0.0
                              }
                            },
                            "rhs": {
                              "kind": "variable-reference",
                              "qualified_name": "horizon",
                              "type": "float",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "Spline::(anonymous struct)::success",
                              "type": "bool",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "member-var-ref",
                                "qualified_name": "Spline::(anonymous)",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "variable-reference",
                                  "qualified_name": "curvature",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:494:5, col:26 <Spelling=/home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/include/libtraj_gen.h:118:28>>",
                      "kind": "assignment",
                      "variable": "sim_time",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "+",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "sim_time",
                          "type": "float",
                          "initial-value": {
                            "kind": "float-literal",
                            "literal": 0.0
                          }
                        },
                        "rhs": {
                          "kind": "float-literal",
                          "literal": 0.1
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "sim_time",
                            "type": "float",
                            "initial-value": {
                              "kind": "float-literal",
                              "literal": 0.0
                            }
                          },
                          "rhs": {
                            "kind": "variable-reference",
                            "qualified_name": "horizon",
                            "type": "float",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "sim_time",
                              "type": "float",
                              "initial-value": {
                                "kind": "float-literal",
                                "literal": 0.0
                              }
                            },
                            "rhs": {
                              "kind": "variable-reference",
                              "qualified_name": "horizon",
                              "type": "float",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "Spline::(anonymous struct)::success",
                              "type": "bool",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "member-var-ref",
                                "qualified_name": "Spline::(anonymous)",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "variable-reference",
                                  "qualified_name": "curvature",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:489:5, col:16>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Point_<std::allocator<void>>::x",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "State::(anonymous struct)::sx",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "member-var-ref",
                          "qualified_name": "State::(anonymous)",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "temp",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "sim_time",
                            "type": "float",
                            "initial-value": {
                              "kind": "float-literal",
                              "literal": 0.0
                            }
                          },
                          "rhs": {
                            "kind": "variable-reference",
                            "qualified_name": "horizon",
                            "type": "float",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "sim_time",
                              "type": "float",
                              "initial-value": {
                                "kind": "float-literal",
                                "literal": 0.0
                              }
                            },
                            "rhs": {
                              "kind": "variable-reference",
                              "qualified_name": "horizon",
                              "type": "float",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "Spline::(anonymous struct)::success",
                              "type": "bool",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "member-var-ref",
                                "qualified_name": "Spline::(anonymous)",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "variable-reference",
                                  "qualified_name": "curvature",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:490:5, col:16>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Point_<std::allocator<void>>::y",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "State::(anonymous struct)::sy",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "member-var-ref",
                          "qualified_name": "State::(anonymous)",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "temp",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "sim_time",
                            "type": "float",
                            "initial-value": {
                              "kind": "float-literal",
                              "literal": 0.0
                            }
                          },
                          "rhs": {
                            "kind": "variable-reference",
                            "qualified_name": "horizon",
                            "type": "float",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "sim_time",
                              "type": "float",
                              "initial-value": {
                                "kind": "float-literal",
                                "literal": 0.0
                              }
                            },
                            "rhs": {
                              "kind": "variable-reference",
                              "qualified_name": "horizon",
                              "type": "float",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "Spline::(anonymous struct)::success",
                              "type": "bool",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "member-var-ref",
                                "qualified_name": "Spline::(anonymous)",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "variable-reference",
                                  "qualified_name": "curvature",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:491:5, col:11>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Point_<std::allocator<void>>::z",
                      "value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "sim_time",
                            "type": "float",
                            "initial-value": {
                              "kind": "float-literal",
                              "literal": 0.0
                            }
                          },
                          "rhs": {
                            "kind": "variable-reference",
                            "qualified_name": "horizon",
                            "type": "float",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "sim_time",
                              "type": "float",
                              "initial-value": {
                                "kind": "float-literal",
                                "literal": 0.0
                              }
                            },
                            "rhs": {
                              "kind": "variable-reference",
                              "qualified_name": "horizon",
                              "type": "float",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "Spline::(anonymous struct)::success",
                              "type": "bool",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "member-var-ref",
                                "qualified_name": "Spline::(anonymous)",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "variable-reference",
                                  "qualified_name": "curvature",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:494:5, col:26 <Spelling=/home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/include/libtraj_gen.h:118:28>>",
                      "kind": "assignment",
                      "variable": "sim_time",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "+",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "sim_time",
                          "type": "float",
                          "initial-value": {
                            "kind": "float-literal",
                            "literal": 0.0
                          }
                        },
                        "rhs": {
                          "kind": "float-literal",
                          "literal": 0.1
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "sim_time",
                            "type": "float",
                            "initial-value": {
                              "kind": "float-literal",
                              "literal": 0.0
                            }
                          },
                          "rhs": {
                            "kind": "variable-reference",
                            "qualified_name": "horizon",
                            "type": "float",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "sim_time",
                              "type": "float",
                              "initial-value": {
                                "kind": "float-literal",
                                "literal": 0.0
                              }
                            },
                            "rhs": {
                              "kind": "variable-reference",
                              "qualified_name": "horizon",
                              "type": "float",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "Spline::(anonymous struct)::success",
                              "type": "bool",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "member-var-ref",
                                "qualified_name": "Spline::(anonymous)",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "variable-reference",
                                  "qualified_name": "curvature",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_trajectory_gen/lattice_trajectory_gen.cpp:498:3, col:34>",
                "kind": "publish",
                "publisher": "g_marker_pub",
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        }
      ]
    }
  }
}