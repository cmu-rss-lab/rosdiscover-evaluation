{
  "image": {
    "sha256": "66d3186041a66d858724cf5f48d49ffb170dbb061b60afbad2f689521c32be3e"
  },
  "node-name": "mqtt_sender",
  "package": {
    "name": "mqtt_socket",
    "path": "/home/autoware/Autoware/ros/src/socket/packages/mqtt_socket"
  },
  "sources": [
    "/home/autoware/Autoware/ros/src/socket/packages/mqtt_socket/nodes/mqtt_sender/mqtt_sender.cpp"
  ],
  "program": {
    "program": {
      "entrypoint": "main",
      "functions": [
        {
          "name": "MqttSender::MqttSender",
          "parameters": [],
          "body": {
            "kind": "compound",
            "statements": [
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": "~"
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/can_info"
                  }
                },
                "format": "autoware_can_msgs/CANInfo",
                "callback-name": "MqttSender::canInfoCallback"
              },
              {
                "kind": "call",
                "callee": "MqttSender::canInfoCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": "~"
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/target_velocity_array"
                  }
                },
                "format": "std_msgs/Float64MultiArray",
                "callback-name": "MqttSender::targetVelocityArrayCallback"
              },
              {
                "kind": "call",
                "callee": "MqttSender::targetVelocityArrayCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": "~"
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/twist_cmd"
                  }
                },
                "format": "geometry_msgs/TwistStamped",
                "callback-name": "MqttSender::twistCmdCallback"
              },
              {
                "kind": "call",
                "callee": "MqttSender::twistCmdCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": "~"
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/state"
                  }
                },
                "format": "std_msgs/String",
                "callback-name": "MqttSender::stateCallback"
              },
              {
                "kind": "call",
                "callee": "MqttSender::stateCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": "~"
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/mode_info"
                  }
                },
                "format": "tablet_socket_msgs/mode_info",
                "callback-name": "MqttSender::modeInfoCallback"
              },
              {
                "kind": "call",
                "callee": "MqttSender::modeInfoCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": "~"
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/current_pose"
                  }
                },
                "format": "geometry_msgs/PoseStamped",
                "callback-name": "MqttSender::currentPoseCallback"
              },
              {
                "kind": "call",
                "callee": "MqttSender::currentPoseCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "assignment",
                "variable": "mqtt_client",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": "~"
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/can_info"
                  }
                },
                "format": "autoware_can_msgs/CANInfo",
                "callback-name": "MqttSender::canInfoCallback"
              },
              {
                "kind": "call",
                "callee": "MqttSender::canInfoCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": "~"
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/target_velocity_array"
                  }
                },
                "format": "std_msgs/Float64MultiArray",
                "callback-name": "MqttSender::targetVelocityArrayCallback"
              },
              {
                "kind": "call",
                "callee": "MqttSender::targetVelocityArrayCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": "~"
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/twist_cmd"
                  }
                },
                "format": "geometry_msgs/TwistStamped",
                "callback-name": "MqttSender::twistCmdCallback"
              },
              {
                "kind": "call",
                "callee": "MqttSender::twistCmdCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": "~"
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/state"
                  }
                },
                "format": "std_msgs/String",
                "callback-name": "MqttSender::stateCallback"
              },
              {
                "kind": "call",
                "callee": "MqttSender::stateCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": "~"
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/mode_info"
                  }
                },
                "format": "tablet_socket_msgs/mode_info",
                "callback-name": "MqttSender::modeInfoCallback"
              },
              {
                "kind": "call",
                "callee": "MqttSender::modeInfoCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": "~"
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/current_pose"
                  }
                },
                "format": "geometry_msgs/PoseStamped",
                "callback-name": "MqttSender::currentPoseCallback"
              },
              {
                "kind": "call",
                "callee": "MqttSender::currentPoseCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "assignment",
                "variable": "mqtt_client",
                "value": {
                  "kind": "unknown"
                }
              }
            ]
          }
        },
        {
          "name": "MqttSender::targetVelocityArrayCallback",
          "parameters": [],
          "body": {
            "kind": "compound",
            "statements": []
          }
        },
        {
          "name": "MqttSender::stateCallback",
          "parameters": [],
          "body": {
            "kind": "compound",
            "statements": []
          }
        },
        {
          "name": "MqttSender::modeInfoCallback",
          "parameters": [],
          "body": {
            "kind": "compound",
            "statements": []
          }
        },
        {
          "name": "MqttSender::currentPoseCallback",
          "parameters": [],
          "body": {
            "kind": "compound",
            "statements": []
          }
        },
        {
          "name": "MqttSender::canInfoCallback",
          "parameters": [],
          "body": {
            "kind": "compound",
            "statements": []
          }
        },
        {
          "name": "main",
          "parameters": [
            {
              "index": 0,
              "name": "argc",
              "type": "integer"
            }
          ],
          "body": {
            "kind": "compound",
            "statements": [
              {
                "kind": "ros-init",
                "name": {
                  "kind": "string-literal",
                  "literal": "mqtt_sender"
                }
              },
              {
                "kind": "call",
                "callee": "MqttSender::MqttSender",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "ros-init",
                "name": {
                  "kind": "string-literal",
                  "literal": "mqtt_sender"
                }
              },
              {
                "kind": "call",
                "callee": "MqttSender::MqttSender",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        },
        {
          "name": "MqttSender::twistCmdCallback",
          "parameters": [],
          "body": {
            "kind": "compound",
            "statements": []
          }
        }
      ]
    }
  }
}