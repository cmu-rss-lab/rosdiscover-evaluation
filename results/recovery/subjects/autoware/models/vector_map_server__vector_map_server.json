{
  "image": {
    "sha256": "95a3283df69676a0a64484edcf6b09f886abb9ab1dec292863aa0bffd2ce613b"
  },
  "node-name": "vector_map_server",
  "package": {
    "name": "vector_map_server",
    "path": "/home/autoware/Autoware/ros/src/data/packages/vector_map_server"
  },
  "sources": [
    "/home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp"
  ],
  "program": {
    "program": {
      "entrypoint": "main",
      "functions": [
        {
          "name": "(anonymous namespace)::VectorMapServer::getRoadSign",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:812:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:815:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:812:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:815:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              }
            ]
          }
        },
        {
          "name": "(anonymous namespace)::VectorMapServer::getRoadMark",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:780:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:783:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:780:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:783:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              }
            ]
          }
        },
        {
          "name": "(anonymous namespace)::VectorMapServer::getRoadEdge",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:668:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:671:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:668:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:671:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              }
            ]
          }
        },
        {
          "name": "(anonymous namespace)::VectorMapServer::getCurb",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:700:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:703:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:700:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:703:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              }
            ]
          }
        },
        {
          "name": "(anonymous namespace)::VectorMapServer::getWhiteLine",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:716:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:719:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:716:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:719:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              }
            ]
          }
        },
        {
          "name": "(anonymous namespace)::VectorMapServer::getStopLine",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:732:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:735:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:732:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:735:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              }
            ]
          }
        },
        {
          "name": "(anonymous namespace)::VectorMapServer::getGutter",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:684:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:687:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:684:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:687:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              }
            ]
          }
        },
        {
          "name": "(anonymous namespace)::VectorMapServer::getSideStrip",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:940:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:943:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:940:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:943:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              }
            ]
          }
        },
        {
          "name": "(anonymous namespace)::VectorMapServer::getDriveOnPortion",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:908:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:911:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:908:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:911:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              }
            ]
          }
        },
        {
          "name": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:527:7, col:73>",
                "kind": "assignment",
                "variable": "fine_lanes",
                "unqualified_variable": "fine_lanes",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "unknown"
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:529:7, col:69>",
                "kind": "assignment",
                "variable": "fine_lanes",
                "unqualified_variable": "fine_lanes",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:546:11, col:20>",
                "kind": "assignment",
                "variable": "future",
                "unqualified_variable": "future",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "vector_map_msgs::Lane_<std::allocator<void>>::lnid",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              },
                              "base": {
                                "kind": "variable-reference",
                                "qualified_name": "nearest_lane",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "unknown"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "unknown"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "!=",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "__begin3",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "variable-reference",
                        "qualified_name": "__end3",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "vector_map_msgs::Lane_<std::allocator<void>>::lnid",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      },
                      "base": {
                        "kind": "variable-reference",
                        "qualified_name": "fine_lane",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "vector_map_msgs::Lane_<std::allocator<void>>::lnid",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      },
                      "base": {
                        "kind": "variable-reference",
                        "qualified_name": "nearest_lane",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:576:11, col:55>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::action",
                "unqualified_variable": "action",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "visualization_msgs::Marker_<std::allocator<void>>::DELETE",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 2
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 2
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "vector_map_msgs::Lane_<std::allocator<void>>::lnid",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              },
                              "base": {
                                "kind": "variable-reference",
                                "qualified_name": "nearest_lane",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "unknown"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "(anonymous namespace)::VectorMapServer::debug_",
                        "type": "bool",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "unknown"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "!=",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "__begin4",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "variable-reference",
                      "qualified_name": "__end4",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:577:9, col:48>",
                "kind": "publish",
                "publisher": "marker_array_pub_",
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "vector_map_msgs::Lane_<std::allocator<void>>::lnid",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            },
                            "base": {
                              "kind": "variable-reference",
                              "qualified_name": "nearest_lane",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "(anonymous namespace)::VectorMapServer::debug_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "unknown"
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:579:7, col:23>",
                "kind": "assignment",
                "variable": "(anonymous namespace)::VectorMapServer::marker_array_",
                "unqualified_variable": "marker_array_",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "marker_array_buffer",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "vector_map_msgs::Lane_<std::allocator<void>>::lnid",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "nearest_lane",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "(anonymous namespace)::VectorMapServer::debug_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:580:7, col:46>",
                "kind": "publish",
                "publisher": "marker_array_pub_",
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "vector_map_msgs::Lane_<std::allocator<void>>::lnid",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "nearest_lane",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "(anonymous namespace)::VectorMapServer::debug_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:526:5, line:529:69>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:527:7, col:73>",
                      "kind": "assignment",
                      "variable": "fine_lanes",
                      "unqualified_variable": "fine_lanes",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "unknown"
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:527:7, col:73>",
                      "kind": "assignment",
                      "variable": "fine_lanes",
                      "unqualified_variable": "fine_lanes",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "unknown"
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:529:7, col:69>",
                      "kind": "assignment",
                      "variable": "fine_lanes",
                      "unqualified_variable": "fine_lanes",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "unknown"
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:529:7, col:69>",
                      "kind": "assignment",
                      "variable": "fine_lanes",
                      "unqualified_variable": "fine_lanes",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "unknown"
                        }
                      }
                    }
                  ]
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:538:5, line:550:5>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:545:9, line:546:20>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:546:11, col:20>",
                            "kind": "assignment",
                            "variable": "future",
                            "unqualified_variable": "future",
                            "value": {
                              "kind": "bool-literal",
                              "literal": true
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "==",
                                        "lhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "vector_map_msgs::Lane_<std::allocator<void>>::lnid",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "int-literal",
                                            "literal": 0
                                          },
                                          "base": {
                                            "kind": "variable-reference",
                                            "qualified_name": "nearest_lane",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "unknown"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "!=",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "__begin3",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "__end3",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "vector_map_msgs::Lane_<std::allocator<void>>::lnid",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "variable-reference",
                                    "qualified_name": "fine_lane",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "vector_map_msgs::Lane_<std::allocator<void>>::lnid",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "variable-reference",
                                    "qualified_name": "nearest_lane",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:546:11, col:20>",
                            "kind": "assignment",
                            "variable": "future",
                            "unqualified_variable": "future",
                            "value": {
                              "kind": "bool-literal",
                              "literal": true
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "==",
                                        "lhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "vector_map_msgs::Lane_<std::allocator<void>>::lnid",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "int-literal",
                                            "literal": 0
                                          },
                                          "base": {
                                            "kind": "variable-reference",
                                            "qualified_name": "nearest_lane",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "unknown"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "!=",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "__begin3",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "__end3",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "vector_map_msgs::Lane_<std::allocator<void>>::lnid",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "variable-reference",
                                    "qualified_name": "fine_lane",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "vector_map_msgs::Lane_<std::allocator<void>>::lnid",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "variable-reference",
                                    "qualified_name": "nearest_lane",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": []
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  ]
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:552:5, line:581:5>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:573:7, line:578:7>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:576:11, col:55>",
                            "kind": "assignment",
                            "variable": "visualization_msgs::Marker_<std::allocator<void>>::action",
                            "unqualified_variable": "action",
                            "value": {
                              "kind": "enum-ref",
                              "qualified_name": "visualization_msgs::Marker_<std::allocator<void>>::DELETE",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 2
                              },
                              "value": {
                                "kind": "int-literal",
                                "literal": 2
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "==",
                                        "lhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "vector_map_msgs::Lane_<std::allocator<void>>::lnid",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "int-literal",
                                            "literal": 0
                                          },
                                          "base": {
                                            "kind": "variable-reference",
                                            "qualified_name": "nearest_lane",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "(anonymous namespace)::VectorMapServer::debug_",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "unknown"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "!=",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "__begin4",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "__end4",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:577:9, col:48>",
                            "kind": "publish",
                            "publisher": "marker_array_pub_",
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "vector_map_msgs::Lane_<std::allocator<void>>::lnid",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        },
                                        "base": {
                                          "kind": "variable-reference",
                                          "qualified_name": "nearest_lane",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "(anonymous namespace)::VectorMapServer::debug_",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:576:11, col:55>",
                            "kind": "assignment",
                            "variable": "visualization_msgs::Marker_<std::allocator<void>>::action",
                            "unqualified_variable": "action",
                            "value": {
                              "kind": "enum-ref",
                              "qualified_name": "visualization_msgs::Marker_<std::allocator<void>>::DELETE",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 2
                              },
                              "value": {
                                "kind": "int-literal",
                                "literal": 2
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "==",
                                        "lhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "vector_map_msgs::Lane_<std::allocator<void>>::lnid",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "int-literal",
                                            "literal": 0
                                          },
                                          "base": {
                                            "kind": "variable-reference",
                                            "qualified_name": "nearest_lane",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "(anonymous namespace)::VectorMapServer::debug_",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "unknown"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "!=",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "__begin4",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "__end4",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:577:9, col:48>",
                            "kind": "publish",
                            "publisher": "marker_array_pub_",
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "vector_map_msgs::Lane_<std::allocator<void>>::lnid",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        },
                                        "base": {
                                          "kind": "variable-reference",
                                          "qualified_name": "nearest_lane",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "(anonymous namespace)::VectorMapServer::debug_",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": []
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:579:7, col:23>",
                      "kind": "assignment",
                      "variable": "(anonymous namespace)::VectorMapServer::marker_array_",
                      "unqualified_variable": "marker_array_",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "marker_array_buffer",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "vector_map_msgs::Lane_<std::allocator<void>>::lnid",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "variable-reference",
                                  "qualified_name": "nearest_lane",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "(anonymous namespace)::VectorMapServer::debug_",
                          "type": "bool",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:580:7, col:46>",
                      "kind": "publish",
                      "publisher": "marker_array_pub_",
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "vector_map_msgs::Lane_<std::allocator<void>>::lnid",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "variable-reference",
                                  "qualified_name": "nearest_lane",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "(anonymous namespace)::VectorMapServer::debug_",
                          "type": "bool",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:579:7, col:23>",
                      "kind": "assignment",
                      "variable": "(anonymous namespace)::VectorMapServer::marker_array_",
                      "unqualified_variable": "marker_array_",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "marker_array_buffer",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "vector_map_msgs::Lane_<std::allocator<void>>::lnid",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "variable-reference",
                                  "qualified_name": "nearest_lane",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "(anonymous namespace)::VectorMapServer::debug_",
                          "type": "bool",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:580:7, col:46>",
                      "kind": "publish",
                      "publisher": "marker_array_pub_",
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "vector_map_msgs::Lane_<std::allocator<void>>::lnid",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "variable-reference",
                                  "qualified_name": "nearest_lane",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "(anonymous namespace)::VectorMapServer::debug_",
                          "type": "bool",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              }
            ]
          }
        },
        {
          "name": "(anonymous namespace)::VectorMapServer::getNode",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:617:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:620:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:617:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:620:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              }
            ]
          }
        },
        {
          "name": "(anonymous namespace)::VectorMapServer::getUtilityPole",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:860:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:863:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:860:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:863:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              }
            ]
          }
        },
        {
          "name": "(anonymous namespace)::VectorMapServer::getCrossRoad",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:924:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:927:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:924:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:927:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              }
            ]
          }
        },
        {
          "name": "(anonymous namespace)::VectorMapServer::getFence",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:988:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:991:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:988:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:991:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              }
            ]
          }
        },
        {
          "name": "(anonymous namespace)::VectorMapServer::getSideWalk",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:892:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:895:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:892:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:895:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              }
            ]
          }
        },
        {
          "name": "(anonymous namespace)::VectorMapServer::getLane",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:639:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:642:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:639:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:642:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              }
            ]
          }
        },
        {
          "name": "(anonymous namespace)::VectorMapServer::getSignal",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:828:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:831:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:828:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:831:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              }
            ]
          }
        },
        {
          "name": "(anonymous namespace)::VectorMapServer::getRoadPole",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:796:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:799:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:796:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:799:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              }
            ]
          }
        },
        {
          "name": "(anonymous namespace)::VectorMapServer::getGuardRail",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:876:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:879:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:876:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:879:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              }
            ]
          }
        },
        {
          "name": "(anonymous namespace)::VectorMapServer::getCurveMirror",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:956:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:959:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:956:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:959:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              }
            ]
          }
        },
        {
          "name": "(anonymous namespace)::VectorMapServer::getWall",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:972:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:975:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:972:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:975:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              }
            ]
          }
        },
        {
          "name": "(anonymous namespace)::VectorMapServer::getDTLane",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:600:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:603:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:600:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:603:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              }
            ]
          }
        },
        {
          "name": "(anonymous namespace)::VectorMapServer::getStreetLight",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:844:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:847:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:844:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:847:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              }
            ]
          }
        },
        {
          "name": "main",
          "parameters": [
            {
              "index": 0,
              "name": "argc",
              "type": "integer"
            }
          ],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1040:3, col:44>",
                "kind": "ros-init",
                "name": {
                  "kind": "string-literal",
                  "literal": "vector_map_server"
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1043:19, col:25>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::VectorMapServer",
                "arguments": {
                  "nh": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1045:39, line:1046:92>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_dtlane"
                  }
                },
                "format": "vector_map_server/GetDTLane",
                "callback-name": "(anonymous namespace)::VectorMapServer::getDTLane"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1045:39, line:1046:92>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getDTLane",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1047:37, line:1048:88>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_node"
                  }
                },
                "format": "vector_map_server/GetNode",
                "callback-name": "(anonymous namespace)::VectorMapServer::getNode"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1047:37, line:1048:88>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getNode",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1049:37, line:1050:88>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_lane"
                  }
                },
                "format": "vector_map_server/GetLane",
                "callback-name": "(anonymous namespace)::VectorMapServer::getLane"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1049:37, line:1050:88>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getLane",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1051:41, line:1052:95>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_way_area"
                  }
                },
                "format": "vector_map_server/GetWayArea",
                "callback-name": "(anonymous namespace)::VectorMapServer::getWayArea"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1051:41, line:1052:95>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getWayArea",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1053:42, line:1054:97>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_road_edge"
                  }
                },
                "format": "vector_map_server/GetRoadEdge",
                "callback-name": "(anonymous namespace)::VectorMapServer::getRoadEdge"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1053:42, line:1054:97>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getRoadEdge",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1055:39, line:1056:92>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_gutter"
                  }
                },
                "format": "vector_map_server/GetGutter",
                "callback-name": "(anonymous namespace)::VectorMapServer::getGutter"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1055:39, line:1056:92>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getGutter",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1057:37, line:1058:88>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_curb"
                  }
                },
                "format": "vector_map_server/GetCurb",
                "callback-name": "(anonymous namespace)::VectorMapServer::getCurb"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1057:37, line:1058:88>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getCurb",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1059:43, line:1060:99>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_white_line"
                  }
                },
                "format": "vector_map_server/GetWhiteLine",
                "callback-name": "(anonymous namespace)::VectorMapServer::getWhiteLine"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1059:43, line:1060:99>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getWhiteLine",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1061:42, line:1062:97>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_stop_line"
                  }
                },
                "format": "vector_map_server/GetStopLine",
                "callback-name": "(anonymous namespace)::VectorMapServer::getStopLine"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1061:42, line:1062:97>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getStopLine",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1063:43, line:1064:99>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_zebra_zone"
                  }
                },
                "format": "vector_map_server/GetZebraZone",
                "callback-name": "(anonymous namespace)::VectorMapServer::getZebraZone"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1063:43, line:1064:99>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getZebraZone",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1065:43, line:1066:99>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_cross_walk"
                  }
                },
                "format": "vector_map_server/GetCrossWalk",
                "callback-name": "(anonymous namespace)::VectorMapServer::getCrossWalk"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1065:43, line:1066:99>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getCrossWalk",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1067:42, line:1068:97>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_road_mark"
                  }
                },
                "format": "vector_map_server/GetRoadMark",
                "callback-name": "(anonymous namespace)::VectorMapServer::getRoadMark"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1067:42, line:1068:97>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getRoadMark",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1069:42, line:1070:97>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_road_pole"
                  }
                },
                "format": "vector_map_server/GetRoadPole",
                "callback-name": "(anonymous namespace)::VectorMapServer::getRoadPole"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1069:42, line:1070:97>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getRoadPole",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1071:42, line:1072:97>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_road_sign"
                  }
                },
                "format": "vector_map_server/GetRoadSign",
                "callback-name": "(anonymous namespace)::VectorMapServer::getRoadSign"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1071:42, line:1072:97>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getRoadSign",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1073:39, line:1074:92>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_signal"
                  }
                },
                "format": "vector_map_server/GetSignal",
                "callback-name": "(anonymous namespace)::VectorMapServer::getSignal"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1073:39, line:1074:92>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getSignal",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1075:45, line:1076:103>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_street_light"
                  }
                },
                "format": "vector_map_server/GetStreetLight",
                "callback-name": "(anonymous namespace)::VectorMapServer::getStreetLight"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1075:45, line:1076:103>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getStreetLight",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1077:45, line:1078:103>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_utility_pole"
                  }
                },
                "format": "vector_map_server/GetUtilityPole",
                "callback-name": "(anonymous namespace)::VectorMapServer::getUtilityPole"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1077:45, line:1078:103>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getUtilityPole",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1079:43, line:1080:99>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_guard_rail"
                  }
                },
                "format": "vector_map_server/GetGuardRail",
                "callback-name": "(anonymous namespace)::VectorMapServer::getGuardRail"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1079:43, line:1080:99>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getGuardRail",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1081:42, line:1082:97>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_side_walk"
                  }
                },
                "format": "vector_map_server/GetSideWalk",
                "callback-name": "(anonymous namespace)::VectorMapServer::getSideWalk"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1081:42, line:1082:97>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getSideWalk",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1083:49, line:1084:110>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_drive_on_portion"
                  }
                },
                "format": "vector_map_server/GetDriveOnPortion",
                "callback-name": "(anonymous namespace)::VectorMapServer::getDriveOnPortion"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1083:49, line:1084:110>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getDriveOnPortion",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1085:43, line:1086:99>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_cross_road"
                  }
                },
                "format": "vector_map_server/GetCrossRoad",
                "callback-name": "(anonymous namespace)::VectorMapServer::getCrossRoad"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1085:43, line:1086:99>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getCrossRoad",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1087:43, line:1088:99>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_side_strip"
                  }
                },
                "format": "vector_map_server/GetSideStrip",
                "callback-name": "(anonymous namespace)::VectorMapServer::getSideStrip"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1087:43, line:1088:99>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getSideStrip",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1089:45, line:1090:103>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_curve_mirror"
                  }
                },
                "format": "vector_map_server/GetCurveMirror",
                "callback-name": "(anonymous namespace)::VectorMapServer::getCurveMirror"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1089:45, line:1090:103>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getCurveMirror",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1091:37, line:1092:88>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_wall"
                  }
                },
                "format": "vector_map_server/GetWall",
                "callback-name": "(anonymous namespace)::VectorMapServer::getWall"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1091:37, line:1092:88>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getWall",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1093:38, line:1094:90>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_fence"
                  }
                },
                "format": "vector_map_server/GetFence",
                "callback-name": "(anonymous namespace)::VectorMapServer::getFence"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1093:38, line:1094:90>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getFence",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1095:46, line:1096:105>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_rail_crossing"
                  }
                },
                "format": "vector_map_server/GetRailCrossing",
                "callback-name": "(anonymous namespace)::VectorMapServer::getRailCrossing"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1095:46, line:1096:105>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getRailCrossing",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1097:40, line:1098:93>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/is_way_area"
                  }
                },
                "format": "vector_map_server/PositionState",
                "callback-name": "(anonymous namespace)::VectorMapServer::isWayArea"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1097:40, line:1098:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::isWayArea",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1040:3, col:44>",
                "kind": "ros-init",
                "name": {
                  "kind": "string-literal",
                  "literal": "vector_map_server"
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1043:19, col:25>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::VectorMapServer",
                "arguments": {
                  "nh": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1045:39, line:1046:92>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_dtlane"
                  }
                },
                "format": "vector_map_server/GetDTLane",
                "callback-name": "(anonymous namespace)::VectorMapServer::getDTLane"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1045:39, line:1046:92>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getDTLane",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1047:37, line:1048:88>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_node"
                  }
                },
                "format": "vector_map_server/GetNode",
                "callback-name": "(anonymous namespace)::VectorMapServer::getNode"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1047:37, line:1048:88>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getNode",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1049:37, line:1050:88>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_lane"
                  }
                },
                "format": "vector_map_server/GetLane",
                "callback-name": "(anonymous namespace)::VectorMapServer::getLane"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1049:37, line:1050:88>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getLane",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1051:41, line:1052:95>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_way_area"
                  }
                },
                "format": "vector_map_server/GetWayArea",
                "callback-name": "(anonymous namespace)::VectorMapServer::getWayArea"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1051:41, line:1052:95>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getWayArea",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1053:42, line:1054:97>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_road_edge"
                  }
                },
                "format": "vector_map_server/GetRoadEdge",
                "callback-name": "(anonymous namespace)::VectorMapServer::getRoadEdge"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1053:42, line:1054:97>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getRoadEdge",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1055:39, line:1056:92>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_gutter"
                  }
                },
                "format": "vector_map_server/GetGutter",
                "callback-name": "(anonymous namespace)::VectorMapServer::getGutter"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1055:39, line:1056:92>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getGutter",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1057:37, line:1058:88>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_curb"
                  }
                },
                "format": "vector_map_server/GetCurb",
                "callback-name": "(anonymous namespace)::VectorMapServer::getCurb"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1057:37, line:1058:88>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getCurb",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1059:43, line:1060:99>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_white_line"
                  }
                },
                "format": "vector_map_server/GetWhiteLine",
                "callback-name": "(anonymous namespace)::VectorMapServer::getWhiteLine"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1059:43, line:1060:99>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getWhiteLine",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1061:42, line:1062:97>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_stop_line"
                  }
                },
                "format": "vector_map_server/GetStopLine",
                "callback-name": "(anonymous namespace)::VectorMapServer::getStopLine"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1061:42, line:1062:97>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getStopLine",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1063:43, line:1064:99>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_zebra_zone"
                  }
                },
                "format": "vector_map_server/GetZebraZone",
                "callback-name": "(anonymous namespace)::VectorMapServer::getZebraZone"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1063:43, line:1064:99>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getZebraZone",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1065:43, line:1066:99>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_cross_walk"
                  }
                },
                "format": "vector_map_server/GetCrossWalk",
                "callback-name": "(anonymous namespace)::VectorMapServer::getCrossWalk"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1065:43, line:1066:99>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getCrossWalk",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1067:42, line:1068:97>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_road_mark"
                  }
                },
                "format": "vector_map_server/GetRoadMark",
                "callback-name": "(anonymous namespace)::VectorMapServer::getRoadMark"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1067:42, line:1068:97>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getRoadMark",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1069:42, line:1070:97>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_road_pole"
                  }
                },
                "format": "vector_map_server/GetRoadPole",
                "callback-name": "(anonymous namespace)::VectorMapServer::getRoadPole"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1069:42, line:1070:97>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getRoadPole",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1071:42, line:1072:97>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_road_sign"
                  }
                },
                "format": "vector_map_server/GetRoadSign",
                "callback-name": "(anonymous namespace)::VectorMapServer::getRoadSign"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1071:42, line:1072:97>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getRoadSign",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1073:39, line:1074:92>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_signal"
                  }
                },
                "format": "vector_map_server/GetSignal",
                "callback-name": "(anonymous namespace)::VectorMapServer::getSignal"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1073:39, line:1074:92>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getSignal",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1075:45, line:1076:103>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_street_light"
                  }
                },
                "format": "vector_map_server/GetStreetLight",
                "callback-name": "(anonymous namespace)::VectorMapServer::getStreetLight"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1075:45, line:1076:103>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getStreetLight",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1077:45, line:1078:103>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_utility_pole"
                  }
                },
                "format": "vector_map_server/GetUtilityPole",
                "callback-name": "(anonymous namespace)::VectorMapServer::getUtilityPole"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1077:45, line:1078:103>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getUtilityPole",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1079:43, line:1080:99>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_guard_rail"
                  }
                },
                "format": "vector_map_server/GetGuardRail",
                "callback-name": "(anonymous namespace)::VectorMapServer::getGuardRail"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1079:43, line:1080:99>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getGuardRail",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1081:42, line:1082:97>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_side_walk"
                  }
                },
                "format": "vector_map_server/GetSideWalk",
                "callback-name": "(anonymous namespace)::VectorMapServer::getSideWalk"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1081:42, line:1082:97>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getSideWalk",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1083:49, line:1084:110>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_drive_on_portion"
                  }
                },
                "format": "vector_map_server/GetDriveOnPortion",
                "callback-name": "(anonymous namespace)::VectorMapServer::getDriveOnPortion"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1083:49, line:1084:110>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getDriveOnPortion",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1085:43, line:1086:99>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_cross_road"
                  }
                },
                "format": "vector_map_server/GetCrossRoad",
                "callback-name": "(anonymous namespace)::VectorMapServer::getCrossRoad"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1085:43, line:1086:99>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getCrossRoad",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1087:43, line:1088:99>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_side_strip"
                  }
                },
                "format": "vector_map_server/GetSideStrip",
                "callback-name": "(anonymous namespace)::VectorMapServer::getSideStrip"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1087:43, line:1088:99>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getSideStrip",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1089:45, line:1090:103>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_curve_mirror"
                  }
                },
                "format": "vector_map_server/GetCurveMirror",
                "callback-name": "(anonymous namespace)::VectorMapServer::getCurveMirror"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1089:45, line:1090:103>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getCurveMirror",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1091:37, line:1092:88>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_wall"
                  }
                },
                "format": "vector_map_server/GetWall",
                "callback-name": "(anonymous namespace)::VectorMapServer::getWall"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1091:37, line:1092:88>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getWall",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1093:38, line:1094:90>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_fence"
                  }
                },
                "format": "vector_map_server/GetFence",
                "callback-name": "(anonymous namespace)::VectorMapServer::getFence"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1093:38, line:1094:90>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getFence",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1095:46, line:1096:105>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/get_rail_crossing"
                  }
                },
                "format": "vector_map_server/GetRailCrossing",
                "callback-name": "(anonymous namespace)::VectorMapServer::getRailCrossing"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1095:46, line:1096:105>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::getRailCrossing",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1097:40, line:1098:93>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server/is_way_area"
                  }
                },
                "format": "vector_map_server/PositionState",
                "callback-name": "(anonymous namespace)::VectorMapServer::isWayArea"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1097:40, line:1098:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::isWayArea",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        },
        {
          "name": "(anonymous namespace)::VectorMapServer::getRailCrossing",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1004:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1007:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1004:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1007:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              }
            ]
          }
        },
        {
          "name": "(anonymous namespace)::VectorMapServer::VectorMapServer",
          "parameters": [
            {
              "index": 0,
              "name": "nh",
              "type": "node-handle"
            }
          ],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:590:5, col:61>",
                "kind": "assignment",
                "variable": "v0",
                "unqualified_variable": "v0",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "arg",
                      "name": "nh"
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "vector_map_server/radius"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:591:5, col:59>",
                "kind": "assignment",
                "variable": "v1",
                "unqualified_variable": "v1",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "arg",
                      "name": "nh"
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "vector_map_server/loops"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:592:5, col:60>",
                "kind": "assignment",
                "variable": "v2",
                "unqualified_variable": "v2",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "arg",
                      "name": "nh"
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "vector_map_server/debug"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:594:7, col:102>",
                "kind": "assignment",
                "variable": "(anonymous namespace)::VectorMapServer::marker_array_pub_",
                "unqualified_variable": "marker_array_pub_",
                "value": {
                  "kind": "string-literal",
                  "literal": "vector_map_server"
                },
                "path_condition": {
                  "kind": "member-var-ref",
                  "qualified_name": "(anonymous namespace)::VectorMapServer::debug_",
                  "type": "bool",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "this-expr"
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:594:27, col:102>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "arg",
                    "name": "nh"
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_server"
                  }
                },
                "format": "visualization_msgs/MarkerArray",
                "source_location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:594:27, col:102>"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:590:5, col:61>",
                "kind": "assignment",
                "variable": "v3",
                "unqualified_variable": "v3",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "arg",
                      "name": "nh"
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "vector_map_server/radius"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:591:5, col:59>",
                "kind": "assignment",
                "variable": "v4",
                "unqualified_variable": "v4",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "arg",
                      "name": "nh"
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "vector_map_server/loops"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:592:5, col:60>",
                "kind": "assignment",
                "variable": "v5",
                "unqualified_variable": "v5",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "arg",
                      "name": "nh"
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "vector_map_server/debug"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:593:5, line:594:102>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:594:7, col:102>",
                      "kind": "assignment",
                      "variable": "(anonymous namespace)::VectorMapServer::marker_array_pub_",
                      "unqualified_variable": "marker_array_pub_",
                      "value": {
                        "kind": "string-literal",
                        "literal": "vector_map_server"
                      },
                      "path_condition": {
                        "kind": "member-var-ref",
                        "qualified_name": "(anonymous namespace)::VectorMapServer::debug_",
                        "type": "bool",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:594:27, col:102>",
                      "kind": "publishes-to",
                      "name": {
                        "kind": "concatenate",
                        "lhs": {
                          "kind": "arg",
                          "name": "nh"
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "vector_map_server"
                        }
                      },
                      "format": "visualization_msgs/MarkerArray",
                      "source_location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:594:27, col:102>"
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:594:7, col:102>",
                      "kind": "assignment",
                      "variable": "(anonymous namespace)::VectorMapServer::marker_array_pub_",
                      "unqualified_variable": "marker_array_pub_",
                      "value": {
                        "kind": "string-literal",
                        "literal": "vector_map_server"
                      },
                      "path_condition": {
                        "kind": "member-var-ref",
                        "qualified_name": "(anonymous namespace)::VectorMapServer::debug_",
                        "type": "bool",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:594:27, col:102>",
                      "kind": "publishes-to",
                      "name": {
                        "kind": "concatenate",
                        "lhs": {
                          "kind": "arg",
                          "name": "nh"
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "vector_map_server"
                        }
                      },
                      "format": "visualization_msgs/MarkerArray",
                      "source_location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:594:27, col:102>"
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              }
            ]
          }
        },
        {
          "name": "(anonymous namespace)::VectorMapServer::getCrossWalk",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:764:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:767:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:764:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:767:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              }
            ]
          }
        },
        {
          "name": "(anonymous namespace)::VectorMapServer::getZebraZone",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:748:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:751:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:748:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:751:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              }
            ]
          }
        },
        {
          "name": "(anonymous namespace)::VectorMapServer::isWayArea",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1020:5, col:22>",
                "kind": "assignment",
                "variable": "vector_map_server::PositionStateResponse_<std::allocator<void>>::state",
                "unqualified_variable": "state",
                "value": {
                  "kind": "bool-literal",
                  "literal": false
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1029:9, col:26>",
                "kind": "assignment",
                "variable": "vector_map_server::PositionStateResponse_<std::allocator<void>>::state",
                "unqualified_variable": "state",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "!=",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "__begin2",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "variable-reference",
                        "qualified_name": "__end2",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "vector_map_msgs::Area_<std::allocator<void>>::aid",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "area",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1020:5, col:22>",
                "kind": "assignment",
                "variable": "vector_map_server::PositionStateResponse_<std::allocator<void>>::state",
                "unqualified_variable": "state",
                "value": {
                  "kind": "bool-literal",
                  "literal": false
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1027:7, line:1031:7>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1029:9, col:26>",
                      "kind": "assignment",
                      "variable": "vector_map_server::PositionStateResponse_<std::allocator<void>>::state",
                      "unqualified_variable": "state",
                      "value": {
                        "kind": "bool-literal",
                        "literal": true
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "!=",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "__begin2",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            },
                            "rhs": {
                              "kind": "variable-reference",
                              "qualified_name": "__end2",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "vector_map_msgs::Area_<std::allocator<void>>::aid",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "variable-reference",
                                  "qualified_name": "area",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:1029:9, col:26>",
                      "kind": "assignment",
                      "variable": "vector_map_server::PositionStateResponse_<std::allocator<void>>::state",
                      "unqualified_variable": "state",
                      "value": {
                        "kind": "bool-literal",
                        "literal": true
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "!=",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "__begin2",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            },
                            "rhs": {
                              "kind": "variable-reference",
                              "qualified_name": "__end2",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "vector_map_msgs::Area_<std::allocator<void>>::aid",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "variable-reference",
                                  "qualified_name": "area",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              }
            ]
          }
        },
        {
          "name": "(anonymous namespace)::VectorMapServer::getWayArea",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:651:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:654:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:651:41, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::VectorMapServer::createTravelingRoute",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/data/packages/vector_map_server/nodes/vector_map_server/vector_map_server.cpp:654:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "unknown"
                  }
                }
              }
            ]
          }
        }
      ]
    }
  }
}