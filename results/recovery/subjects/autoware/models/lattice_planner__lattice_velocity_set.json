{
  "image": {
    "sha256": "95a3283df69676a0a64484edcf6b09f886abb9ab1dec292863aa0bffd2ce613b"
  },
  "node-name": "lattice_velocity_set",
  "package": {
    "name": "lattice_planner",
    "path": "/home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner"
  },
  "sources": [
    "/home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp",
    "/home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/libvelocity_set.cpp"
  ],
  "program": {
    "program": {
      "entrypoint": "main",
      "functions": [
        {
          "name": "(anonymous namespace)::localizerCallback",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:366:3, col:34>",
                "kind": "assignment",
                "variable": "geometry_msgs::PoseStamped_<std::allocator<void>>::header",
                "unqualified_variable": "header",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "geometry_msgs::PoseStamped_<std::allocator<void>>::header",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:367:3, col:32>",
                "kind": "assignment",
                "variable": "geometry_msgs::PoseStamped_<std::allocator<void>>::pose",
                "unqualified_variable": "pose",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "geometry_msgs::PoseStamped_<std::allocator<void>>::pose",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:366:3, col:34>",
                "kind": "assignment",
                "variable": "geometry_msgs::PoseStamped_<std::allocator<void>>::header",
                "unqualified_variable": "header",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "geometry_msgs::PoseStamped_<std::allocator<void>>::header",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:367:3, col:32>",
                "kind": "assignment",
                "variable": "geometry_msgs::PoseStamped_<std::allocator<void>>::pose",
                "unqualified_variable": "pose",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "geometry_msgs::PoseStamped_<std::allocator<void>>::pose",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        },
        {
          "name": "CrossWalk::pointCallback",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/libvelocity_set.cpp:61:3, col:12>",
                "kind": "assignment",
                "variable": "CrossWalk::point_",
                "unqualified_variable": "point_",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "msg",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/libvelocity_set.cpp:63:3, col:18>",
                "kind": "assignment",
                "variable": "CrossWalk::loaded_point",
                "unqualified_variable": "loaded_point",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/libvelocity_set.cpp:66:5, col:18>",
                "kind": "assignment",
                "variable": "CrossWalk::loaded_all",
                "unqualified_variable": "loaded_all",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "CrossWalk::loaded_crosswalk",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": false
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "CrossWalk::loaded_crosswalk",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "CrossWalk::loaded_area",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "CrossWalk::loaded_crosswalk",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "CrossWalk::loaded_area",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      },
                      "rhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "CrossWalk::loaded_line",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": false
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "CrossWalk::loaded_crosswalk",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "CrossWalk::loaded_area",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      },
                      "rhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "CrossWalk::loaded_line",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": false
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "CrossWalk::loaded_point",
                      "type": "bool",
                      "initial-value": {
                        "kind": "bool-literal",
                        "literal": false
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/libvelocity_set.cpp:61:3, col:12>",
                "kind": "assignment",
                "variable": "CrossWalk::point_",
                "unqualified_variable": "point_",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "msg",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/libvelocity_set.cpp:63:3, col:18>",
                "kind": "assignment",
                "variable": "CrossWalk::loaded_point",
                "unqualified_variable": "loaded_point",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/libvelocity_set.cpp:64:3, line:68:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/libvelocity_set.cpp:66:5, col:18>",
                      "kind": "assignment",
                      "variable": "CrossWalk::loaded_all",
                      "unqualified_variable": "loaded_all",
                      "value": {
                        "kind": "bool-literal",
                        "literal": true
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "CrossWalk::loaded_crosswalk",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_crosswalk",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_area",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_crosswalk",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_area",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "CrossWalk::loaded_line",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_crosswalk",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_area",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "CrossWalk::loaded_line",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "CrossWalk::loaded_point",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/libvelocity_set.cpp:66:5, col:18>",
                      "kind": "assignment",
                      "variable": "CrossWalk::loaded_all",
                      "unqualified_variable": "loaded_all",
                      "value": {
                        "kind": "bool-literal",
                        "literal": true
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "CrossWalk::loaded_crosswalk",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_crosswalk",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_area",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_crosswalk",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_area",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "CrossWalk::loaded_line",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_crosswalk",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_area",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "CrossWalk::loaded_line",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "CrossWalk::loaded_point",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              }
            ]
          }
        },
        {
          "name": "main",
          "parameters": [
            {
              "index": 0,
              "name": "argc",
              "type": "integer"
            }
          ],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:802:3, col:47>",
                "kind": "ros-init",
                "name": {
                  "kind": "string-literal",
                  "literal": "lattice_velocity_set"
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:808:3, col:82>",
                "kind": "assignment",
                "variable": "v0",
                "unqualified_variable": "v0",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "use_crosswalk_detection"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:810:35, col:86>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "localizer_pose"
                  }
                },
                "format": "geometry_msgs/PoseStamped",
                "callback-name": "(anonymous namespace)::localizerCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:810:35, col:86>",
                "kind": "call",
                "callee": "(anonymous namespace)::localizerCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:811:38, col:85>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "current_pose"
                  }
                },
                "format": "geometry_msgs/PoseStamped",
                "callback-name": "(anonymous namespace)::controlCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:811:38, col:85>",
                "kind": "call",
                "callee": "(anonymous namespace)::controlCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:812:31, col:76>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vscan_points"
                  }
                },
                "format": "sensor_msgs/PointCloud2",
                "callback-name": "(anonymous namespace)::vscanCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:812:31, col:76>",
                "kind": "call",
                "callee": "(anonymous namespace)::vscanCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:813:39, col:93>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "base_waypoints"
                  }
                },
                "format": "autoware_msgs/Lane",
                "callback-name": "(anonymous namespace)::baseWaypointCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:813:39, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::baseWaypointCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:814:34, col:77>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "obj_pose"
                  }
                },
                "format": "visualization_msgs/Marker",
                "callback-name": "(anonymous namespace)::objPoseCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:814:34, col:77>",
                "kind": "call",
                "callee": "(anonymous namespace)::objPoseCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:815:37, col:91>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "current_velocity"
                  }
                },
                "format": "geometry_msgs/TwistStamped",
                "callback-name": "(anonymous namespace)::currentVelCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:815:37, col:91>",
                "kind": "call",
                "callee": "(anonymous namespace)::currentVelCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:816:32, col:94>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "config/lattice_velocity_set"
                  }
                },
                "format": "autoware_config_msgs/ConfigLatticeVelocitySet",
                "callback-name": "(anonymous namespace)::configCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:816:32, col:94>",
                "kind": "call",
                "callee": "(anonymous namespace)::configCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:819:32, col:114>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_info/cross_walk"
                  }
                },
                "format": "vector_map_msgs/CrossWalkArray",
                "callback-name": "CrossWalk::crossWalkCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:819:32, col:114>",
                "kind": "call",
                "callee": "CrossWalk::crossWalkCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:820:30, col:101>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_info/area"
                  }
                },
                "format": "vector_map_msgs/AreaArray",
                "callback-name": "CrossWalk::areaCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:820:30, col:101>",
                "kind": "call",
                "callee": "CrossWalk::areaCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:821:30, col:101>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_info/line"
                  }
                },
                "format": "vector_map_msgs/LineArray",
                "callback-name": "CrossWalk::lineCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:821:30, col:101>",
                "kind": "call",
                "callee": "CrossWalk::lineCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:822:31, col:104>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_info/point"
                  }
                },
                "format": "vector_map_msgs/PointArray",
                "callback-name": "CrossWalk::pointCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:822:31, col:104>",
                "kind": "call",
                "callee": "CrossWalk::pointCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:825:3, col:83>",
                "kind": "assignment",
                "variable": "(anonymous namespace)::g_range_pub",
                "unqualified_variable": "g_range_pub",
                "value": {
                  "kind": "string-literal",
                  "literal": "detection_range"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:825:17, col:83>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "detection_range"
                  }
                },
                "format": "visualization_msgs/MarkerArray",
                "source_location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:825:17, col:83>"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:826:3, col:66>",
                "kind": "assignment",
                "variable": "(anonymous namespace)::g_sound_pub",
                "unqualified_variable": "g_sound_pub",
                "value": {
                  "kind": "string-literal",
                  "literal": "sound_player"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:826:17, col:66>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "sound_player"
                  }
                },
                "format": "std_msgs/String",
                "source_location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:826:17, col:66>"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:827:3, col:96>",
                "kind": "assignment",
                "variable": "(anonymous namespace)::g_temporal_waypoints_pub",
                "unqualified_variable": "g_temporal_waypoints_pub",
                "value": {
                  "kind": "string-literal",
                  "literal": "temporal_waypoints"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:827:30, col:96>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "temporal_waypoints"
                  }
                },
                "format": "autoware_msgs/Lane",
                "source_location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:827:30, col:96>"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:829:3, col:80>",
                "kind": "assignment",
                "variable": "closest_waypoint_pub",
                "unqualified_variable": "closest_waypoint_pub",
                "value": {
                  "kind": "string-literal",
                  "literal": "closest_waypoint"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:829:26, col:80>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "closest_waypoint"
                  }
                },
                "format": "std_msgs/Int32",
                "source_location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:829:26, col:80>"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:830:3, col:74>",
                "kind": "assignment",
                "variable": "(anonymous namespace)::g_obstacle_pub",
                "unqualified_variable": "g_obstacle_pub",
                "value": {
                  "kind": "string-literal",
                  "literal": "obstacle"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:830:20, col:74>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "obstacle"
                  }
                },
                "format": "visualization_msgs/Marker",
                "source_location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:830:20, col:74>"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:842:7, col:23>",
                "kind": "ratesleep",
                "rate": {
                  "kind": "float-literal",
                  "literal": 10.0
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:846:5, col:101>",
                "kind": "assignment",
                "variable": "(anonymous namespace)::g_closest_waypoint",
                "unqualified_variable": "g_closest_waypoint",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "(anonymous namespace)::g_pose_flag",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "(anonymous namespace)::g_pose_flag",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "(anonymous namespace)::g_path_flag",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:849:5, col:29>",
                "kind": "assignment",
                "variable": "std_msgs::Int32_<std::allocator<void>>::data",
                "unqualified_variable": "data",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "(anonymous namespace)::g_closest_waypoint",
                  "type": "integer",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": -1
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "(anonymous namespace)::g_pose_flag",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "(anonymous namespace)::g_pose_flag",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "(anonymous namespace)::g_path_flag",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:850:5, col:50>",
                "kind": "publish",
                "publisher": "closest_waypoint_pub",
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "(anonymous namespace)::g_pose_flag",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "(anonymous namespace)::g_pose_flag",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "(anonymous namespace)::g_path_flag",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:855:33, col:51>",
                "kind": "call",
                "callee": "(anonymous namespace)::obstacleDetection",
                "arguments": {},
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "(anonymous namespace)::g_pose_flag",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "(anonymous namespace)::g_pose_flag",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "(anonymous namespace)::g_path_flag",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:857:5, col:36>",
                "kind": "call",
                "callee": "(anonymous namespace)::changeWaypoint",
                "arguments": {},
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "(anonymous namespace)::g_pose_flag",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "(anonymous namespace)::g_pose_flag",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "(anonymous namespace)::g_path_flag",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:861:5, col:21>",
                "kind": "ratesleep",
                "rate": {
                  "kind": "float-literal",
                  "literal": 10.0
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:802:3, col:47>",
                "kind": "ros-init",
                "name": {
                  "kind": "string-literal",
                  "literal": "lattice_velocity_set"
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:808:3, col:82>",
                "kind": "assignment",
                "variable": "v1",
                "unqualified_variable": "v1",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "use_crosswalk_detection"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:810:35, col:86>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "localizer_pose"
                  }
                },
                "format": "geometry_msgs/PoseStamped",
                "callback-name": "(anonymous namespace)::localizerCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:810:35, col:86>",
                "kind": "call",
                "callee": "(anonymous namespace)::localizerCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:811:38, col:85>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "current_pose"
                  }
                },
                "format": "geometry_msgs/PoseStamped",
                "callback-name": "(anonymous namespace)::controlCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:811:38, col:85>",
                "kind": "call",
                "callee": "(anonymous namespace)::controlCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:812:31, col:76>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vscan_points"
                  }
                },
                "format": "sensor_msgs/PointCloud2",
                "callback-name": "(anonymous namespace)::vscanCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:812:31, col:76>",
                "kind": "call",
                "callee": "(anonymous namespace)::vscanCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:813:39, col:93>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "base_waypoints"
                  }
                },
                "format": "autoware_msgs/Lane",
                "callback-name": "(anonymous namespace)::baseWaypointCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:813:39, col:93>",
                "kind": "call",
                "callee": "(anonymous namespace)::baseWaypointCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:814:34, col:77>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "obj_pose"
                  }
                },
                "format": "visualization_msgs/Marker",
                "callback-name": "(anonymous namespace)::objPoseCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:814:34, col:77>",
                "kind": "call",
                "callee": "(anonymous namespace)::objPoseCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:815:37, col:91>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "current_velocity"
                  }
                },
                "format": "geometry_msgs/TwistStamped",
                "callback-name": "(anonymous namespace)::currentVelCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:815:37, col:91>",
                "kind": "call",
                "callee": "(anonymous namespace)::currentVelCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:816:32, col:94>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "config/lattice_velocity_set"
                  }
                },
                "format": "autoware_config_msgs/ConfigLatticeVelocitySet",
                "callback-name": "(anonymous namespace)::configCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:816:32, col:94>",
                "kind": "call",
                "callee": "(anonymous namespace)::configCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:819:32, col:114>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_info/cross_walk"
                  }
                },
                "format": "vector_map_msgs/CrossWalkArray",
                "callback-name": "CrossWalk::crossWalkCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:819:32, col:114>",
                "kind": "call",
                "callee": "CrossWalk::crossWalkCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:820:30, col:101>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_info/area"
                  }
                },
                "format": "vector_map_msgs/AreaArray",
                "callback-name": "CrossWalk::areaCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:820:30, col:101>",
                "kind": "call",
                "callee": "CrossWalk::areaCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:821:30, col:101>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_info/line"
                  }
                },
                "format": "vector_map_msgs/LineArray",
                "callback-name": "CrossWalk::lineCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:821:30, col:101>",
                "kind": "call",
                "callee": "CrossWalk::lineCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:822:31, col:104>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "vector_map_info/point"
                  }
                },
                "format": "vector_map_msgs/PointArray",
                "callback-name": "CrossWalk::pointCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:822:31, col:104>",
                "kind": "call",
                "callee": "CrossWalk::pointCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:825:3, col:83>",
                "kind": "assignment",
                "variable": "(anonymous namespace)::g_range_pub",
                "unqualified_variable": "g_range_pub",
                "value": {
                  "kind": "string-literal",
                  "literal": "detection_range"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:825:17, col:83>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "detection_range"
                  }
                },
                "format": "visualization_msgs/MarkerArray",
                "source_location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:825:17, col:83>"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:826:3, col:66>",
                "kind": "assignment",
                "variable": "(anonymous namespace)::g_sound_pub",
                "unqualified_variable": "g_sound_pub",
                "value": {
                  "kind": "string-literal",
                  "literal": "sound_player"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:826:17, col:66>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "sound_player"
                  }
                },
                "format": "std_msgs/String",
                "source_location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:826:17, col:66>"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:827:3, col:96>",
                "kind": "assignment",
                "variable": "(anonymous namespace)::g_temporal_waypoints_pub",
                "unqualified_variable": "g_temporal_waypoints_pub",
                "value": {
                  "kind": "string-literal",
                  "literal": "temporal_waypoints"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:827:30, col:96>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "temporal_waypoints"
                  }
                },
                "format": "autoware_msgs/Lane",
                "source_location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:827:30, col:96>"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:829:3, col:80>",
                "kind": "assignment",
                "variable": "closest_waypoint_pub",
                "unqualified_variable": "closest_waypoint_pub",
                "value": {
                  "kind": "string-literal",
                  "literal": "closest_waypoint"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:829:26, col:80>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "closest_waypoint"
                  }
                },
                "format": "std_msgs/Int32",
                "source_location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:829:26, col:80>"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:830:3, col:74>",
                "kind": "assignment",
                "variable": "(anonymous namespace)::g_obstacle_pub",
                "unqualified_variable": "g_obstacle_pub",
                "value": {
                  "kind": "string-literal",
                  "literal": "obstacle"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:830:20, col:74>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "obstacle"
                  }
                },
                "format": "visualization_msgs/Marker",
                "source_location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:830:20, col:74>"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:833:3, line:862:3>",
                "kind": "while",
                "body": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:840:5, line:844:5>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:842:7, col:23>",
                            "kind": "ratesleep",
                            "rate": {
                              "kind": "float-literal",
                              "literal": 10.0
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:842:7, col:23>",
                            "kind": "ratesleep",
                            "rate": {
                              "kind": "float-literal",
                              "literal": 10.0
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": []
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:846:5, col:101>",
                      "kind": "assignment",
                      "variable": "(anonymous namespace)::g_closest_waypoint",
                      "unqualified_variable": "g_closest_waypoint",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "(anonymous namespace)::g_pose_flag",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "(anonymous namespace)::g_pose_flag",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "(anonymous namespace)::g_path_flag",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:849:5, col:29>",
                      "kind": "assignment",
                      "variable": "std_msgs::Int32_<std::allocator<void>>::data",
                      "unqualified_variable": "data",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "(anonymous namespace)::g_closest_waypoint",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": -1
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "(anonymous namespace)::g_pose_flag",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "(anonymous namespace)::g_pose_flag",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "(anonymous namespace)::g_path_flag",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:850:5, col:50>",
                      "kind": "publish",
                      "publisher": "closest_waypoint_pub",
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "(anonymous namespace)::g_pose_flag",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "(anonymous namespace)::g_pose_flag",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "(anonymous namespace)::g_path_flag",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:855:33, col:51>",
                      "kind": "call",
                      "callee": "(anonymous namespace)::obstacleDetection",
                      "arguments": {},
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "(anonymous namespace)::g_pose_flag",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "(anonymous namespace)::g_pose_flag",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "(anonymous namespace)::g_path_flag",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:857:5, col:36>",
                      "kind": "call",
                      "callee": "(anonymous namespace)::changeWaypoint",
                      "arguments": {},
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "(anonymous namespace)::g_pose_flag",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "(anonymous namespace)::g_pose_flag",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "(anonymous namespace)::g_path_flag",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:861:5, col:21>",
                      "kind": "ratesleep",
                      "rate": {
                        "kind": "float-literal",
                        "literal": 10.0
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:846:5, col:101>",
                      "kind": "assignment",
                      "variable": "(anonymous namespace)::g_closest_waypoint",
                      "unqualified_variable": "g_closest_waypoint",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "(anonymous namespace)::g_pose_flag",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "(anonymous namespace)::g_pose_flag",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "(anonymous namespace)::g_path_flag",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:849:5, col:29>",
                      "kind": "assignment",
                      "variable": "std_msgs::Int32_<std::allocator<void>>::data",
                      "unqualified_variable": "data",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "(anonymous namespace)::g_closest_waypoint",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": -1
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "(anonymous namespace)::g_pose_flag",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "(anonymous namespace)::g_pose_flag",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "(anonymous namespace)::g_path_flag",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:850:5, col:50>",
                      "kind": "publish",
                      "publisher": "closest_waypoint_pub",
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "(anonymous namespace)::g_pose_flag",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "(anonymous namespace)::g_pose_flag",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "(anonymous namespace)::g_path_flag",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:855:33, col:51>",
                      "kind": "call",
                      "callee": "(anonymous namespace)::obstacleDetection",
                      "arguments": {},
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "(anonymous namespace)::g_pose_flag",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "(anonymous namespace)::g_pose_flag",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "(anonymous namespace)::g_path_flag",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:857:5, col:36>",
                      "kind": "call",
                      "callee": "(anonymous namespace)::changeWaypoint",
                      "arguments": {},
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "(anonymous namespace)::g_pose_flag",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "(anonymous namespace)::g_pose_flag",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "(anonymous namespace)::g_path_flag",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:861:5, col:21>",
                      "kind": "ratesleep",
                      "rate": {
                        "kind": "float-literal",
                        "literal": 10.0
                      }
                    }
                  ]
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              }
            ]
          }
        },
        {
          "name": "(anonymous namespace)::currentVelCallback",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:316:3, col:37>",
                "kind": "assignment",
                "variable": "(anonymous namespace)::g_current_vel",
                "unqualified_variable": "g_current_vel",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "qualified_name": "geometry_msgs::Twist_<std::allocator<void>>::linear",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "member-var-ref",
                      "qualified_name": "geometry_msgs::TwistStamped_<std::allocator<void>>::twist",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "unknown"
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:316:3, col:37>",
                "kind": "assignment",
                "variable": "(anonymous namespace)::g_current_vel",
                "unqualified_variable": "g_current_vel",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "qualified_name": "geometry_msgs::Twist_<std::allocator<void>>::linear",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "member-var-ref",
                      "qualified_name": "geometry_msgs::TwistStamped_<std::allocator<void>>::twist",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "unknown"
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        },
        {
          "name": "(anonymous namespace)::changeWaypoint",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:773:5, col:74>",
                "kind": "publish",
                "publisher": "g_temporal_waypoints_pub",
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "==",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "detection_result",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "enum-ref",
                    "qualified_name": "STOP",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "int-literal",
                      "literal": 1
                    },
                    "value": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:780:5, col:74>",
                "kind": "publish",
                "publisher": "g_temporal_waypoints_pub",
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "detection_result",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "enum-ref",
                        "qualified_name": "STOP",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 1
                        },
                        "value": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "detection_result",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "enum-ref",
                      "qualified_name": "DECELERATE",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 2
                      },
                      "value": {
                        "kind": "int-literal",
                        "literal": 2
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:788:5, col:74>",
                "kind": "publish",
                "publisher": "g_temporal_waypoints_pub",
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "detection_result",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "enum-ref",
                        "qualified_name": "STOP",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 1
                        },
                        "value": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "detection_result",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "enum-ref",
                        "qualified_name": "DECELERATE",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 2
                        },
                        "value": {
                          "kind": "int-literal",
                          "literal": 2
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:765:3, line:789:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:773:5, col:74>",
                      "kind": "publish",
                      "publisher": "g_temporal_waypoints_pub",
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "detection_result",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "enum-ref",
                          "qualified_name": "STOP",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 1
                          },
                          "value": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:773:5, col:74>",
                      "kind": "publish",
                      "publisher": "g_temporal_waypoints_pub",
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "detection_result",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "enum-ref",
                          "qualified_name": "STOP",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 1
                          },
                          "value": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:775:8, line:789:3>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:780:5, col:74>",
                            "kind": "publish",
                            "publisher": "g_temporal_waypoints_pub",
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "detection_result",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "enum-ref",
                                    "qualified_name": "STOP",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    },
                                    "value": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "detection_result",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "enum-ref",
                                  "qualified_name": "DECELERATE",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 2
                                  },
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": 2
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:780:5, col:74>",
                            "kind": "publish",
                            "publisher": "g_temporal_waypoints_pub",
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "detection_result",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "enum-ref",
                                    "qualified_name": "STOP",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    },
                                    "value": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "detection_result",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "enum-ref",
                                  "qualified_name": "DECELERATE",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 2
                                  },
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": 2
                                  }
                                }
                              }
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:788:5, col:74>",
                            "kind": "publish",
                            "publisher": "g_temporal_waypoints_pub",
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "detection_result",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "enum-ref",
                                    "qualified_name": "STOP",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    },
                                    "value": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "detection_result",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "enum-ref",
                                    "qualified_name": "DECELERATE",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 2
                                    },
                                    "value": {
                                      "kind": "int-literal",
                                      "literal": 2
                                    }
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:788:5, col:74>",
                            "kind": "publish",
                            "publisher": "g_temporal_waypoints_pub",
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "detection_result",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "enum-ref",
                                    "qualified_name": "STOP",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    },
                                    "value": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "detection_result",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "enum-ref",
                                    "qualified_name": "DECELERATE",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 2
                                    },
                                    "value": {
                                      "kind": "int-literal",
                                      "literal": 2
                                    }
                                  }
                                }
                              }
                            }
                          }
                        ]
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  ]
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              }
            ]
          }
        },
        {
          "name": "CrossWalk::crossWalkCallback",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/libvelocity_set.cpp:25:3, col:16>",
                "kind": "assignment",
                "variable": "CrossWalk::crosswalk_",
                "unqualified_variable": "crosswalk_",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "msg",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/libvelocity_set.cpp:27:3, col:22>",
                "kind": "assignment",
                "variable": "CrossWalk::loaded_crosswalk",
                "unqualified_variable": "loaded_crosswalk",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/libvelocity_set.cpp:30:5, col:18>",
                "kind": "assignment",
                "variable": "CrossWalk::loaded_all",
                "unqualified_variable": "loaded_all",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "CrossWalk::loaded_crosswalk",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": false
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "CrossWalk::loaded_crosswalk",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "CrossWalk::loaded_area",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "CrossWalk::loaded_crosswalk",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "CrossWalk::loaded_area",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      },
                      "rhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "CrossWalk::loaded_line",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": false
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "CrossWalk::loaded_crosswalk",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "CrossWalk::loaded_area",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      },
                      "rhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "CrossWalk::loaded_line",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": false
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "CrossWalk::loaded_point",
                      "type": "bool",
                      "initial-value": {
                        "kind": "bool-literal",
                        "literal": false
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/libvelocity_set.cpp:25:3, col:16>",
                "kind": "assignment",
                "variable": "CrossWalk::crosswalk_",
                "unqualified_variable": "crosswalk_",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "msg",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/libvelocity_set.cpp:27:3, col:22>",
                "kind": "assignment",
                "variable": "CrossWalk::loaded_crosswalk",
                "unqualified_variable": "loaded_crosswalk",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/libvelocity_set.cpp:28:3, line:32:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/libvelocity_set.cpp:30:5, col:18>",
                      "kind": "assignment",
                      "variable": "CrossWalk::loaded_all",
                      "unqualified_variable": "loaded_all",
                      "value": {
                        "kind": "bool-literal",
                        "literal": true
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "CrossWalk::loaded_crosswalk",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_crosswalk",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_area",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_crosswalk",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_area",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "CrossWalk::loaded_line",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_crosswalk",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_area",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "CrossWalk::loaded_line",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "CrossWalk::loaded_point",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/libvelocity_set.cpp:30:5, col:18>",
                      "kind": "assignment",
                      "variable": "CrossWalk::loaded_all",
                      "unqualified_variable": "loaded_all",
                      "value": {
                        "kind": "bool-literal",
                        "literal": true
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "CrossWalk::loaded_crosswalk",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_crosswalk",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_area",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_crosswalk",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_area",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "CrossWalk::loaded_line",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_crosswalk",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_area",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "CrossWalk::loaded_line",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "CrossWalk::loaded_point",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              }
            ]
          }
        },
        {
          "name": "(anonymous namespace)::baseWaypointCallback",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:325:5, col:19>",
                "kind": "assignment",
                "variable": "(anonymous namespace)::g_path_flag",
                "unqualified_variable": "g_path_flag",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "==",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "(anonymous namespace)::g_path_flag",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": false
                    }
                  },
                  "rhs": {
                    "kind": "bool-literal",
                    "literal": false
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:323:3, line:326:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:325:5, col:19>",
                      "kind": "assignment",
                      "variable": "(anonymous namespace)::g_path_flag",
                      "unqualified_variable": "g_path_flag",
                      "value": {
                        "kind": "bool-literal",
                        "literal": true
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "(anonymous namespace)::g_path_flag",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:325:5, col:19>",
                      "kind": "assignment",
                      "variable": "(anonymous namespace)::g_path_flag",
                      "unqualified_variable": "g_path_flag",
                      "value": {
                        "kind": "bool-literal",
                        "literal": true
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "(anonymous namespace)::g_path_flag",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              }
            ]
          }
        },
        {
          "name": "(anonymous namespace)::configCallback",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:303:3, col:31>",
                "kind": "assignment",
                "variable": "(anonymous namespace)::g_others_distance",
                "unqualified_variable": "g_others_distance",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigLatticeVelocitySet_<std::allocator<void>>::others_distance",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:304:3, col:31>",
                "kind": "assignment",
                "variable": "(anonymous namespace)::g_detection_range",
                "unqualified_variable": "g_detection_range",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigLatticeVelocitySet_<std::allocator<void>>::detection_range",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:305:3, col:32>",
                "kind": "assignment",
                "variable": "(anonymous namespace)::g_threshold_points",
                "unqualified_variable": "g_threshold_points",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigLatticeVelocitySet_<std::allocator<void>>::threshold_points",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:306:3, col:36>",
                "kind": "assignment",
                "variable": "(anonymous namespace)::g_detection_height_top",
                "unqualified_variable": "g_detection_height_top",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigLatticeVelocitySet_<std::allocator<void>>::detection_height_top",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:307:3, col:39>",
                "kind": "assignment",
                "variable": "(anonymous namespace)::g_detection_height_bottom",
                "unqualified_variable": "g_detection_height_bottom",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigLatticeVelocitySet_<std::allocator<void>>::detection_height_bottom",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:308:3, col:21>",
                "kind": "assignment",
                "variable": "(anonymous namespace)::g_decel",
                "unqualified_variable": "g_decel",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigLatticeVelocitySet_<std::allocator<void>>::deceleration",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:309:3, col:67>",
                "kind": "assignment",
                "variable": "(anonymous namespace)::g_velocity_change_limit",
                "unqualified_variable": "g_velocity_change_limit",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:310:3, col:34>",
                "kind": "assignment",
                "variable": "(anonymous namespace)::g_deceleration_range",
                "unqualified_variable": "g_deceleration_range",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigLatticeVelocitySet_<std::allocator<void>>::deceleration_range",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:311:3, col:39>",
                "kind": "assignment",
                "variable": "(anonymous namespace)::g_temporal_waypoints_size",
                "unqualified_variable": "g_temporal_waypoints_size",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigLatticeVelocitySet_<std::allocator<void>>::temporal_waypoints_size",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:303:3, col:31>",
                "kind": "assignment",
                "variable": "(anonymous namespace)::g_others_distance",
                "unqualified_variable": "g_others_distance",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigLatticeVelocitySet_<std::allocator<void>>::others_distance",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:304:3, col:31>",
                "kind": "assignment",
                "variable": "(anonymous namespace)::g_detection_range",
                "unqualified_variable": "g_detection_range",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigLatticeVelocitySet_<std::allocator<void>>::detection_range",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:305:3, col:32>",
                "kind": "assignment",
                "variable": "(anonymous namespace)::g_threshold_points",
                "unqualified_variable": "g_threshold_points",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigLatticeVelocitySet_<std::allocator<void>>::threshold_points",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:306:3, col:36>",
                "kind": "assignment",
                "variable": "(anonymous namespace)::g_detection_height_top",
                "unqualified_variable": "g_detection_height_top",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigLatticeVelocitySet_<std::allocator<void>>::detection_height_top",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:307:3, col:39>",
                "kind": "assignment",
                "variable": "(anonymous namespace)::g_detection_height_bottom",
                "unqualified_variable": "g_detection_height_bottom",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigLatticeVelocitySet_<std::allocator<void>>::detection_height_bottom",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:308:3, col:21>",
                "kind": "assignment",
                "variable": "(anonymous namespace)::g_decel",
                "unqualified_variable": "g_decel",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigLatticeVelocitySet_<std::allocator<void>>::deceleration",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:309:3, col:67>",
                "kind": "assignment",
                "variable": "(anonymous namespace)::g_velocity_change_limit",
                "unqualified_variable": "g_velocity_change_limit",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:310:3, col:34>",
                "kind": "assignment",
                "variable": "(anonymous namespace)::g_deceleration_range",
                "unqualified_variable": "g_deceleration_range",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigLatticeVelocitySet_<std::allocator<void>>::deceleration_range",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:311:3, col:39>",
                "kind": "assignment",
                "variable": "(anonymous namespace)::g_temporal_waypoints_size",
                "unqualified_variable": "g_temporal_waypoints_size",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigLatticeVelocitySet_<std::allocator<void>>::temporal_waypoints_size",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        },
        {
          "name": "(anonymous namespace)::obstacleDetection",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:713:3, col:89>",
                "kind": "call",
                "callee": "(anonymous namespace)::displayDetectionRange",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:719:7, col:35>",
                "kind": "call",
                "callee": "(anonymous namespace)::displayObstacle",
                "arguments": {},
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "prev_detection",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": "-1"
                      }
                    },
                    "rhs": {
                      "kind": "enum-ref",
                      "qualified_name": "KEEP",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": -1
                      },
                      "value": {
                        "kind": "int-literal",
                        "literal": -1
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "!=",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "vscan_result",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "enum-ref",
                      "qualified_name": "KEEP",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": -1
                      },
                      "value": {
                        "kind": "int-literal",
                        "literal": -1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:720:7, col:24>",
                "kind": "assignment",
                "variable": "prev_detection",
                "unqualified_variable": "prev_detection",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "vscan_result",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "prev_detection",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": "-1"
                      }
                    },
                    "rhs": {
                      "kind": "enum-ref",
                      "qualified_name": "KEEP",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": -1
                      },
                      "value": {
                        "kind": "int-literal",
                        "literal": -1
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "!=",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "vscan_result",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "enum-ref",
                      "qualified_name": "KEEP",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": -1
                      },
                      "value": {
                        "kind": "int-literal",
                        "literal": -1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:722:7, col:21>",
                "kind": "assignment",
                "variable": "false_count",
                "unqualified_variable": "false_count",
                "value": {
                  "kind": "int-literal",
                  "literal": 0
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "prev_detection",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": "-1"
                      }
                    },
                    "rhs": {
                      "kind": "enum-ref",
                      "qualified_name": "KEEP",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": -1
                      },
                      "value": {
                        "kind": "int-literal",
                        "literal": -1
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "!=",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "vscan_result",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "enum-ref",
                      "qualified_name": "KEEP",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": -1
                      },
                      "value": {
                        "kind": "int-literal",
                        "literal": -1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:727:7, col:24>",
                "kind": "assignment",
                "variable": "prev_detection",
                "unqualified_variable": "prev_detection",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "KEEP",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": -1
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": -1
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "prev_detection",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": "-1"
                      }
                    },
                    "rhs": {
                      "kind": "enum-ref",
                      "qualified_name": "KEEP",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": -1
                      },
                      "value": {
                        "kind": "int-literal",
                        "literal": -1
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "!=",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "vscan_result",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "enum-ref",
                        "qualified_name": "KEEP",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": -1
                        },
                        "value": {
                          "kind": "int-literal",
                          "literal": -1
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:735:7, col:35>",
                "kind": "call",
                "callee": "(anonymous namespace)::displayObstacle",
                "arguments": {},
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "prev_detection",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": "-1"
                        }
                      },
                      "rhs": {
                        "kind": "enum-ref",
                        "qualified_name": "KEEP",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": -1
                        },
                        "value": {
                          "kind": "int-literal",
                          "literal": -1
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "!=",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "vscan_result",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "enum-ref",
                      "qualified_name": "KEEP",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": -1
                      },
                      "value": {
                        "kind": "int-literal",
                        "literal": -1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:736:7, col:24>",
                "kind": "assignment",
                "variable": "prev_detection",
                "unqualified_variable": "prev_detection",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "vscan_result",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "prev_detection",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": "-1"
                        }
                      },
                      "rhs": {
                        "kind": "enum-ref",
                        "qualified_name": "KEEP",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": -1
                        },
                        "value": {
                          "kind": "int-literal",
                          "literal": -1
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "!=",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "vscan_result",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "enum-ref",
                      "qualified_name": "KEEP",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": -1
                      },
                      "value": {
                        "kind": "int-literal",
                        "literal": -1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:737:7, col:21>",
                "kind": "assignment",
                "variable": "false_count",
                "unqualified_variable": "false_count",
                "value": {
                  "kind": "int-literal",
                  "literal": 0
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "prev_detection",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": "-1"
                        }
                      },
                      "rhs": {
                        "kind": "enum-ref",
                        "qualified_name": "KEEP",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": -1
                        },
                        "value": {
                          "kind": "int-literal",
                          "literal": -1
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "!=",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "vscan_result",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "enum-ref",
                      "qualified_name": "KEEP",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": -1
                      },
                      "value": {
                        "kind": "int-literal",
                        "literal": -1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:747:9, col:32>",
                "kind": "assignment",
                "variable": "(anonymous namespace)::g_obstacle_waypoint",
                "unqualified_variable": "g_obstacle_waypoint",
                "value": {
                  "kind": "int-literal",
                  "literal": -1
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "prev_detection",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": "-1"
                          }
                        },
                        "rhs": {
                          "kind": "enum-ref",
                          "qualified_name": "KEEP",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": -1
                          },
                          "value": {
                            "kind": "int-literal",
                            "literal": -1
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "!=",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "vscan_result",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "enum-ref",
                          "qualified_name": "KEEP",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": -1
                          },
                          "value": {
                            "kind": "int-literal",
                            "literal": -1
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": ">=",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "false_count",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "/",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "(anonymous namespace)::LOOP_RATE",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 10
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 2
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:748:9, col:23>",
                "kind": "assignment",
                "variable": "false_count",
                "unqualified_variable": "false_count",
                "value": {
                  "kind": "int-literal",
                  "literal": 0
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "prev_detection",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": "-1"
                          }
                        },
                        "rhs": {
                          "kind": "enum-ref",
                          "qualified_name": "KEEP",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": -1
                          },
                          "value": {
                            "kind": "int-literal",
                            "literal": -1
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "!=",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "vscan_result",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "enum-ref",
                          "qualified_name": "KEEP",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": -1
                          },
                          "value": {
                            "kind": "int-literal",
                            "literal": -1
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": ">=",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "false_count",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "/",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "(anonymous namespace)::LOOP_RATE",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 10
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 2
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:749:9, col:26>",
                "kind": "assignment",
                "variable": "prev_detection",
                "unqualified_variable": "prev_detection",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "KEEP",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": -1
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": -1
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "prev_detection",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": "-1"
                          }
                        },
                        "rhs": {
                          "kind": "enum-ref",
                          "qualified_name": "KEEP",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": -1
                          },
                          "value": {
                            "kind": "int-literal",
                            "literal": -1
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "!=",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "vscan_result",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "enum-ref",
                          "qualified_name": "KEEP",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": -1
                          },
                          "value": {
                            "kind": "int-literal",
                            "literal": -1
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": ">=",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "false_count",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "/",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "(anonymous namespace)::LOOP_RATE",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 10
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 2
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:754:9, col:31>",
                "kind": "call",
                "callee": "(anonymous namespace)::displayObstacle",
                "arguments": {},
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "prev_detection",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": "-1"
                          }
                        },
                        "rhs": {
                          "kind": "enum-ref",
                          "qualified_name": "KEEP",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": -1
                          },
                          "value": {
                            "kind": "int-literal",
                            "literal": -1
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "!=",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "vscan_result",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "enum-ref",
                          "qualified_name": "KEEP",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": -1
                          },
                          "value": {
                            "kind": "int-literal",
                            "literal": -1
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": ">=",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "false_count",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "/",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "(anonymous namespace)::LOOP_RATE",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 10
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 2
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:713:3, col:89>",
                "kind": "call",
                "callee": "(anonymous namespace)::displayDetectionRange",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:715:3, line:758:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:717:5, line:729:5>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:719:7, col:35>",
                            "kind": "call",
                            "callee": "(anonymous namespace)::displayObstacle",
                            "arguments": {},
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "prev_detection",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": "-1"
                                  }
                                },
                                "rhs": {
                                  "kind": "enum-ref",
                                  "qualified_name": "KEEP",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "!=",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "vscan_result",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "enum-ref",
                                  "qualified_name": "KEEP",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:720:7, col:24>",
                            "kind": "assignment",
                            "variable": "prev_detection",
                            "unqualified_variable": "prev_detection",
                            "value": {
                              "kind": "variable-reference",
                              "qualified_name": "vscan_result",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "prev_detection",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": "-1"
                                  }
                                },
                                "rhs": {
                                  "kind": "enum-ref",
                                  "qualified_name": "KEEP",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "!=",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "vscan_result",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "enum-ref",
                                  "qualified_name": "KEEP",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:722:7, col:21>",
                            "kind": "assignment",
                            "variable": "false_count",
                            "unqualified_variable": "false_count",
                            "value": {
                              "kind": "int-literal",
                              "literal": 0
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "prev_detection",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": "-1"
                                  }
                                },
                                "rhs": {
                                  "kind": "enum-ref",
                                  "qualified_name": "KEEP",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "!=",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "vscan_result",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "enum-ref",
                                  "qualified_name": "KEEP",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:719:7, col:35>",
                            "kind": "call",
                            "callee": "(anonymous namespace)::displayObstacle",
                            "arguments": {},
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "prev_detection",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": "-1"
                                  }
                                },
                                "rhs": {
                                  "kind": "enum-ref",
                                  "qualified_name": "KEEP",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "!=",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "vscan_result",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "enum-ref",
                                  "qualified_name": "KEEP",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:720:7, col:24>",
                            "kind": "assignment",
                            "variable": "prev_detection",
                            "unqualified_variable": "prev_detection",
                            "value": {
                              "kind": "variable-reference",
                              "qualified_name": "vscan_result",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "prev_detection",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": "-1"
                                  }
                                },
                                "rhs": {
                                  "kind": "enum-ref",
                                  "qualified_name": "KEEP",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "!=",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "vscan_result",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "enum-ref",
                                  "qualified_name": "KEEP",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:722:7, col:21>",
                            "kind": "assignment",
                            "variable": "false_count",
                            "unqualified_variable": "false_count",
                            "value": {
                              "kind": "int-literal",
                              "literal": 0
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "prev_detection",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": "-1"
                                  }
                                },
                                "rhs": {
                                  "kind": "enum-ref",
                                  "qualified_name": "KEEP",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "!=",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "vscan_result",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "enum-ref",
                                  "qualified_name": "KEEP",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  }
                                }
                              }
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:727:7, col:24>",
                            "kind": "assignment",
                            "variable": "prev_detection",
                            "unqualified_variable": "prev_detection",
                            "value": {
                              "kind": "enum-ref",
                              "qualified_name": "KEEP",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": -1
                              },
                              "value": {
                                "kind": "int-literal",
                                "literal": -1
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "prev_detection",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": "-1"
                                  }
                                },
                                "rhs": {
                                  "kind": "enum-ref",
                                  "qualified_name": "KEEP",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "!=",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "vscan_result",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "enum-ref",
                                    "qualified_name": "KEEP",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": -1
                                    },
                                    "value": {
                                      "kind": "int-literal",
                                      "literal": -1
                                    }
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:727:7, col:24>",
                            "kind": "assignment",
                            "variable": "prev_detection",
                            "unqualified_variable": "prev_detection",
                            "value": {
                              "kind": "enum-ref",
                              "qualified_name": "KEEP",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": -1
                              },
                              "value": {
                                "kind": "int-literal",
                                "literal": -1
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "prev_detection",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": "-1"
                                  }
                                },
                                "rhs": {
                                  "kind": "enum-ref",
                                  "qualified_name": "KEEP",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "!=",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "vscan_result",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "enum-ref",
                                    "qualified_name": "KEEP",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": -1
                                    },
                                    "value": {
                                      "kind": "int-literal",
                                      "literal": -1
                                    }
                                  }
                                }
                              }
                            }
                          }
                        ]
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:733:5, line:757:5>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:735:7, col:35>",
                            "kind": "call",
                            "callee": "(anonymous namespace)::displayObstacle",
                            "arguments": {},
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "prev_detection",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": "-1"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "enum-ref",
                                    "qualified_name": "KEEP",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": -1
                                    },
                                    "value": {
                                      "kind": "int-literal",
                                      "literal": -1
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "!=",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "vscan_result",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "enum-ref",
                                  "qualified_name": "KEEP",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:736:7, col:24>",
                            "kind": "assignment",
                            "variable": "prev_detection",
                            "unqualified_variable": "prev_detection",
                            "value": {
                              "kind": "variable-reference",
                              "qualified_name": "vscan_result",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "prev_detection",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": "-1"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "enum-ref",
                                    "qualified_name": "KEEP",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": -1
                                    },
                                    "value": {
                                      "kind": "int-literal",
                                      "literal": -1
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "!=",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "vscan_result",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "enum-ref",
                                  "qualified_name": "KEEP",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:737:7, col:21>",
                            "kind": "assignment",
                            "variable": "false_count",
                            "unqualified_variable": "false_count",
                            "value": {
                              "kind": "int-literal",
                              "literal": 0
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "prev_detection",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": "-1"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "enum-ref",
                                    "qualified_name": "KEEP",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": -1
                                    },
                                    "value": {
                                      "kind": "int-literal",
                                      "literal": -1
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "!=",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "vscan_result",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "enum-ref",
                                  "qualified_name": "KEEP",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:735:7, col:35>",
                            "kind": "call",
                            "callee": "(anonymous namespace)::displayObstacle",
                            "arguments": {},
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "prev_detection",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": "-1"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "enum-ref",
                                    "qualified_name": "KEEP",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": -1
                                    },
                                    "value": {
                                      "kind": "int-literal",
                                      "literal": -1
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "!=",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "vscan_result",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "enum-ref",
                                  "qualified_name": "KEEP",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:736:7, col:24>",
                            "kind": "assignment",
                            "variable": "prev_detection",
                            "unqualified_variable": "prev_detection",
                            "value": {
                              "kind": "variable-reference",
                              "qualified_name": "vscan_result",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "prev_detection",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": "-1"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "enum-ref",
                                    "qualified_name": "KEEP",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": -1
                                    },
                                    "value": {
                                      "kind": "int-literal",
                                      "literal": -1
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "!=",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "vscan_result",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "enum-ref",
                                  "qualified_name": "KEEP",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:737:7, col:21>",
                            "kind": "assignment",
                            "variable": "false_count",
                            "unqualified_variable": "false_count",
                            "value": {
                              "kind": "int-literal",
                              "literal": 0
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "prev_detection",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": "-1"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "enum-ref",
                                    "qualified_name": "KEEP",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": -1
                                    },
                                    "value": {
                                      "kind": "int-literal",
                                      "literal": -1
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "!=",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "vscan_result",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "enum-ref",
                                  "qualified_name": "KEEP",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  }
                                }
                              }
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:745:7, line:756:7>",
                            "kind": "if",
                            "trueBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": [
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:747:9, col:32>",
                                  "kind": "assignment",
                                  "variable": "(anonymous namespace)::g_obstacle_waypoint",
                                  "unqualified_variable": "g_obstacle_waypoint",
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "prev_detection",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": "-1"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "enum-ref",
                                            "qualified_name": "KEEP",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": -1
                                            },
                                            "value": {
                                              "kind": "int-literal",
                                              "literal": -1
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "!=",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "vscan_result",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "enum-ref",
                                            "qualified_name": "KEEP",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": -1
                                            },
                                            "value": {
                                              "kind": "int-literal",
                                              "literal": -1
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": ">=",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "false_count",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "/",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "(anonymous namespace)::LOOP_RATE",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "int-literal",
                                            "literal": 10
                                          }
                                        },
                                        "rhs": {
                                          "kind": "int-literal",
                                          "literal": 2
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:748:9, col:23>",
                                  "kind": "assignment",
                                  "variable": "false_count",
                                  "unqualified_variable": "false_count",
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "prev_detection",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": "-1"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "enum-ref",
                                            "qualified_name": "KEEP",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": -1
                                            },
                                            "value": {
                                              "kind": "int-literal",
                                              "literal": -1
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "!=",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "vscan_result",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "enum-ref",
                                            "qualified_name": "KEEP",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": -1
                                            },
                                            "value": {
                                              "kind": "int-literal",
                                              "literal": -1
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": ">=",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "false_count",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "/",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "(anonymous namespace)::LOOP_RATE",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "int-literal",
                                            "literal": 10
                                          }
                                        },
                                        "rhs": {
                                          "kind": "int-literal",
                                          "literal": 2
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:749:9, col:26>",
                                  "kind": "assignment",
                                  "variable": "prev_detection",
                                  "unqualified_variable": "prev_detection",
                                  "value": {
                                    "kind": "enum-ref",
                                    "qualified_name": "KEEP",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": -1
                                    },
                                    "value": {
                                      "kind": "int-literal",
                                      "literal": -1
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "prev_detection",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": "-1"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "enum-ref",
                                            "qualified_name": "KEEP",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": -1
                                            },
                                            "value": {
                                              "kind": "int-literal",
                                              "literal": -1
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "!=",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "vscan_result",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "enum-ref",
                                            "qualified_name": "KEEP",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": -1
                                            },
                                            "value": {
                                              "kind": "int-literal",
                                              "literal": -1
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": ">=",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "false_count",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "/",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "(anonymous namespace)::LOOP_RATE",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "int-literal",
                                            "literal": 10
                                          }
                                        },
                                        "rhs": {
                                          "kind": "int-literal",
                                          "literal": 2
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:747:9, col:32>",
                                  "kind": "assignment",
                                  "variable": "(anonymous namespace)::g_obstacle_waypoint",
                                  "unqualified_variable": "g_obstacle_waypoint",
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "prev_detection",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": "-1"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "enum-ref",
                                            "qualified_name": "KEEP",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": -1
                                            },
                                            "value": {
                                              "kind": "int-literal",
                                              "literal": -1
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "!=",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "vscan_result",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "enum-ref",
                                            "qualified_name": "KEEP",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": -1
                                            },
                                            "value": {
                                              "kind": "int-literal",
                                              "literal": -1
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": ">=",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "false_count",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "/",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "(anonymous namespace)::LOOP_RATE",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "int-literal",
                                            "literal": 10
                                          }
                                        },
                                        "rhs": {
                                          "kind": "int-literal",
                                          "literal": 2
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:748:9, col:23>",
                                  "kind": "assignment",
                                  "variable": "false_count",
                                  "unqualified_variable": "false_count",
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "prev_detection",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": "-1"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "enum-ref",
                                            "qualified_name": "KEEP",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": -1
                                            },
                                            "value": {
                                              "kind": "int-literal",
                                              "literal": -1
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "!=",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "vscan_result",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "enum-ref",
                                            "qualified_name": "KEEP",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": -1
                                            },
                                            "value": {
                                              "kind": "int-literal",
                                              "literal": -1
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": ">=",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "false_count",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "/",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "(anonymous namespace)::LOOP_RATE",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "int-literal",
                                            "literal": 10
                                          }
                                        },
                                        "rhs": {
                                          "kind": "int-literal",
                                          "literal": 2
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:749:9, col:26>",
                                  "kind": "assignment",
                                  "variable": "prev_detection",
                                  "unqualified_variable": "prev_detection",
                                  "value": {
                                    "kind": "enum-ref",
                                    "qualified_name": "KEEP",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": -1
                                    },
                                    "value": {
                                      "kind": "int-literal",
                                      "literal": -1
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "prev_detection",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": "-1"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "enum-ref",
                                            "qualified_name": "KEEP",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": -1
                                            },
                                            "value": {
                                              "kind": "int-literal",
                                              "literal": -1
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "!=",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "vscan_result",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "enum-ref",
                                            "qualified_name": "KEEP",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": -1
                                            },
                                            "value": {
                                              "kind": "int-literal",
                                              "literal": -1
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": ">=",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "false_count",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "/",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "(anonymous namespace)::LOOP_RATE",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "int-literal",
                                            "literal": 10
                                          }
                                        },
                                        "rhs": {
                                          "kind": "int-literal",
                                          "literal": 2
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "falseBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": [
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:754:9, col:31>",
                                  "kind": "call",
                                  "callee": "(anonymous namespace)::displayObstacle",
                                  "arguments": {},
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "prev_detection",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": "-1"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "enum-ref",
                                            "qualified_name": "KEEP",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": -1
                                            },
                                            "value": {
                                              "kind": "int-literal",
                                              "literal": -1
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "!=",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "vscan_result",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "enum-ref",
                                            "qualified_name": "KEEP",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": -1
                                            },
                                            "value": {
                                              "kind": "int-literal",
                                              "literal": -1
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": ">=",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "false_count",
                                          "type": "integer",
                                          "initial-value": {
                                            "kind": "int-literal",
                                            "literal": 0
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "/",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "(anonymous namespace)::LOOP_RATE",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": 10
                                            }
                                          },
                                          "rhs": {
                                            "kind": "int-literal",
                                            "literal": 2
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:754:9, col:31>",
                                  "kind": "call",
                                  "callee": "(anonymous namespace)::displayObstacle",
                                  "arguments": {},
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "prev_detection",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": "-1"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "enum-ref",
                                            "qualified_name": "KEEP",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": -1
                                            },
                                            "value": {
                                              "kind": "int-literal",
                                              "literal": -1
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "!=",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "vscan_result",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "enum-ref",
                                            "qualified_name": "KEEP",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": -1
                                            },
                                            "value": {
                                              "kind": "int-literal",
                                              "literal": -1
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": ">=",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "false_count",
                                          "type": "integer",
                                          "initial-value": {
                                            "kind": "int-literal",
                                            "literal": 0
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "/",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "(anonymous namespace)::LOOP_RATE",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": 10
                                            }
                                          },
                                          "rhs": {
                                            "kind": "int-literal",
                                            "literal": 2
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "condition": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        ]
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  ]
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              }
            ]
          }
        },
        {
          "name": "CrossWalk::areaCallback",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/libvelocity_set.cpp:37:3, col:11>",
                "kind": "assignment",
                "variable": "CrossWalk::area_",
                "unqualified_variable": "area_",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "msg",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/libvelocity_set.cpp:39:3, col:17>",
                "kind": "assignment",
                "variable": "CrossWalk::loaded_area",
                "unqualified_variable": "loaded_area",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/libvelocity_set.cpp:42:5, col:18>",
                "kind": "assignment",
                "variable": "CrossWalk::loaded_all",
                "unqualified_variable": "loaded_all",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "CrossWalk::loaded_crosswalk",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": false
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "CrossWalk::loaded_crosswalk",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "CrossWalk::loaded_area",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "CrossWalk::loaded_crosswalk",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "CrossWalk::loaded_area",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      },
                      "rhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "CrossWalk::loaded_line",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": false
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "CrossWalk::loaded_crosswalk",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "CrossWalk::loaded_area",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      },
                      "rhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "CrossWalk::loaded_line",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": false
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "CrossWalk::loaded_point",
                      "type": "bool",
                      "initial-value": {
                        "kind": "bool-literal",
                        "literal": false
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/libvelocity_set.cpp:37:3, col:11>",
                "kind": "assignment",
                "variable": "CrossWalk::area_",
                "unqualified_variable": "area_",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "msg",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/libvelocity_set.cpp:39:3, col:17>",
                "kind": "assignment",
                "variable": "CrossWalk::loaded_area",
                "unqualified_variable": "loaded_area",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/libvelocity_set.cpp:40:3, line:44:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/libvelocity_set.cpp:42:5, col:18>",
                      "kind": "assignment",
                      "variable": "CrossWalk::loaded_all",
                      "unqualified_variable": "loaded_all",
                      "value": {
                        "kind": "bool-literal",
                        "literal": true
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "CrossWalk::loaded_crosswalk",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_crosswalk",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_area",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_crosswalk",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_area",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "CrossWalk::loaded_line",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_crosswalk",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_area",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "CrossWalk::loaded_line",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "CrossWalk::loaded_point",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/libvelocity_set.cpp:42:5, col:18>",
                      "kind": "assignment",
                      "variable": "CrossWalk::loaded_all",
                      "unqualified_variable": "loaded_all",
                      "value": {
                        "kind": "bool-literal",
                        "literal": true
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "CrossWalk::loaded_crosswalk",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_crosswalk",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_area",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_crosswalk",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_area",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "CrossWalk::loaded_line",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_crosswalk",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_area",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "CrossWalk::loaded_line",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "CrossWalk::loaded_point",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              }
            ]
          }
        },
        {
          "name": "(anonymous namespace)::vscanCallback",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:351:5, col:20>",
                "kind": "assignment",
                "variable": "(anonymous namespace)::g_vscan_flag",
                "unqualified_variable": "g_vscan_flag",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "==",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "(anonymous namespace)::g_vscan_flag",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": false
                    }
                  },
                  "rhs": {
                    "kind": "bool-literal",
                    "literal": false
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:349:3, line:352:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:351:5, col:20>",
                      "kind": "assignment",
                      "variable": "(anonymous namespace)::g_vscan_flag",
                      "unqualified_variable": "g_vscan_flag",
                      "value": {
                        "kind": "bool-literal",
                        "literal": true
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "(anonymous namespace)::g_vscan_flag",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:351:5, col:20>",
                      "kind": "assignment",
                      "variable": "(anonymous namespace)::g_vscan_flag",
                      "unqualified_variable": "g_vscan_flag",
                      "value": {
                        "kind": "bool-literal",
                        "literal": true
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "(anonymous namespace)::g_vscan_flag",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              }
            ]
          }
        },
        {
          "name": "(anonymous namespace)::displayObstacle",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:378:3, col:28>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "/map"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:379:3, col:35>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                "unqualified_variable": "stamp",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:380:3, col:15>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::ns",
                "unqualified_variable": "ns",
                "value": {
                  "kind": "string-literal",
                  "literal": "my_namespace"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:381:3, col:15>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::id",
                "unqualified_variable": "id",
                "value": {
                  "kind": "int-literal",
                  "literal": 0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:382:3, col:45>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::type",
                "unqualified_variable": "type",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "visualization_msgs::Marker_<std::allocator<void>>::CUBE",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 1
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 1
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:383:3, col:47>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::action",
                "unqualified_variable": "action",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "visualization_msgs::Marker_<std::allocator<void>>::ADD",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 0
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 0
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:384:3, col:58>",
                "kind": "assignment",
                "variable": "geometry_msgs::Pose_<std::allocator<void>>::position",
                "unqualified_variable": "position",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:386:5, col:60>",
                "kind": "assignment",
                "variable": "geometry_msgs::Pose_<std::allocator<void>>::position",
                "unqualified_variable": "position",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "==",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "kind",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "enum-ref",
                    "qualified_name": "OTHERS",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "int-literal",
                      "literal": 3
                    },
                    "value": {
                      "kind": "int-literal",
                      "literal": 3
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:387:3, col:51>",
                "kind": "assignment",
                "variable": "geometry_msgs::Pose_<std::allocator<void>>::orientation",
                "unqualified_variable": "orientation",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "geometry_msgs::Pose_<std::allocator<void>>::orientation",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "qualified_name": "geometry_msgs::PoseStamped_<std::allocator<void>>::pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "(anonymous namespace)::g_localizer_pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:388:3, col:20>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "float-literal",
                  "literal": 1.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:389:3, col:20>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "float-literal",
                  "literal": 1.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:390:3, col:20>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "float-literal",
                  "literal": 2.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:391:3, col:20>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::a",
                "unqualified_variable": "a",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.7
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:394:5, col:22>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::r",
                "unqualified_variable": "r",
                "value": {
                  "kind": "float-literal",
                  "literal": 1.0
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "==",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "kind",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "enum-ref",
                    "qualified_name": "STOP",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "int-literal",
                      "literal": 1
                    },
                    "value": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:395:5, col:22>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::g",
                "unqualified_variable": "g",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "==",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "kind",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "enum-ref",
                    "qualified_name": "STOP",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "int-literal",
                      "literal": 1
                    },
                    "value": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:396:5, col:22>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::b",
                "unqualified_variable": "b",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "==",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "kind",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "enum-ref",
                    "qualified_name": "STOP",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "int-literal",
                      "literal": 1
                    },
                    "value": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:400:5, col:22>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::r",
                "unqualified_variable": "r",
                "value": {
                  "kind": "float-literal",
                  "literal": 1.0
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "kind",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "enum-ref",
                      "qualified_name": "STOP",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 1
                      },
                      "value": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:401:5, col:22>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::g",
                "unqualified_variable": "g",
                "value": {
                  "kind": "float-literal",
                  "literal": 1.0
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "kind",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "enum-ref",
                      "qualified_name": "STOP",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 1
                      },
                      "value": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:402:5, col:22>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::b",
                "unqualified_variable": "b",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "kind",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "enum-ref",
                      "qualified_name": "STOP",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 1
                      },
                      "value": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:404:3, col:38>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::lifetime",
                "unqualified_variable": "lifetime",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:405:3, col:25>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::frame_locked",
                "unqualified_variable": "frame_locked",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:407:3, col:32>",
                "kind": "publish",
                "publisher": "g_obstacle_pub",
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:378:3, col:28>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "/map"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:379:3, col:35>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                "unqualified_variable": "stamp",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:380:3, col:15>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::ns",
                "unqualified_variable": "ns",
                "value": {
                  "kind": "string-literal",
                  "literal": "my_namespace"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:381:3, col:15>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::id",
                "unqualified_variable": "id",
                "value": {
                  "kind": "int-literal",
                  "literal": 0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:382:3, col:45>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::type",
                "unqualified_variable": "type",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "visualization_msgs::Marker_<std::allocator<void>>::CUBE",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 1
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 1
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:383:3, col:47>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::action",
                "unqualified_variable": "action",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "visualization_msgs::Marker_<std::allocator<void>>::ADD",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 0
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 0
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:384:3, col:58>",
                "kind": "assignment",
                "variable": "geometry_msgs::Pose_<std::allocator<void>>::position",
                "unqualified_variable": "position",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:385:3, line:386:60>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:386:5, col:60>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Pose_<std::allocator<void>>::position",
                      "unqualified_variable": "position",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "kind",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "enum-ref",
                          "qualified_name": "OTHERS",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 3
                          },
                          "value": {
                            "kind": "int-literal",
                            "literal": 3
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:386:5, col:60>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Pose_<std::allocator<void>>::position",
                      "unqualified_variable": "position",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "kind",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "enum-ref",
                          "qualified_name": "OTHERS",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 3
                          },
                          "value": {
                            "kind": "int-literal",
                            "literal": 3
                          }
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:387:3, col:51>",
                "kind": "assignment",
                "variable": "geometry_msgs::Pose_<std::allocator<void>>::orientation",
                "unqualified_variable": "orientation",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "geometry_msgs::Pose_<std::allocator<void>>::orientation",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "qualified_name": "geometry_msgs::PoseStamped_<std::allocator<void>>::pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "(anonymous namespace)::g_localizer_pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:388:3, col:20>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "float-literal",
                  "literal": 1.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:389:3, col:20>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "float-literal",
                  "literal": 1.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:390:3, col:20>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "float-literal",
                  "literal": 2.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:391:3, col:20>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::a",
                "unqualified_variable": "a",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.7
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:392:3, line:403:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:394:5, col:22>",
                      "kind": "assignment",
                      "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::r",
                      "unqualified_variable": "r",
                      "value": {
                        "kind": "float-literal",
                        "literal": 1.0
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "kind",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "enum-ref",
                          "qualified_name": "STOP",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 1
                          },
                          "value": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:395:5, col:22>",
                      "kind": "assignment",
                      "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::g",
                      "unqualified_variable": "g",
                      "value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "kind",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "enum-ref",
                          "qualified_name": "STOP",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 1
                          },
                          "value": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:396:5, col:22>",
                      "kind": "assignment",
                      "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::b",
                      "unqualified_variable": "b",
                      "value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "kind",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "enum-ref",
                          "qualified_name": "STOP",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 1
                          },
                          "value": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:394:5, col:22>",
                      "kind": "assignment",
                      "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::r",
                      "unqualified_variable": "r",
                      "value": {
                        "kind": "float-literal",
                        "literal": 1.0
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "kind",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "enum-ref",
                          "qualified_name": "STOP",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 1
                          },
                          "value": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:395:5, col:22>",
                      "kind": "assignment",
                      "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::g",
                      "unqualified_variable": "g",
                      "value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "kind",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "enum-ref",
                          "qualified_name": "STOP",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 1
                          },
                          "value": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:396:5, col:22>",
                      "kind": "assignment",
                      "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::b",
                      "unqualified_variable": "b",
                      "value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "kind",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "enum-ref",
                          "qualified_name": "STOP",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 1
                          },
                          "value": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:400:5, col:22>",
                      "kind": "assignment",
                      "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::r",
                      "unqualified_variable": "r",
                      "value": {
                        "kind": "float-literal",
                        "literal": 1.0
                      },
                      "path_condition": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "kind",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "enum-ref",
                            "qualified_name": "STOP",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            },
                            "value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:401:5, col:22>",
                      "kind": "assignment",
                      "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::g",
                      "unqualified_variable": "g",
                      "value": {
                        "kind": "float-literal",
                        "literal": 1.0
                      },
                      "path_condition": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "kind",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "enum-ref",
                            "qualified_name": "STOP",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            },
                            "value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:402:5, col:22>",
                      "kind": "assignment",
                      "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::b",
                      "unqualified_variable": "b",
                      "value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      },
                      "path_condition": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "kind",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "enum-ref",
                            "qualified_name": "STOP",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            },
                            "value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:400:5, col:22>",
                      "kind": "assignment",
                      "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::r",
                      "unqualified_variable": "r",
                      "value": {
                        "kind": "float-literal",
                        "literal": 1.0
                      },
                      "path_condition": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "kind",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "enum-ref",
                            "qualified_name": "STOP",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            },
                            "value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:401:5, col:22>",
                      "kind": "assignment",
                      "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::g",
                      "unqualified_variable": "g",
                      "value": {
                        "kind": "float-literal",
                        "literal": 1.0
                      },
                      "path_condition": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "kind",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "enum-ref",
                            "qualified_name": "STOP",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            },
                            "value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:402:5, col:22>",
                      "kind": "assignment",
                      "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::b",
                      "unqualified_variable": "b",
                      "value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      },
                      "path_condition": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "kind",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "enum-ref",
                            "qualified_name": "STOP",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            },
                            "value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:404:3, col:38>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::lifetime",
                "unqualified_variable": "lifetime",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:405:3, col:25>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::frame_locked",
                "unqualified_variable": "frame_locked",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:407:3, col:32>",
                "kind": "publish",
                "publisher": "g_obstacle_pub",
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        },
        {
          "name": "CrossWalk::lineCallback",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/libvelocity_set.cpp:49:3, col:11>",
                "kind": "assignment",
                "variable": "CrossWalk::line_",
                "unqualified_variable": "line_",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "msg",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/libvelocity_set.cpp:51:3, col:17>",
                "kind": "assignment",
                "variable": "CrossWalk::loaded_line",
                "unqualified_variable": "loaded_line",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/libvelocity_set.cpp:54:5, col:18>",
                "kind": "assignment",
                "variable": "CrossWalk::loaded_all",
                "unqualified_variable": "loaded_all",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "CrossWalk::loaded_crosswalk",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": false
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "CrossWalk::loaded_crosswalk",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "CrossWalk::loaded_area",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "CrossWalk::loaded_crosswalk",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "CrossWalk::loaded_area",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      },
                      "rhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "CrossWalk::loaded_line",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": false
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "CrossWalk::loaded_crosswalk",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "CrossWalk::loaded_area",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      },
                      "rhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "CrossWalk::loaded_line",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": false
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "CrossWalk::loaded_point",
                      "type": "bool",
                      "initial-value": {
                        "kind": "bool-literal",
                        "literal": false
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/libvelocity_set.cpp:49:3, col:11>",
                "kind": "assignment",
                "variable": "CrossWalk::line_",
                "unqualified_variable": "line_",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "msg",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/libvelocity_set.cpp:51:3, col:17>",
                "kind": "assignment",
                "variable": "CrossWalk::loaded_line",
                "unqualified_variable": "loaded_line",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/libvelocity_set.cpp:52:3, line:56:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/libvelocity_set.cpp:54:5, col:18>",
                      "kind": "assignment",
                      "variable": "CrossWalk::loaded_all",
                      "unqualified_variable": "loaded_all",
                      "value": {
                        "kind": "bool-literal",
                        "literal": true
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "CrossWalk::loaded_crosswalk",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_crosswalk",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_area",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_crosswalk",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_area",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "CrossWalk::loaded_line",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_crosswalk",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_area",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "CrossWalk::loaded_line",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "CrossWalk::loaded_point",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/libvelocity_set.cpp:54:5, col:18>",
                      "kind": "assignment",
                      "variable": "CrossWalk::loaded_all",
                      "unqualified_variable": "loaded_all",
                      "value": {
                        "kind": "bool-literal",
                        "literal": true
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "CrossWalk::loaded_crosswalk",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_crosswalk",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_area",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_crosswalk",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_area",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "CrossWalk::loaded_line",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_crosswalk",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "CrossWalk::loaded_area",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "CrossWalk::loaded_line",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "CrossWalk::loaded_point",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              }
            ]
          }
        },
        {
          "name": "(anonymous namespace)::objPoseCallback",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": []
          }
        },
        {
          "name": "(anonymous namespace)::controlCallback",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:358:5, col:19>",
                "kind": "assignment",
                "variable": "(anonymous namespace)::g_pose_flag",
                "unqualified_variable": "g_pose_flag",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "variable-reference",
                    "qualified_name": "(anonymous namespace)::g_pose_flag",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": false
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:360:3, col:32>",
                "kind": "assignment",
                "variable": "geometry_msgs::PoseStamped_<std::allocator<void>>::header",
                "unqualified_variable": "header",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "geometry_msgs::PoseStamped_<std::allocator<void>>::header",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:361:3, col:30>",
                "kind": "assignment",
                "variable": "geometry_msgs::PoseStamped_<std::allocator<void>>::pose",
                "unqualified_variable": "pose",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "geometry_msgs::PoseStamped_<std::allocator<void>>::pose",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:357:3, line:358:19>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:358:5, col:19>",
                      "kind": "assignment",
                      "variable": "(anonymous namespace)::g_pose_flag",
                      "unqualified_variable": "g_pose_flag",
                      "value": {
                        "kind": "bool-literal",
                        "literal": true
                      },
                      "path_condition": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "variable-reference",
                          "qualified_name": "(anonymous namespace)::g_pose_flag",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:358:5, col:19>",
                      "kind": "assignment",
                      "variable": "(anonymous namespace)::g_pose_flag",
                      "unqualified_variable": "g_pose_flag",
                      "value": {
                        "kind": "bool-literal",
                        "literal": true
                      },
                      "path_condition": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "variable-reference",
                          "qualified_name": "(anonymous namespace)::g_pose_flag",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:360:3, col:32>",
                "kind": "assignment",
                "variable": "geometry_msgs::PoseStamped_<std::allocator<void>>::header",
                "unqualified_variable": "header",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "geometry_msgs::PoseStamped_<std::allocator<void>>::header",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:361:3, col:30>",
                "kind": "assignment",
                "variable": "geometry_msgs::PoseStamped_<std::allocator<void>>::pose",
                "unqualified_variable": "pose",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "geometry_msgs::PoseStamped_<std::allocator<void>>::pose",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        },
        {
          "name": "(anonymous namespace)::displayDetectionRange",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:418:3, col:38>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "/map"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:419:3, col:45>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                "unqualified_variable": "stamp",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:420:3, col:25>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::id",
                "unqualified_variable": "id",
                "value": {
                  "kind": "int-literal",
                  "literal": 0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:421:3, col:55>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::type",
                "unqualified_variable": "type",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "visualization_msgs::Marker_<std::allocator<void>>::SPHERE_LIST",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 7
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 7
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:422:3, col:57>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::action",
                "unqualified_variable": "action",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "visualization_msgs::Marker_<std::allocator<void>>::ADD",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 0
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 0
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:423:3, col:26>",
                "kind": "assignment",
                "variable": "waypoint_marker_stop",
                "unqualified_variable": "waypoint_marker_stop",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "crosswalk_marker",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:424:3, col:32>",
                "kind": "assignment",
                "variable": "waypoint_marker_decelerate",
                "unqualified_variable": "waypoint_marker_decelerate",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "crosswalk_marker",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:425:3, col:15>",
                "kind": "assignment",
                "variable": "stop_line",
                "unqualified_variable": "stop_line",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "crosswalk_marker",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:426:3, col:48>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::type",
                "unqualified_variable": "type",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "visualization_msgs::Marker_<std::allocator<void>>::CUBE",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 1
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 1
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:429:3, col:25>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::ns",
                "unqualified_variable": "ns",
                "value": {
                  "kind": "string-literal",
                  "literal": "Crosswalk Detection"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:430:3, col:29>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::ns",
                "unqualified_variable": "ns",
                "value": {
                  "kind": "string-literal",
                  "literal": "Stop Detection"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:431:3, col:35>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::ns",
                "unqualified_variable": "ns",
                "value": {
                  "kind": "string-literal",
                  "literal": "Decelerate Detection"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:432:3, col:18>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::ns",
                "unqualified_variable": "ns",
                "value": {
                  "kind": "string-literal",
                  "literal": "Stop Line"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:436:3, col:34>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "scale",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:437:3, col:34>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "scale",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:438:3, col:34>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "scale",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:439:3, col:34>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::a",
                "unqualified_variable": "a",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.2
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:440:3, col:34>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::r",
                "unqualified_variable": "r",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:441:3, col:34>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::g",
                "unqualified_variable": "g",
                "value": {
                  "kind": "float-literal",
                  "literal": 1.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:442:3, col:34>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::b",
                "unqualified_variable": "b",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:443:3, col:39>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::frame_locked",
                "unqualified_variable": "frame_locked",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:445:3, col:56>",
                "kind": "assignment",
                "variable": "scale",
                "unqualified_variable": "scale",
                "value": {
                  "kind": "binary-expr",
                  "operator": "*",
                  "lhs": {
                    "kind": "int-literal",
                    "literal": 2
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "+",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "(anonymous namespace)::g_detection_range",
                      "type": "float",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "variable-reference",
                      "qualified_name": "(anonymous namespace)::g_deceleration_range",
                      "type": "float",
                      "initial-value": {
                        "kind": "float-literal",
                        "literal": 1.8
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:446:3, col:40>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "scale",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:447:3, col:40>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "scale",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:448:3, col:40>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "scale",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:449:3, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::a",
                "unqualified_variable": "a",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.15
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:450:3, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::r",
                "unqualified_variable": "r",
                "value": {
                  "kind": "float-literal",
                  "literal": 1.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:451:3, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::g",
                "unqualified_variable": "g",
                "value": {
                  "kind": "float-literal",
                  "literal": 1.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:452:3, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::b",
                "unqualified_variable": "b",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:453:3, col:45>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::frame_locked",
                "unqualified_variable": "frame_locked",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:457:5, col:80>",
                "kind": "assignment",
                "variable": "geometry_msgs::Pose_<std::allocator<void>>::position",
                "unqualified_variable": "position",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": ">",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "(anonymous namespace)::g_obstacle_waypoint",
                    "type": "integer",
                    "initial-value": {
                      "kind": "int-literal",
                      "literal": -1
                    }
                  },
                  "rhs": {
                    "kind": "int-literal",
                    "literal": -1
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:458:5, col:86>",
                "kind": "assignment",
                "variable": "geometry_msgs::Pose_<std::allocator<void>>::orientation",
                "unqualified_variable": "orientation",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": ">",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "(anonymous namespace)::g_obstacle_waypoint",
                    "type": "integer",
                    "initial-value": {
                      "kind": "int-literal",
                      "literal": -1
                    }
                  },
                  "rhs": {
                    "kind": "int-literal",
                    "literal": -1
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:460:3, col:32>",
                "kind": "assignment",
                "variable": "geometry_msgs::Point_<std::allocator<void>>::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "binary-expr",
                  "operator": "+",
                  "lhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "geometry_msgs::Point_<std::allocator<void>>::z",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "float-literal",
                      "literal": 0.0
                    },
                    "base": {
                      "kind": "member-var-ref",
                      "qualified_name": "geometry_msgs::Pose_<std::allocator<void>>::position",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "member-var-ref",
                        "qualified_name": "visualization_msgs::Marker_<std::allocator<void>>::pose",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "stop_line",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "float-literal",
                    "literal": 1.0
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:461:3, col:23>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.1
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:462:3, col:23>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "float-literal",
                  "literal": 15.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:463:3, col:23>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "float-literal",
                  "literal": 2.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:464:3, col:23>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::a",
                "unqualified_variable": "a",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.3
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:465:3, col:23>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::r",
                "unqualified_variable": "r",
                "value": {
                  "kind": "float-literal",
                  "literal": 1.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:466:3, col:23>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::g",
                "unqualified_variable": "g",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:467:3, col:23>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::b",
                "unqualified_variable": "b",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:468:3, col:41>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::lifetime",
                "unqualified_variable": "lifetime",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:469:3, col:28>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::frame_locked",
                "unqualified_variable": "frame_locked",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:472:5, col:51>",
                "kind": "assignment",
                "variable": "scale",
                "unqualified_variable": "scale",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "CrossWalkPoints::width",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": ">",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "crosswalk_id",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "int-literal",
                    "literal": 0
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:473:3, col:30>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "scale",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:474:3, col:30>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "scale",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:475:3, col:30>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "scale",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:476:3, col:30>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::a",
                "unqualified_variable": "a",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.5
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:477:3, col:30>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::r",
                "unqualified_variable": "r",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:478:3, col:30>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::g",
                "unqualified_variable": "g",
                "value": {
                  "kind": "float-literal",
                  "literal": 1.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:479:3, col:30>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::b",
                "unqualified_variable": "b",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:480:3, col:35>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::frame_locked",
                "unqualified_variable": "frame_locked",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:489:5, col:50>",
                "kind": "assignment",
                "variable": "point",
                "unqualified_variable": "point",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "<",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "i",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "variable-reference",
                        "qualified_name": "(anonymous namespace)::g_search_distance",
                        "type": "float",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 60
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "<",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "num",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "<",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "num",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": ">",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "+",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "i",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "variable-reference",
                            "qualified_name": "num",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "-",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:510:3, col:35>",
                "kind": "publish",
                "publisher": "g_range_pub",
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:418:3, col:38>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "/map"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:419:3, col:45>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                "unqualified_variable": "stamp",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:420:3, col:25>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::id",
                "unqualified_variable": "id",
                "value": {
                  "kind": "int-literal",
                  "literal": 0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:421:3, col:55>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::type",
                "unqualified_variable": "type",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "visualization_msgs::Marker_<std::allocator<void>>::SPHERE_LIST",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 7
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 7
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:422:3, col:57>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::action",
                "unqualified_variable": "action",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "visualization_msgs::Marker_<std::allocator<void>>::ADD",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 0
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 0
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:423:3, col:26>",
                "kind": "assignment",
                "variable": "waypoint_marker_stop",
                "unqualified_variable": "waypoint_marker_stop",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "crosswalk_marker",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:424:3, col:32>",
                "kind": "assignment",
                "variable": "waypoint_marker_decelerate",
                "unqualified_variable": "waypoint_marker_decelerate",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "crosswalk_marker",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:425:3, col:15>",
                "kind": "assignment",
                "variable": "stop_line",
                "unqualified_variable": "stop_line",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "crosswalk_marker",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:426:3, col:48>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::type",
                "unqualified_variable": "type",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "visualization_msgs::Marker_<std::allocator<void>>::CUBE",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 1
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 1
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:429:3, col:25>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::ns",
                "unqualified_variable": "ns",
                "value": {
                  "kind": "string-literal",
                  "literal": "Crosswalk Detection"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:430:3, col:29>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::ns",
                "unqualified_variable": "ns",
                "value": {
                  "kind": "string-literal",
                  "literal": "Stop Detection"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:431:3, col:35>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::ns",
                "unqualified_variable": "ns",
                "value": {
                  "kind": "string-literal",
                  "literal": "Decelerate Detection"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:432:3, col:18>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::ns",
                "unqualified_variable": "ns",
                "value": {
                  "kind": "string-literal",
                  "literal": "Stop Line"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:436:3, col:34>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "scale",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:437:3, col:34>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "scale",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:438:3, col:34>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "scale",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:439:3, col:34>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::a",
                "unqualified_variable": "a",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.2
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:440:3, col:34>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::r",
                "unqualified_variable": "r",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:441:3, col:34>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::g",
                "unqualified_variable": "g",
                "value": {
                  "kind": "float-literal",
                  "literal": 1.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:442:3, col:34>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::b",
                "unqualified_variable": "b",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:443:3, col:39>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::frame_locked",
                "unqualified_variable": "frame_locked",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:445:3, col:56>",
                "kind": "assignment",
                "variable": "scale",
                "unqualified_variable": "scale",
                "value": {
                  "kind": "binary-expr",
                  "operator": "*",
                  "lhs": {
                    "kind": "int-literal",
                    "literal": 2
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "+",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "(anonymous namespace)::g_detection_range",
                      "type": "float",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "variable-reference",
                      "qualified_name": "(anonymous namespace)::g_deceleration_range",
                      "type": "float",
                      "initial-value": {
                        "kind": "float-literal",
                        "literal": 1.8
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:446:3, col:40>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "scale",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:447:3, col:40>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "scale",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:448:3, col:40>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "scale",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:449:3, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::a",
                "unqualified_variable": "a",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.15
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:450:3, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::r",
                "unqualified_variable": "r",
                "value": {
                  "kind": "float-literal",
                  "literal": 1.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:451:3, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::g",
                "unqualified_variable": "g",
                "value": {
                  "kind": "float-literal",
                  "literal": 1.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:452:3, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::b",
                "unqualified_variable": "b",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:453:3, col:45>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::frame_locked",
                "unqualified_variable": "frame_locked",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:455:3, line:459:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:457:5, col:80>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Pose_<std::allocator<void>>::position",
                      "unqualified_variable": "position",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": ">",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "(anonymous namespace)::g_obstacle_waypoint",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": -1
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": -1
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:458:5, col:86>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Pose_<std::allocator<void>>::orientation",
                      "unqualified_variable": "orientation",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": ">",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "(anonymous namespace)::g_obstacle_waypoint",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": -1
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": -1
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:457:5, col:80>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Pose_<std::allocator<void>>::position",
                      "unqualified_variable": "position",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": ">",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "(anonymous namespace)::g_obstacle_waypoint",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": -1
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": -1
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:458:5, col:86>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Pose_<std::allocator<void>>::orientation",
                      "unqualified_variable": "orientation",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": ">",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "(anonymous namespace)::g_obstacle_waypoint",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": -1
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": -1
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:460:3, col:32>",
                "kind": "assignment",
                "variable": "geometry_msgs::Point_<std::allocator<void>>::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "binary-expr",
                  "operator": "+",
                  "lhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "geometry_msgs::Point_<std::allocator<void>>::z",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "float-literal",
                      "literal": 0.0
                    },
                    "base": {
                      "kind": "member-var-ref",
                      "qualified_name": "geometry_msgs::Pose_<std::allocator<void>>::position",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "member-var-ref",
                        "qualified_name": "visualization_msgs::Marker_<std::allocator<void>>::pose",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "stop_line",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "float-literal",
                    "literal": 1.0
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:461:3, col:23>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.1
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:462:3, col:23>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "float-literal",
                  "literal": 15.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:463:3, col:23>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "float-literal",
                  "literal": 2.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:464:3, col:23>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::a",
                "unqualified_variable": "a",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.3
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:465:3, col:23>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::r",
                "unqualified_variable": "r",
                "value": {
                  "kind": "float-literal",
                  "literal": 1.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:466:3, col:23>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::g",
                "unqualified_variable": "g",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:467:3, col:23>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::b",
                "unqualified_variable": "b",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:468:3, col:41>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::lifetime",
                "unqualified_variable": "lifetime",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:469:3, col:28>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::frame_locked",
                "unqualified_variable": "frame_locked",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:471:3, line:472:51>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:472:5, col:51>",
                      "kind": "assignment",
                      "variable": "scale",
                      "unqualified_variable": "scale",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "CrossWalkPoints::width",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": ">",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "crosswalk_id",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:472:5, col:51>",
                      "kind": "assignment",
                      "variable": "scale",
                      "unqualified_variable": "scale",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "CrossWalkPoints::width",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": ">",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "crosswalk_id",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:473:3, col:30>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "scale",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:474:3, col:30>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "scale",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:475:3, col:30>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "scale",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:476:3, col:30>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::a",
                "unqualified_variable": "a",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.5
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:477:3, col:30>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::r",
                "unqualified_variable": "r",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:478:3, col:30>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::g",
                "unqualified_variable": "g",
                "value": {
                  "kind": "float-literal",
                  "literal": 1.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:479:3, col:30>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::b",
                "unqualified_variable": "b",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:480:3, col:35>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::frame_locked",
                "unqualified_variable": "frame_locked",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:489:5, col:50>",
                "kind": "assignment",
                "variable": "point",
                "unqualified_variable": "point",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "<",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "i",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "variable-reference",
                        "qualified_name": "(anonymous namespace)::g_search_distance",
                        "type": "float",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 60
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "<",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "num",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "<",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "num",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": ">",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "+",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "i",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "variable-reference",
                            "qualified_name": "num",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "-",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_velocity_set/lattice_velocity_set.cpp:510:3, col:35>",
                "kind": "publish",
                "publisher": "g_range_pub",
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        }
      ]
    }
  }
}