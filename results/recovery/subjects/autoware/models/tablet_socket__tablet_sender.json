{
  "image": {
    "sha256": "66d3186041a66d858724cf5f48d49ffb170dbb061b60afbad2f689521c32be3e"
  },
  "node-name": "tablet_sender",
  "package": {
    "name": "tablet_socket",
    "path": "/home/autoware/Autoware/ros/src/socket/packages/tablet_socket"
  },
  "sources": [
    "/home/autoware/Autoware/ros/src/socket/packages/tablet_socket/nodes/tablet_sender/tablet_sender.cpp"
  ],
  "program": {
    "program": {
      "entrypoint": "main",
      "functions": [
        {
          "name": "subscribe_ndt_stat",
          "parameters": [],
          "body": {
            "kind": "compound",
            "statements": [
              {
                "kind": "assignment",
                "variable": "nbytes",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "assignment",
                "variable": "socket_ok",
                "value": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "kind": "assignment",
                "variable": "nbytes",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "assignment",
                "variable": "socket_ok",
                "value": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "kind": "assignment",
                "variable": "nbytes",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "if",
                "trueBranchBody": {
                  "kind": "compound",
                  "statements": [
                    {
                      "kind": "assignment",
                      "variable": "socket_ok",
                      "value": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "kind": "assignment",
                "variable": "nbytes",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "if",
                "trueBranchBody": {
                  "kind": "compound",
                  "statements": [
                    {
                      "kind": "assignment",
                      "variable": "socket_ok",
                      "value": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              }
            ]
          }
        },
        {
          "name": "subscribe_can_info",
          "parameters": [],
          "body": {
            "kind": "compound",
            "statements": [
              {
                "kind": "assignment",
                "variable": "nbytes",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "assignment",
                "variable": "socket_ok",
                "value": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "kind": "assignment",
                "variable": "nbytes",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "assignment",
                "variable": "socket_ok",
                "value": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "kind": "assignment",
                "variable": "nbytes",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "if",
                "trueBranchBody": {
                  "kind": "compound",
                  "statements": [
                    {
                      "kind": "assignment",
                      "variable": "socket_ok",
                      "value": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "kind": "assignment",
                "variable": "nbytes",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "if",
                "trueBranchBody": {
                  "kind": "compound",
                  "statements": [
                    {
                      "kind": "assignment",
                      "variable": "socket_ok",
                      "value": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              }
            ]
          }
        },
        {
          "name": "main",
          "parameters": [
            {
              "index": 0,
              "name": "argc",
              "type": "integer"
            }
          ],
          "body": {
            "kind": "compound",
            "statements": [
              {
                "kind": "ros-init",
                "name": {
                  "kind": "string-literal",
                  "literal": "tablet_sender"
                }
              },
              {
                "kind": "assignment",
                "variable": "v0",
                "value": {
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": ""
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "tablet_sender/port"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "listenfd",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "assignment",
                "variable": "on",
                "value": {
                  "kind": "int-literal",
                  "literal": 1
                }
              },
              {
                "kind": "assignment",
                "variable": "sockaddr_in::sin_family",
                "value": {
                  "kind": "int-literal",
                  "literal": 2
                }
              },
              {
                "kind": "assignment",
                "variable": "sockaddr_in::sin_port",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "assignment",
                "variable": "__v",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "assignment",
                "variable": "in_addr::s_addr",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "assignment",
                "variable": "__v",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "error_info"
                  }
                },
                "format": "tablet_socket_msgs/error_info",
                "callback-name": "subscribe_error_info"
              },
              {
                "kind": "call",
                "callee": "subscribe_error_info",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "can_info"
                  }
                },
                "format": "autoware_can_msgs/CANInfo",
                "callback-name": "subscribe_can_info"
              },
              {
                "kind": "call",
                "callee": "subscribe_can_info",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "mode_info"
                  }
                },
                "format": "tablet_socket_msgs/mode_info",
                "callback-name": "subscribe_mode_info"
              },
              {
                "kind": "call",
                "callee": "subscribe_mode_info",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "ndt_stat"
                  }
                },
                "format": "autoware_msgs/NDTStat",
                "callback-name": "subscribe_ndt_stat"
              },
              {
                "kind": "call",
                "callee": "subscribe_ndt_stat",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "wf_stat"
                  }
                },
                "format": "std_msgs/Bool",
                "callback-name": "subscribe_lf_stat"
              },
              {
                "kind": "call",
                "callee": "subscribe_lf_stat",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "assignment",
                "variable": "sigaction::sa_flags",
                "value": {
                  "kind": "int-literal",
                  "literal": -268435457
                }
              },
              {
                "kind": "assignment",
                "variable": "connfd",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "assignment",
                "variable": "socket_ok",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "ratesleep",
                "rate": {
                  "kind": "float-literal",
                  "literal": 1.0
                }
              },
              {
                "kind": "ros-init",
                "name": {
                  "kind": "string-literal",
                  "literal": "tablet_sender"
                }
              },
              {
                "kind": "assignment",
                "variable": "v1",
                "value": {
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": ""
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "tablet_sender/port"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "listenfd",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "assignment",
                "variable": "on",
                "value": {
                  "kind": "int-literal",
                  "literal": 1
                }
              },
              {
                "kind": "assignment",
                "variable": "sockaddr_in::sin_family",
                "value": {
                  "kind": "int-literal",
                  "literal": 2
                }
              },
              {
                "kind": "assignment",
                "variable": "sockaddr_in::sin_port",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "if",
                "trueBranchBody": {
                  "kind": "compound",
                  "statements": [
                    {
                      "kind": "assignment",
                      "variable": "__v",
                      "value": {
                        "kind": "unknown"
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "assignment",
                "variable": "in_addr::s_addr",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "if",
                "trueBranchBody": {
                  "kind": "compound",
                  "statements": [
                    {
                      "kind": "assignment",
                      "variable": "__v",
                      "value": {
                        "kind": "unknown"
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "error_info"
                  }
                },
                "format": "tablet_socket_msgs/error_info",
                "callback-name": "subscribe_error_info"
              },
              {
                "kind": "call",
                "callee": "subscribe_error_info",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "can_info"
                  }
                },
                "format": "autoware_can_msgs/CANInfo",
                "callback-name": "subscribe_can_info"
              },
              {
                "kind": "call",
                "callee": "subscribe_can_info",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "mode_info"
                  }
                },
                "format": "tablet_socket_msgs/mode_info",
                "callback-name": "subscribe_mode_info"
              },
              {
                "kind": "call",
                "callee": "subscribe_mode_info",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "ndt_stat"
                  }
                },
                "format": "autoware_msgs/NDTStat",
                "callback-name": "subscribe_ndt_stat"
              },
              {
                "kind": "call",
                "callee": "subscribe_ndt_stat",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "wf_stat"
                  }
                },
                "format": "std_msgs/Bool",
                "callback-name": "subscribe_lf_stat"
              },
              {
                "kind": "call",
                "callee": "subscribe_lf_stat",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "assignment",
                "variable": "sigaction::sa_flags",
                "value": {
                  "kind": "int-literal",
                  "literal": -268435457
                }
              },
              {
                "kind": "while",
                "body": {
                  "kind": "compound",
                  "statements": [
                    {
                      "kind": "assignment",
                      "variable": "connfd",
                      "value": {
                        "kind": "unknown"
                      }
                    },
                    {
                      "kind": "assignment",
                      "variable": "socket_ok",
                      "value": {
                        "kind": "bool-literal",
                        "literal": true
                      }
                    },
                    {
                      "kind": "while",
                      "body": {
                        "kind": "compound",
                        "statements": [
                          {
                            "kind": "ratesleep",
                            "rate": {
                              "kind": "float-literal",
                              "literal": 1.0
                            }
                          }
                        ]
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  ]
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        },
        {
          "name": "subscribe_lf_stat",
          "parameters": [],
          "body": {
            "kind": "compound",
            "statements": [
              {
                "kind": "assignment",
                "variable": "nbytes",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "assignment",
                "variable": "socket_ok",
                "value": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "kind": "assignment",
                "variable": "nbytes",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "assignment",
                "variable": "socket_ok",
                "value": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "kind": "assignment",
                "variable": "nbytes",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "if",
                "trueBranchBody": {
                  "kind": "compound",
                  "statements": [
                    {
                      "kind": "assignment",
                      "variable": "socket_ok",
                      "value": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "kind": "assignment",
                "variable": "nbytes",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "if",
                "trueBranchBody": {
                  "kind": "compound",
                  "statements": [
                    {
                      "kind": "assignment",
                      "variable": "socket_ok",
                      "value": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              }
            ]
          }
        },
        {
          "name": "subscribe_mode_info",
          "parameters": [],
          "body": {
            "kind": "compound",
            "statements": [
              {
                "kind": "assignment",
                "variable": "nbytes",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "assignment",
                "variable": "socket_ok",
                "value": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "kind": "assignment",
                "variable": "nbytes",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "assignment",
                "variable": "socket_ok",
                "value": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "kind": "assignment",
                "variable": "nbytes",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "if",
                "trueBranchBody": {
                  "kind": "compound",
                  "statements": [
                    {
                      "kind": "assignment",
                      "variable": "socket_ok",
                      "value": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "kind": "assignment",
                "variable": "nbytes",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "if",
                "trueBranchBody": {
                  "kind": "compound",
                  "statements": [
                    {
                      "kind": "assignment",
                      "variable": "socket_ok",
                      "value": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              }
            ]
          }
        },
        {
          "name": "subscribe_error_info",
          "parameters": [],
          "body": {
            "kind": "compound",
            "statements": [
              {
                "kind": "assignment",
                "variable": "nbytes",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "assignment",
                "variable": "socket_ok",
                "value": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "kind": "assignment",
                "variable": "nbytes",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "assignment",
                "variable": "socket_ok",
                "value": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "kind": "assignment",
                "variable": "nbytes",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "if",
                "trueBranchBody": {
                  "kind": "compound",
                  "statements": [
                    {
                      "kind": "assignment",
                      "variable": "socket_ok",
                      "value": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "kind": "assignment",
                "variable": "nbytes",
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "kind": "if",
                "trueBranchBody": {
                  "kind": "compound",
                  "statements": [
                    {
                      "kind": "assignment",
                      "variable": "socket_ok",
                      "value": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              }
            ]
          }
        }
      ]
    }
  }
}