{
  "image": {
    "sha256": "95a3283df69676a0a64484edcf6b09f886abb9ab1dec292863aa0bffd2ce613b"
  },
  "node-name": "lattice_twist_convert",
  "package": {
    "name": "lattice_planner",
    "path": "/home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner"
  },
  "sources": [
    "/home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp"
  ],
  "program": {
    "program": {
      "entrypoint": "main",
      "functions": [
        {
          "name": "main",
          "parameters": [
            {
              "index": 0,
              "name": "argc",
              "type": "integer"
            }
          ],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:113:3, col:44>",
                "kind": "ros-init",
                "name": {
                  "kind": "string-literal",
                  "literal": "command_converter"
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:121:43, col:100>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "twist_raw"
                  }
                },
                "format": "geometry_msgs/TwistStamped",
                "source_location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:121:43, col:100>"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:125:39, col:79>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "spline"
                  }
                },
                "format": "std_msgs/Float64MultiArray",
                "callback-name": "splineCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:125:39, col:79>",
                "kind": "call",
                "callee": "splineCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:126:38, col:76>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "state"
                  }
                },
                "format": "std_msgs/Float64MultiArray",
                "callback-name": "stateCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:126:38, col:76>",
                "kind": "call",
                "callee": "stateCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:143:5, col:43>",
                "kind": "assignment",
                "variable": "current_time",
                "unqualified_variable": "current_time",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:151:13, col:24>",
                "kind": "assignment",
                "variable": "vdes",
                "unqualified_variable": "vdes",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "State::(anonymous struct)::vdes",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "qualified_name": "State::(anonymous)",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "veh",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "endflag",
                      "type": "bool",
                      "initial-value": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "newState",
                      "type": "bool",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:153:13, col:84>",
                "kind": "assignment",
                "variable": "veh_temp",
                "unqualified_variable": "veh_temp",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "endflag",
                      "type": "bool",
                      "initial-value": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "newState",
                      "type": "bool",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:157:11, col:32>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "vdes",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "==",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "endflag",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": false
                    }
                  },
                  "rhs": {
                    "kind": "int-literal",
                    "literal": 0
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:160:11, col:52>",
                "kind": "assignment",
                "variable": "State::(anonymous struct)::kappa",
                "unqualified_variable": "kappa",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "==",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "endflag",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": false
                    }
                  },
                  "rhs": {
                    "kind": "int-literal",
                    "literal": 0
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:161:11, col:53>",
                "kind": "assignment",
                "variable": "State::(anonymous struct)::kappa",
                "unqualified_variable": "kappa",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "==",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "endflag",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": false
                    }
                  },
                  "rhs": {
                    "kind": "int-literal",
                    "literal": 0
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:164:11, col:47>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "binary-expr",
                  "operator": "*",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "vdes",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "State::(anonymous struct)::kappa",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "member-var-ref",
                      "qualified_name": "State::(anonymous)",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "variable-reference",
                        "qualified_name": "veh_temp",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "==",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "endflag",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": false
                    }
                  },
                  "rhs": {
                    "kind": "int-literal",
                    "literal": 0
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:174:5, col:41>",
                "kind": "publish",
                "publisher": "cmd_velocity_publisher",
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:175:5, col:21>",
                "kind": "ratesleep",
                "rate": {
                  "kind": "float-literal",
                  "literal": 15.0
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:113:3, col:44>",
                "kind": "ros-init",
                "name": {
                  "kind": "string-literal",
                  "literal": "command_converter"
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:121:43, col:100>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "twist_raw"
                  }
                },
                "format": "geometry_msgs/TwistStamped",
                "source_location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:121:43, col:100>"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:125:39, col:79>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "spline"
                  }
                },
                "format": "std_msgs/Float64MultiArray",
                "callback-name": "splineCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:125:39, col:79>",
                "kind": "call",
                "callee": "splineCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:126:38, col:76>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "state"
                  }
                },
                "format": "std_msgs/Float64MultiArray",
                "callback-name": "stateCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:126:38, col:76>",
                "kind": "call",
                "callee": "stateCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:137:3, line:176:3>",
                "kind": "while",
                "body": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:143:5, col:43>",
                      "kind": "assignment",
                      "variable": "current_time",
                      "unqualified_variable": "current_time",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "bool-literal",
                        "literal": true
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:147:5, line:171:5>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:149:11, line:154:11>",
                            "kind": "if",
                            "trueBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": [
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:151:13, col:24>",
                                  "kind": "assignment",
                                  "variable": "vdes",
                                  "unqualified_variable": "vdes",
                                  "value": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "State::(anonymous struct)::vdes",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "State::(anonymous)",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "unknown"
                                      },
                                      "base": {
                                        "kind": "variable-reference",
                                        "qualified_name": "veh",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      }
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "endflag",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "newState",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:153:13, col:84>",
                                  "kind": "assignment",
                                  "variable": "veh_temp",
                                  "unqualified_variable": "veh_temp",
                                  "value": {
                                    "kind": "unknown"
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "endflag",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "newState",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:151:13, col:24>",
                                  "kind": "assignment",
                                  "variable": "vdes",
                                  "unqualified_variable": "vdes",
                                  "value": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "State::(anonymous struct)::vdes",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "State::(anonymous)",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "unknown"
                                      },
                                      "base": {
                                        "kind": "variable-reference",
                                        "qualified_name": "veh",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      }
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "endflag",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "newState",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:153:13, col:84>",
                                  "kind": "assignment",
                                  "variable": "veh_temp",
                                  "unqualified_variable": "veh_temp",
                                  "value": {
                                    "kind": "unknown"
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "endflag",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "newState",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "falseBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": []
                            },
                            "condition": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:157:11, col:32>",
                            "kind": "assignment",
                            "variable": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                            "unqualified_variable": "x",
                            "value": {
                              "kind": "variable-reference",
                              "qualified_name": "vdes",
                              "type": "float",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "endflag",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:160:11, col:52>",
                            "kind": "assignment",
                            "variable": "State::(anonymous struct)::kappa",
                            "unqualified_variable": "kappa",
                            "value": {
                              "kind": "unknown"
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "endflag",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:161:11, col:53>",
                            "kind": "assignment",
                            "variable": "State::(anonymous struct)::kappa",
                            "unqualified_variable": "kappa",
                            "value": {
                              "kind": "unknown"
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "endflag",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:164:11, col:47>",
                            "kind": "assignment",
                            "variable": "geometry_msgs::Vector3_<std::allocator<void>>::z",
                            "unqualified_variable": "z",
                            "value": {
                              "kind": "binary-expr",
                              "operator": "*",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "vdes",
                                "type": "float",
                                "initial-value": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "State::(anonymous struct)::kappa",
                                "type": "float",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "State::(anonymous)",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "variable-reference",
                                    "qualified_name": "veh_temp",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  }
                                }
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "endflag",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:157:11, col:32>",
                            "kind": "assignment",
                            "variable": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                            "unqualified_variable": "x",
                            "value": {
                              "kind": "variable-reference",
                              "qualified_name": "vdes",
                              "type": "float",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "endflag",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:160:11, col:52>",
                            "kind": "assignment",
                            "variable": "State::(anonymous struct)::kappa",
                            "unqualified_variable": "kappa",
                            "value": {
                              "kind": "unknown"
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "endflag",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:161:11, col:53>",
                            "kind": "assignment",
                            "variable": "State::(anonymous struct)::kappa",
                            "unqualified_variable": "kappa",
                            "value": {
                              "kind": "unknown"
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "endflag",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:164:11, col:47>",
                            "kind": "assignment",
                            "variable": "geometry_msgs::Vector3_<std::allocator<void>>::z",
                            "unqualified_variable": "z",
                            "value": {
                              "kind": "binary-expr",
                              "operator": "*",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "vdes",
                                "type": "float",
                                "initial-value": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "State::(anonymous struct)::kappa",
                                "type": "float",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "State::(anonymous)",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "variable-reference",
                                    "qualified_name": "veh_temp",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  }
                                }
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "endflag",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": []
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:174:5, col:41>",
                      "kind": "publish",
                      "publisher": "cmd_velocity_publisher",
                      "path_condition": {
                        "kind": "bool-literal",
                        "literal": true
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:175:5, col:21>",
                      "kind": "ratesleep",
                      "rate": {
                        "kind": "float-literal",
                        "literal": 15.0
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:143:5, col:43>",
                      "kind": "assignment",
                      "variable": "current_time",
                      "unqualified_variable": "current_time",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "bool-literal",
                        "literal": true
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:174:5, col:41>",
                      "kind": "publish",
                      "publisher": "cmd_velocity_publisher",
                      "path_condition": {
                        "kind": "bool-literal",
                        "literal": true
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:175:5, col:21>",
                      "kind": "ratesleep",
                      "rate": {
                        "kind": "float-literal",
                        "literal": 15.0
                      }
                    }
                  ]
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              }
            ]
          }
        },
        {
          "name": "stateCallback",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:195:5, col:16 <Spelling=/home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/include/libtraj_gen.h:57:14>>",
                "kind": "assignment",
                "variable": "newState",
                "unqualified_variable": "newState",
                "value": {
                  "kind": "int-literal",
                  "literal": 1
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:195:5, col:16 <Spelling=/home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/include/libtraj_gen.h:57:14>>",
                "kind": "assignment",
                "variable": "newState",
                "unqualified_variable": "newState",
                "value": {
                  "kind": "int-literal",
                  "literal": 1
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        },
        {
          "name": "splineCallback",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:208:7, col:42>",
                "kind": "assignment",
                "variable": "start_time",
                "unqualified_variable": "start_time",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:222:7, col:19 <Spelling=/home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/include/libtraj_gen.h:57:14>>",
                "kind": "assignment",
                "variable": "newSpline",
                "unqualified_variable": "newSpline",
                "value": {
                  "kind": "int-literal",
                  "literal": 1
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "==",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "newState",
                    "type": "bool",
                    "initial-value": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  },
                  "rhs": {
                    "kind": "int-literal",
                    "literal": 1
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:206:5, line:209:5>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:208:7, col:42>",
                      "kind": "assignment",
                      "variable": "start_time",
                      "unqualified_variable": "start_time",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "bool-literal",
                        "literal": true
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:208:7, col:42>",
                      "kind": "assignment",
                      "variable": "start_time",
                      "unqualified_variable": "start_time",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "bool-literal",
                        "literal": true
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:220:5, line:223:5>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:222:7, col:19 <Spelling=/home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/include/libtraj_gen.h:57:14>>",
                      "kind": "assignment",
                      "variable": "newSpline",
                      "unqualified_variable": "newSpline",
                      "value": {
                        "kind": "int-literal",
                        "literal": 1
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "newState",
                          "type": "bool",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/nodes/lattice_twist_convert/lattice_twist_convert.cpp:222:7, col:19 <Spelling=/home/autoware/Autoware/ros/src/computing/planning/motion/packages/lattice_planner/include/libtraj_gen.h:57:14>>",
                      "kind": "assignment",
                      "variable": "newSpline",
                      "unqualified_variable": "newSpline",
                      "value": {
                        "kind": "int-literal",
                        "literal": 1
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "newState",
                          "type": "bool",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              }
            ]
          }
        }
      ]
    }
  }
}