{
  "image": {
    "sha256": "66d3186041a66d858724cf5f48d49ffb170dbb061b60afbad2f689521c32be3e"
  },
  "node-name": "sample_points_map_update",
  "package": {
    "name": "sample_data",
    "path": "/home/autoware/Autoware/ros/src/util/packages/sample_data"
  },
  "sources": [
    "/home/autoware/Autoware/ros/src/util/packages/sample_data/nodes/sample_points_map_update/sample_points_map_update.cpp"
  ],
  "program": {
    "program": {
      "entrypoint": "main",
      "functions": [
        {
          "name": "main",
          "parameters": [
            {
              "index": 0,
              "name": "argc",
              "type": "integer"
            }
          ],
          "body": {
            "kind": "compound",
            "statements": [
              {
                "kind": "ros-init",
                "name": {
                  "kind": "string-literal",
                  "literal": "pcd_read"
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "sample_trajectory"
                  }
                },
                "format": "visualization_msgs/Marker",
                "callback-name": "trajectoryCallback"
              },
              {
                "kind": "call",
                "callee": "trajectoryCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/points_map"
                  }
                },
                "format": "sensor_msgs/PointCloud2"
              },
              {
                "kind": "assignment",
                "variable": "swap_x_y",
                "value": {
                  "kind": "int-literal",
                  "literal": 1
                }
              },
              {
                "kind": "assignment",
                "variable": "argc",
                "value": {
                  "kind": "binary-expr",
                  "operator": "-",
                  "lhs": {
                    "kind": "variable-reference",
                    "variable": "argc",
                    "type": "integer",
                    "initialValue": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "int-literal",
                    "literal": 2
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "argv",
                "value": {
                  "kind": "binary-expr",
                  "operator": "+",
                  "lhs": {
                    "kind": "variable-reference",
                    "variable": "argv",
                    "type": "unsupported",
                    "initialValue": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "int-literal",
                    "literal": 2
                  }
                }
              },
              {
                "kind": "ros-init",
                "name": {
                  "kind": "string-literal",
                  "literal": "pcd_read"
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "sample_trajectory"
                  }
                },
                "format": "visualization_msgs/Marker",
                "callback-name": "trajectoryCallback"
              },
              {
                "kind": "call",
                "callee": "trajectoryCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/points_map"
                  }
                },
                "format": "sensor_msgs/PointCloud2"
              },
              {
                "kind": "if",
                "trueBranchBody": {
                  "kind": "compound",
                  "statements": [
                    {
                      "kind": "assignment",
                      "variable": "swap_x_y",
                      "value": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "kind": "if",
                "trueBranchBody": {
                  "kind": "compound",
                  "statements": []
                },
                "falseBranchBody": {
                  "kind": "compound",
                  "statements": [
                    {
                      "kind": "assignment",
                      "variable": "argc",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "-",
                        "lhs": {
                          "kind": "variable-reference",
                          "variable": "argc",
                          "type": "integer",
                          "initialValue": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 2
                        }
                      }
                    },
                    {
                      "kind": "assignment",
                      "variable": "argv",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "+",
                        "lhs": {
                          "kind": "variable-reference",
                          "variable": "argv",
                          "type": "unsupported",
                          "initialValue": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 2
                        }
                      }
                    }
                  ]
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              }
            ]
          }
        },
        {
          "name": "trajectoryCallback",
          "parameters": [],
          "body": {
            "kind": "compound",
            "statements": [
              {
                "kind": "assignment",
                "variable": "loaded",
                "value": {
                  "kind": "int-literal",
                  "literal": 1
                }
              },
              {
                "kind": "assignment",
                "variable": "sensor_msgs::PointCloud2_<std::allocator<void>>::width",
                "value": {
                  "kind": "binary-expr",
                  "operator": "+",
                  "lhs": {
                    "kind": "member-var-ref",
                    "variable": "sensor_msgs::PointCloud2_<std::allocator<void>>::width",
                    "type": "unsupported",
                    "initialValue": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "variable": "pcd",
                      "type": "unsupported",
                      "initialValue": {
                        "kind": "unknown"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "member-var-ref",
                    "variable": "sensor_msgs::PointCloud2_<std::allocator<void>>::width",
                    "type": "unsupported",
                    "initialValue": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "variable": "add",
                      "type": "unsupported",
                      "initialValue": {
                        "kind": "unknown"
                      }
                    }
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "sensor_msgs::PointCloud2_<std::allocator<void>>::row_step",
                "value": {
                  "kind": "binary-expr",
                  "operator": "+",
                  "lhs": {
                    "kind": "member-var-ref",
                    "variable": "sensor_msgs::PointCloud2_<std::allocator<void>>::row_step",
                    "type": "unsupported",
                    "initialValue": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "variable": "pcd",
                      "type": "unsupported",
                      "initialValue": {
                        "kind": "unknown"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "member-var-ref",
                    "variable": "sensor_msgs::PointCloud2_<std::allocator<void>>::row_step",
                    "type": "unsupported",
                    "initialValue": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "variable": "add",
                      "type": "unsupported",
                      "initialValue": {
                        "kind": "unknown"
                      }
                    }
                  }
                }
              },
              {
                "kind": "publish",
                "publisher": "pub",
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "!=",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "%",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 200
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "variable": "loaded",
                      "type": "integer",
                      "initialValue": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  }
                }
              },
              {
                "kind": "if",
                "trueBranchBody": {
                  "kind": "compound",
                  "statements": [
                    {
                      "kind": "if",
                      "trueBranchBody": {
                        "kind": "compound",
                        "statements": []
                      },
                      "falseBranchBody": {
                        "kind": "compound",
                        "statements": [
                          {
                            "kind": "assignment",
                            "variable": "loaded",
                            "value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        ]
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "kind": "compound",
                  "statements": [
                    {
                      "kind": "assignment",
                      "variable": "sensor_msgs::PointCloud2_<std::allocator<void>>::width",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "+",
                        "lhs": {
                          "kind": "member-var-ref",
                          "variable": "sensor_msgs::PointCloud2_<std::allocator<void>>::width",
                          "type": "unsupported",
                          "initialValue": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "variable": "pcd",
                            "type": "unsupported",
                            "initialValue": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "variable": "sensor_msgs::PointCloud2_<std::allocator<void>>::width",
                          "type": "unsupported",
                          "initialValue": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "variable": "add",
                            "type": "unsupported",
                            "initialValue": {
                              "kind": "unknown"
                            }
                          }
                        }
                      }
                    },
                    {
                      "kind": "assignment",
                      "variable": "sensor_msgs::PointCloud2_<std::allocator<void>>::row_step",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "+",
                        "lhs": {
                          "kind": "member-var-ref",
                          "variable": "sensor_msgs::PointCloud2_<std::allocator<void>>::row_step",
                          "type": "unsupported",
                          "initialValue": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "variable": "pcd",
                            "type": "unsupported",
                            "initialValue": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "variable": "sensor_msgs::PointCloud2_<std::allocator<void>>::row_step",
                          "type": "unsupported",
                          "initialValue": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "variable": "add",
                            "type": "unsupported",
                            "initialValue": {
                              "kind": "unknown"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "kind": "if",
                "trueBranchBody": {
                  "kind": "compound",
                  "statements": [
                    {
                      "kind": "publish",
                      "publisher": "pub",
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "!=",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "%",
                              "lhs": {
                                "kind": "unknown"
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 200
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "variable": "loaded",
                            "type": "integer",
                            "initialValue": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              }
            ]
          }
        }
      ]
    }
  }
}