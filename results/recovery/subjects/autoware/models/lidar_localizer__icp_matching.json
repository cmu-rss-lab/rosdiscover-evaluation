{
  "image": {
    "sha256": "95a3283df69676a0a64484edcf6b09f886abb9ab1dec292863aa0bffd2ce613b"
  },
  "node-name": "icp_matching",
  "package": {
    "name": "lidar_localizer",
    "path": "/home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer"
  },
  "sources": [
    "/home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp"
  ],
  "program": {
    "program": {
      "entrypoint": "main",
      "functions": [
        {
          "name": "param_callback",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:162:5, col:20>",
                "kind": "assignment",
                "variable": "init_pos_set",
                "unqualified_variable": "init_pos_set",
                "value": {
                  "kind": "int-literal",
                  "literal": 0
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "!=",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "_use_gnss",
                    "type": "integer",
                    "initial-value": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::init_pos_gnss",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "int-literal",
                      "literal": 0
                    },
                    "base": {
                      "kind": "unknown"
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:168:5, col:20>",
                "kind": "assignment",
                "variable": "init_pos_set",
                "unqualified_variable": "init_pos_set",
                "value": {
                  "kind": "int-literal",
                  "literal": 0
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "||",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "!=",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_gnss",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::init_pos_gnss",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      },
                                      "base": {
                                        "kind": "unknown"
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "_use_gnss",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "!=",
                                  "lhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "pose::x",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "variable-reference",
                                      "qualified_name": "initial_pose",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "float-literal",
                                      "literal": 0.0
                                    },
                                    "base": {
                                      "kind": "unknown"
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "!=",
                                  "lhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "pose::x",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "variable-reference",
                                      "qualified_name": "initial_pose",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "float-literal",
                                      "literal": 0.0
                                    },
                                    "base": {
                                      "kind": "unknown"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "!=",
                                  "lhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "pose::y",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "variable-reference",
                                      "qualified_name": "initial_pose",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "float-literal",
                                      "literal": 0.0
                                    },
                                    "base": {
                                      "kind": "unknown"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "!=",
                                  "lhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "pose::x",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "variable-reference",
                                      "qualified_name": "initial_pose",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "float-literal",
                                      "literal": 0.0
                                    },
                                    "base": {
                                      "kind": "unknown"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "!=",
                                  "lhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "pose::y",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "variable-reference",
                                      "qualified_name": "initial_pose",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "float-literal",
                                      "literal": 0.0
                                    },
                                    "base": {
                                      "kind": "unknown"
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "!=",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "pose::z",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "variable-reference",
                                    "qualified_name": "initial_pose",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::z",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "!=",
                                  "lhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "pose::x",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "variable-reference",
                                      "qualified_name": "initial_pose",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "float-literal",
                                      "literal": 0.0
                                    },
                                    "base": {
                                      "kind": "unknown"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "!=",
                                  "lhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "pose::y",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "variable-reference",
                                      "qualified_name": "initial_pose",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "float-literal",
                                      "literal": 0.0
                                    },
                                    "base": {
                                      "kind": "unknown"
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "!=",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "pose::z",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "variable-reference",
                                    "qualified_name": "initial_pose",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::z",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "!=",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "pose::roll",
                                "type": "float",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "variable-reference",
                                  "qualified_name": "initial_pose",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::roll",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                },
                                "base": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "!=",
                                  "lhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "pose::x",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "variable-reference",
                                      "qualified_name": "initial_pose",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "float-literal",
                                      "literal": 0.0
                                    },
                                    "base": {
                                      "kind": "unknown"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "!=",
                                  "lhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "pose::y",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "variable-reference",
                                      "qualified_name": "initial_pose",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "float-literal",
                                      "literal": 0.0
                                    },
                                    "base": {
                                      "kind": "unknown"
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "!=",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "pose::z",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "variable-reference",
                                    "qualified_name": "initial_pose",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::z",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "!=",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "pose::roll",
                                "type": "float",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "variable-reference",
                                  "qualified_name": "initial_pose",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::roll",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                },
                                "base": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "!=",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "pose::pitch",
                              "type": "float",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "qualified_name": "initial_pose",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "unknown"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::pitch",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "float-literal",
                                "literal": 0.0
                              },
                              "base": {
                                "kind": "unknown"
                              }
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_use_gnss",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "!=",
                                  "lhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "pose::x",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "variable-reference",
                                      "qualified_name": "initial_pose",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "float-literal",
                                      "literal": 0.0
                                    },
                                    "base": {
                                      "kind": "unknown"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "!=",
                                  "lhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "pose::y",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "variable-reference",
                                      "qualified_name": "initial_pose",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "float-literal",
                                      "literal": 0.0
                                    },
                                    "base": {
                                      "kind": "unknown"
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "!=",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "pose::z",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "variable-reference",
                                    "qualified_name": "initial_pose",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::z",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "!=",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "pose::roll",
                                "type": "float",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "variable-reference",
                                  "qualified_name": "initial_pose",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::roll",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                },
                                "base": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "!=",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "pose::pitch",
                              "type": "float",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "qualified_name": "initial_pose",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "unknown"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::pitch",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "float-literal",
                                "literal": 0.0
                              },
                              "base": {
                                "kind": "unknown"
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "!=",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "pose::yaw",
                            "type": "float",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "variable-reference",
                              "qualified_name": "initial_pose",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::yaw",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "float-literal",
                              "literal": 0.0
                            },
                            "base": {
                              "kind": "unknown"
                            }
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "||",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "!=",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_gnss",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::init_pos_gnss",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      },
                                      "base": {
                                        "kind": "unknown"
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "_use_gnss",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "!=",
                                  "lhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "pose::x",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "variable-reference",
                                      "qualified_name": "initial_pose",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "float-literal",
                                      "literal": 0.0
                                    },
                                    "base": {
                                      "kind": "unknown"
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "!=",
                                  "lhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "pose::x",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "variable-reference",
                                      "qualified_name": "initial_pose",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "float-literal",
                                      "literal": 0.0
                                    },
                                    "base": {
                                      "kind": "unknown"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "!=",
                                  "lhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "pose::y",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "variable-reference",
                                      "qualified_name": "initial_pose",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "float-literal",
                                      "literal": 0.0
                                    },
                                    "base": {
                                      "kind": "unknown"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "!=",
                                  "lhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "pose::x",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "variable-reference",
                                      "qualified_name": "initial_pose",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "float-literal",
                                      "literal": 0.0
                                    },
                                    "base": {
                                      "kind": "unknown"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "!=",
                                  "lhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "pose::y",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "variable-reference",
                                      "qualified_name": "initial_pose",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "float-literal",
                                      "literal": 0.0
                                    },
                                    "base": {
                                      "kind": "unknown"
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "!=",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "pose::z",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "variable-reference",
                                    "qualified_name": "initial_pose",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::z",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "!=",
                                  "lhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "pose::x",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "variable-reference",
                                      "qualified_name": "initial_pose",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "float-literal",
                                      "literal": 0.0
                                    },
                                    "base": {
                                      "kind": "unknown"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "!=",
                                  "lhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "pose::y",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "variable-reference",
                                      "qualified_name": "initial_pose",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "float-literal",
                                      "literal": 0.0
                                    },
                                    "base": {
                                      "kind": "unknown"
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "!=",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "pose::z",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "variable-reference",
                                    "qualified_name": "initial_pose",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::z",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "!=",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "pose::roll",
                                "type": "float",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "variable-reference",
                                  "qualified_name": "initial_pose",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::roll",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                },
                                "base": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "!=",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "pose::x",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "variable-reference",
                                    "qualified_name": "initial_pose",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "!=",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "pose::y",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "variable-reference",
                                    "qualified_name": "initial_pose",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "!=",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "pose::z",
                                "type": "float",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "variable-reference",
                                  "qualified_name": "initial_pose",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::z",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                },
                                "base": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "!=",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "pose::roll",
                              "type": "float",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "qualified_name": "initial_pose",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "unknown"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::roll",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "float-literal",
                                "literal": 0.0
                              },
                              "base": {
                                "kind": "unknown"
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "!=",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "pose::pitch",
                            "type": "float",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "variable-reference",
                              "qualified_name": "initial_pose",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::pitch",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "float-literal",
                              "literal": 0.0
                            },
                            "base": {
                              "kind": "unknown"
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "!=",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_gnss",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::init_pos_gnss",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      },
                                      "base": {
                                        "kind": "unknown"
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "_use_gnss",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "!=",
                                  "lhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "pose::x",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "variable-reference",
                                      "qualified_name": "initial_pose",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "float-literal",
                                      "literal": 0.0
                                    },
                                    "base": {
                                      "kind": "unknown"
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "!=",
                                  "lhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "pose::x",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "variable-reference",
                                      "qualified_name": "initial_pose",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "float-literal",
                                      "literal": 0.0
                                    },
                                    "base": {
                                      "kind": "unknown"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "!=",
                                  "lhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "pose::y",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "variable-reference",
                                      "qualified_name": "initial_pose",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "float-literal",
                                      "literal": 0.0
                                    },
                                    "base": {
                                      "kind": "unknown"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "!=",
                                  "lhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "pose::x",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "variable-reference",
                                      "qualified_name": "initial_pose",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "float-literal",
                                      "literal": 0.0
                                    },
                                    "base": {
                                      "kind": "unknown"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "!=",
                                  "lhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "pose::y",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "variable-reference",
                                      "qualified_name": "initial_pose",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "float-literal",
                                      "literal": 0.0
                                    },
                                    "base": {
                                      "kind": "unknown"
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "!=",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "pose::z",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "variable-reference",
                                    "qualified_name": "initial_pose",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::z",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "!=",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "pose::x",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "variable-reference",
                                    "qualified_name": "initial_pose",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "!=",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "pose::y",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "variable-reference",
                                    "qualified_name": "initial_pose",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "!=",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "pose::z",
                                "type": "float",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "variable-reference",
                                  "qualified_name": "initial_pose",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::z",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                },
                                "base": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "!=",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "pose::roll",
                              "type": "float",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "qualified_name": "initial_pose",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "unknown"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::roll",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "float-literal",
                                "literal": 0.0
                              },
                              "base": {
                                "kind": "unknown"
                              }
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "!=",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_gnss",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::init_pos_gnss",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      },
                                      "base": {
                                        "kind": "unknown"
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "_use_gnss",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "!=",
                                  "lhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "pose::x",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "variable-reference",
                                      "qualified_name": "initial_pose",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "float-literal",
                                      "literal": 0.0
                                    },
                                    "base": {
                                      "kind": "unknown"
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "!=",
                                  "lhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "pose::x",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "variable-reference",
                                      "qualified_name": "initial_pose",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "float-literal",
                                      "literal": 0.0
                                    },
                                    "base": {
                                      "kind": "unknown"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "!=",
                                  "lhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "pose::y",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "variable-reference",
                                      "qualified_name": "initial_pose",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "float-literal",
                                      "literal": 0.0
                                    },
                                    "base": {
                                      "kind": "unknown"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "!=",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "pose::x",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "variable-reference",
                                    "qualified_name": "initial_pose",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "!=",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "pose::y",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "variable-reference",
                                    "qualified_name": "initial_pose",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "!=",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "pose::z",
                                "type": "float",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "variable-reference",
                                  "qualified_name": "initial_pose",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::z",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                },
                                "base": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "!=",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_gnss",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::init_pos_gnss",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      },
                                      "base": {
                                        "kind": "unknown"
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "_use_gnss",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "!=",
                                  "lhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "pose::x",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "variable-reference",
                                      "qualified_name": "initial_pose",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "float-literal",
                                      "literal": 0.0
                                    },
                                    "base": {
                                      "kind": "unknown"
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "!=",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "pose::x",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "variable-reference",
                                    "qualified_name": "initial_pose",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "!=",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "pose::y",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "variable-reference",
                                    "qualified_name": "initial_pose",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "!=",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "_use_gnss",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::init_pos_gnss",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    },
                                    "base": {
                                      "kind": "unknown"
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "!=",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "pose::x",
                                "type": "float",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "variable-reference",
                                  "qualified_name": "initial_pose",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                },
                                "base": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:171:3, col:22>",
                "kind": "assignment",
                "variable": "_use_gnss",
                "unqualified_variable": "_use_gnss",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::init_pos_gnss",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:175:5, col:29>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_use_gnss",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_gnss",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:176:5, col:29>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_use_gnss",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_gnss",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:177:5, col:29>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::z",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_use_gnss",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_gnss",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:178:5, col:32>",
                "kind": "assignment",
                "variable": "pose::roll",
                "unqualified_variable": "roll",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::roll",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_use_gnss",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_gnss",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:179:5, col:33>",
                "kind": "assignment",
                "variable": "pose::pitch",
                "unqualified_variable": "pitch",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::pitch",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_use_gnss",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_gnss",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:180:5, col:31>",
                "kind": "assignment",
                "variable": "pose::yaw",
                "unqualified_variable": "yaw",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::yaw",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_use_gnss",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_gnss",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:183:5, col:37>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::x",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "initial_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_use_gnss",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_gnss",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:184:5, col:37>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::y",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "initial_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_use_gnss",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_gnss",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:185:5, col:37>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::z",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "initial_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_use_gnss",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_gnss",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:186:5, col:40>",
                "kind": "assignment",
                "variable": "pose::roll",
                "unqualified_variable": "roll",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::roll",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "initial_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_use_gnss",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_gnss",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:187:5, col:41>",
                "kind": "assignment",
                "variable": "pose::pitch",
                "unqualified_variable": "pitch",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::pitch",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "initial_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_use_gnss",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_gnss",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:188:5, col:39>",
                "kind": "assignment",
                "variable": "pose::yaw",
                "unqualified_variable": "yaw",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::yaw",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "initial_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_use_gnss",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_gnss",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:190:5, col:36>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::x",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "initial_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_use_gnss",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_gnss",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:191:5, col:36>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::y",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "initial_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_use_gnss",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_gnss",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:192:5, col:36>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::z",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "initial_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_use_gnss",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_gnss",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:193:5, col:39>",
                "kind": "assignment",
                "variable": "pose::roll",
                "unqualified_variable": "roll",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::roll",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "initial_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_use_gnss",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_gnss",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:194:5, col:40>",
                "kind": "assignment",
                "variable": "pose::pitch",
                "unqualified_variable": "pitch",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::pitch",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "initial_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_use_gnss",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_gnss",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:195:5, col:38>",
                "kind": "assignment",
                "variable": "pose::yaw",
                "unqualified_variable": "yaw",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::yaw",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "initial_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_use_gnss",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_gnss",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:197:5, col:35>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::x",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "initial_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_use_gnss",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_gnss",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:198:5, col:35>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::y",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "initial_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_use_gnss",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_gnss",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:199:5, col:35>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::z",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "initial_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_use_gnss",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_gnss",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:200:5, col:38>",
                "kind": "assignment",
                "variable": "pose::roll",
                "unqualified_variable": "roll",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::roll",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "initial_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_use_gnss",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_gnss",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:201:5, col:39>",
                "kind": "assignment",
                "variable": "pose::pitch",
                "unqualified_variable": "pitch",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::pitch",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "initial_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_use_gnss",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_gnss",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:202:5, col:37>",
                "kind": "assignment",
                "variable": "pose::yaw",
                "unqualified_variable": "yaw",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::yaw",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "initial_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_use_gnss",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_gnss",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:204:5, col:20>",
                "kind": "assignment",
                "variable": "init_pos_set",
                "unqualified_variable": "init_pos_set",
                "value": {
                  "kind": "int-literal",
                  "literal": 1
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_use_gnss",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_gnss",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:207:3, col:31>",
                "kind": "assignment",
                "variable": "maximum_iterations",
                "unqualified_variable": "maximum_iterations",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::maximum_iterations",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:208:3, col:35>",
                "kind": "assignment",
                "variable": "transformation_epsilon",
                "unqualified_variable": "transformation_epsilon",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::transformation_epsilon",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:209:3, col:40>",
                "kind": "assignment",
                "variable": "max_correspondence_distance",
                "unqualified_variable": "max_correspondence_distance",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::max_correspondence_distance",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:210:3, col:38>",
                "kind": "assignment",
                "variable": "euclidean_fitness_epsilon",
                "unqualified_variable": "euclidean_fitness_epsilon",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::euclidean_fitness_epsilon",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:211:3, col:47>",
                "kind": "assignment",
                "variable": "ransac_outlier_rejection_threshold",
                "unqualified_variable": "ransac_outlier_rejection_threshold",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::ransac_outlier_rejection_threshold",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:160:3, line:169:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:162:5, col:20>",
                      "kind": "assignment",
                      "variable": "init_pos_set",
                      "unqualified_variable": "init_pos_set",
                      "value": {
                        "kind": "int-literal",
                        "literal": 0
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "!=",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_use_gnss",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::init_pos_gnss",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          },
                          "base": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:162:5, col:20>",
                      "kind": "assignment",
                      "variable": "init_pos_set",
                      "unqualified_variable": "init_pos_set",
                      "value": {
                        "kind": "int-literal",
                        "literal": 0
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "!=",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_use_gnss",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::init_pos_gnss",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          },
                          "base": {
                            "kind": "unknown"
                          }
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:164:8, line:169:3>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:168:5, col:20>",
                            "kind": "assignment",
                            "variable": "init_pos_set",
                            "unqualified_variable": "init_pos_set",
                            "value": {
                              "kind": "int-literal",
                              "literal": 0
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "!=",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_use_gnss",
                                                  "type": "integer",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": 1
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "member-var-ref",
                                                  "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::init_pos_gnss",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": 0
                                                  },
                                                  "base": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "_use_gnss",
                                                "type": "integer",
                                                "initial-value": {
                                                  "kind": "int-literal",
                                                  "literal": 1
                                                }
                                              },
                                              "rhs": {
                                                "kind": "int-literal",
                                                "literal": 0
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::x",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::x",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::y",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "||",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::x",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::y",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "!=",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "pose::z",
                                              "type": "float",
                                              "initial-value": {
                                                "kind": "unknown"
                                              },
                                              "base": {
                                                "kind": "variable-reference",
                                                "qualified_name": "initial_pose",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::z",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "float-literal",
                                                "literal": 0.0
                                              },
                                              "base": {
                                                "kind": "unknown"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "||",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "||",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::x",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::y",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "!=",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "pose::z",
                                              "type": "float",
                                              "initial-value": {
                                                "kind": "unknown"
                                              },
                                              "base": {
                                                "kind": "variable-reference",
                                                "qualified_name": "initial_pose",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::z",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "float-literal",
                                                "literal": 0.0
                                              },
                                              "base": {
                                                "kind": "unknown"
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "!=",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "pose::roll",
                                            "type": "float",
                                            "initial-value": {
                                              "kind": "unknown"
                                            },
                                            "base": {
                                              "kind": "variable-reference",
                                              "qualified_name": "initial_pose",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "unknown"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::roll",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "float-literal",
                                              "literal": 0.0
                                            },
                                            "base": {
                                              "kind": "unknown"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "||",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "||",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "||",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::x",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::y",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "!=",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "pose::z",
                                              "type": "float",
                                              "initial-value": {
                                                "kind": "unknown"
                                              },
                                              "base": {
                                                "kind": "variable-reference",
                                                "qualified_name": "initial_pose",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::z",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "float-literal",
                                                "literal": 0.0
                                              },
                                              "base": {
                                                "kind": "unknown"
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "!=",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "pose::roll",
                                            "type": "float",
                                            "initial-value": {
                                              "kind": "unknown"
                                            },
                                            "base": {
                                              "kind": "variable-reference",
                                              "qualified_name": "initial_pose",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "unknown"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::roll",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "float-literal",
                                              "literal": 0.0
                                            },
                                            "base": {
                                              "kind": "unknown"
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "!=",
                                        "lhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "pose::pitch",
                                          "type": "float",
                                          "initial-value": {
                                            "kind": "unknown"
                                          },
                                          "base": {
                                            "kind": "variable-reference",
                                            "qualified_name": "initial_pose",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::pitch",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "float-literal",
                                            "literal": 0.0
                                          },
                                          "base": {
                                            "kind": "unknown"
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_gnss",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "||",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "||",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "||",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::x",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::y",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "!=",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "pose::z",
                                              "type": "float",
                                              "initial-value": {
                                                "kind": "unknown"
                                              },
                                              "base": {
                                                "kind": "variable-reference",
                                                "qualified_name": "initial_pose",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::z",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "float-literal",
                                                "literal": 0.0
                                              },
                                              "base": {
                                                "kind": "unknown"
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "!=",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "pose::roll",
                                            "type": "float",
                                            "initial-value": {
                                              "kind": "unknown"
                                            },
                                            "base": {
                                              "kind": "variable-reference",
                                              "qualified_name": "initial_pose",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "unknown"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::roll",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "float-literal",
                                              "literal": 0.0
                                            },
                                            "base": {
                                              "kind": "unknown"
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "!=",
                                        "lhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "pose::pitch",
                                          "type": "float",
                                          "initial-value": {
                                            "kind": "unknown"
                                          },
                                          "base": {
                                            "kind": "variable-reference",
                                            "qualified_name": "initial_pose",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::pitch",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "float-literal",
                                            "literal": 0.0
                                          },
                                          "base": {
                                            "kind": "unknown"
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "!=",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "pose::yaw",
                                        "type": "float",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "variable-reference",
                                          "qualified_name": "initial_pose",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::yaw",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "float-literal",
                                          "literal": 0.0
                                        },
                                        "base": {
                                          "kind": "unknown"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "!=",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_use_gnss",
                                                  "type": "integer",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": 1
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "member-var-ref",
                                                  "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::init_pos_gnss",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": 0
                                                  },
                                                  "base": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "_use_gnss",
                                                "type": "integer",
                                                "initial-value": {
                                                  "kind": "int-literal",
                                                  "literal": 1
                                                }
                                              },
                                              "rhs": {
                                                "kind": "int-literal",
                                                "literal": 0
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::x",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::x",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::y",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "||",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::x",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::y",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "!=",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "pose::z",
                                              "type": "float",
                                              "initial-value": {
                                                "kind": "unknown"
                                              },
                                              "base": {
                                                "kind": "variable-reference",
                                                "qualified_name": "initial_pose",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::z",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "float-literal",
                                                "literal": 0.0
                                              },
                                              "base": {
                                                "kind": "unknown"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "||",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "||",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::x",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::y",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "!=",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "pose::z",
                                              "type": "float",
                                              "initial-value": {
                                                "kind": "unknown"
                                              },
                                              "base": {
                                                "kind": "variable-reference",
                                                "qualified_name": "initial_pose",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::z",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "float-literal",
                                                "literal": 0.0
                                              },
                                              "base": {
                                                "kind": "unknown"
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "!=",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "pose::roll",
                                            "type": "float",
                                            "initial-value": {
                                              "kind": "unknown"
                                            },
                                            "base": {
                                              "kind": "variable-reference",
                                              "qualified_name": "initial_pose",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "unknown"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::roll",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "float-literal",
                                              "literal": 0.0
                                            },
                                            "base": {
                                              "kind": "unknown"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "||",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "||",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "||",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "!=",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "pose::x",
                                              "type": "float",
                                              "initial-value": {
                                                "kind": "unknown"
                                              },
                                              "base": {
                                                "kind": "variable-reference",
                                                "qualified_name": "initial_pose",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "float-literal",
                                                "literal": 0.0
                                              },
                                              "base": {
                                                "kind": "unknown"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "!=",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "pose::y",
                                              "type": "float",
                                              "initial-value": {
                                                "kind": "unknown"
                                              },
                                              "base": {
                                                "kind": "variable-reference",
                                                "qualified_name": "initial_pose",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "float-literal",
                                                "literal": 0.0
                                              },
                                              "base": {
                                                "kind": "unknown"
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "!=",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "pose::z",
                                            "type": "float",
                                            "initial-value": {
                                              "kind": "unknown"
                                            },
                                            "base": {
                                              "kind": "variable-reference",
                                              "qualified_name": "initial_pose",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "unknown"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::z",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "float-literal",
                                              "literal": 0.0
                                            },
                                            "base": {
                                              "kind": "unknown"
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "!=",
                                        "lhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "pose::roll",
                                          "type": "float",
                                          "initial-value": {
                                            "kind": "unknown"
                                          },
                                          "base": {
                                            "kind": "variable-reference",
                                            "qualified_name": "initial_pose",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::roll",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "float-literal",
                                            "literal": 0.0
                                          },
                                          "base": {
                                            "kind": "unknown"
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "!=",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "pose::pitch",
                                        "type": "float",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "variable-reference",
                                          "qualified_name": "initial_pose",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::pitch",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "float-literal",
                                          "literal": 0.0
                                        },
                                        "base": {
                                          "kind": "unknown"
                                        }
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "||",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "!=",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_use_gnss",
                                                  "type": "integer",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": 1
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "member-var-ref",
                                                  "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::init_pos_gnss",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": 0
                                                  },
                                                  "base": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "_use_gnss",
                                                "type": "integer",
                                                "initial-value": {
                                                  "kind": "int-literal",
                                                  "literal": 1
                                                }
                                              },
                                              "rhs": {
                                                "kind": "int-literal",
                                                "literal": 0
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::x",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::x",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::y",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "||",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::x",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::y",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "!=",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "pose::z",
                                              "type": "float",
                                              "initial-value": {
                                                "kind": "unknown"
                                              },
                                              "base": {
                                                "kind": "variable-reference",
                                                "qualified_name": "initial_pose",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::z",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "float-literal",
                                                "literal": 0.0
                                              },
                                              "base": {
                                                "kind": "unknown"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "||",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "||",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "||",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "!=",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "pose::x",
                                              "type": "float",
                                              "initial-value": {
                                                "kind": "unknown"
                                              },
                                              "base": {
                                                "kind": "variable-reference",
                                                "qualified_name": "initial_pose",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "float-literal",
                                                "literal": 0.0
                                              },
                                              "base": {
                                                "kind": "unknown"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "!=",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "pose::y",
                                              "type": "float",
                                              "initial-value": {
                                                "kind": "unknown"
                                              },
                                              "base": {
                                                "kind": "variable-reference",
                                                "qualified_name": "initial_pose",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "float-literal",
                                                "literal": 0.0
                                              },
                                              "base": {
                                                "kind": "unknown"
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "!=",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "pose::z",
                                            "type": "float",
                                            "initial-value": {
                                              "kind": "unknown"
                                            },
                                            "base": {
                                              "kind": "variable-reference",
                                              "qualified_name": "initial_pose",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "unknown"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::z",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "float-literal",
                                              "literal": 0.0
                                            },
                                            "base": {
                                              "kind": "unknown"
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "!=",
                                        "lhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "pose::roll",
                                          "type": "float",
                                          "initial-value": {
                                            "kind": "unknown"
                                          },
                                          "base": {
                                            "kind": "variable-reference",
                                            "qualified_name": "initial_pose",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::roll",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "float-literal",
                                            "literal": 0.0
                                          },
                                          "base": {
                                            "kind": "unknown"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "!=",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_use_gnss",
                                                  "type": "integer",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": 1
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "member-var-ref",
                                                  "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::init_pos_gnss",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": 0
                                                  },
                                                  "base": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "_use_gnss",
                                                "type": "integer",
                                                "initial-value": {
                                                  "kind": "int-literal",
                                                  "literal": 1
                                                }
                                              },
                                              "rhs": {
                                                "kind": "int-literal",
                                                "literal": 0
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::x",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::x",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::y",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "||",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "||",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "!=",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "pose::x",
                                              "type": "float",
                                              "initial-value": {
                                                "kind": "unknown"
                                              },
                                              "base": {
                                                "kind": "variable-reference",
                                                "qualified_name": "initial_pose",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "float-literal",
                                                "literal": 0.0
                                              },
                                              "base": {
                                                "kind": "unknown"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "!=",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "pose::y",
                                              "type": "float",
                                              "initial-value": {
                                                "kind": "unknown"
                                              },
                                              "base": {
                                                "kind": "variable-reference",
                                                "qualified_name": "initial_pose",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "float-literal",
                                                "literal": 0.0
                                              },
                                              "base": {
                                                "kind": "unknown"
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "!=",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "pose::z",
                                            "type": "float",
                                            "initial-value": {
                                              "kind": "unknown"
                                            },
                                            "base": {
                                              "kind": "variable-reference",
                                              "qualified_name": "initial_pose",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "unknown"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::z",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "float-literal",
                                              "literal": 0.0
                                            },
                                            "base": {
                                              "kind": "unknown"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "||",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "!=",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_use_gnss",
                                                  "type": "integer",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": 1
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "member-var-ref",
                                                  "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::init_pos_gnss",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": 0
                                                  },
                                                  "base": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "_use_gnss",
                                                "type": "integer",
                                                "initial-value": {
                                                  "kind": "int-literal",
                                                  "literal": 1
                                                }
                                              },
                                              "rhs": {
                                                "kind": "int-literal",
                                                "literal": 0
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::x",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "||",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "!=",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "pose::x",
                                              "type": "float",
                                              "initial-value": {
                                                "kind": "unknown"
                                              },
                                              "base": {
                                                "kind": "variable-reference",
                                                "qualified_name": "initial_pose",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "float-literal",
                                                "literal": 0.0
                                              },
                                              "base": {
                                                "kind": "unknown"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "!=",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "pose::y",
                                              "type": "float",
                                              "initial-value": {
                                                "kind": "unknown"
                                              },
                                              "base": {
                                                "kind": "variable-reference",
                                                "qualified_name": "initial_pose",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "float-literal",
                                                "literal": 0.0
                                              },
                                              "base": {
                                                "kind": "unknown"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "_use_gnss",
                                                "type": "integer",
                                                "initial-value": {
                                                  "kind": "int-literal",
                                                  "literal": 1
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::init_pos_gnss",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "int-literal",
                                                  "literal": 0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "_use_gnss",
                                              "type": "integer",
                                              "initial-value": {
                                                "kind": "int-literal",
                                                "literal": 1
                                              }
                                            },
                                            "rhs": {
                                              "kind": "int-literal",
                                              "literal": 0
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "!=",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "pose::x",
                                            "type": "float",
                                            "initial-value": {
                                              "kind": "unknown"
                                            },
                                            "base": {
                                              "kind": "variable-reference",
                                              "qualified_name": "initial_pose",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "unknown"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "float-literal",
                                              "literal": 0.0
                                            },
                                            "base": {
                                              "kind": "unknown"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:168:5, col:20>",
                            "kind": "assignment",
                            "variable": "init_pos_set",
                            "unqualified_variable": "init_pos_set",
                            "value": {
                              "kind": "int-literal",
                              "literal": 0
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "!=",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_use_gnss",
                                                  "type": "integer",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": 1
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "member-var-ref",
                                                  "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::init_pos_gnss",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": 0
                                                  },
                                                  "base": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "_use_gnss",
                                                "type": "integer",
                                                "initial-value": {
                                                  "kind": "int-literal",
                                                  "literal": 1
                                                }
                                              },
                                              "rhs": {
                                                "kind": "int-literal",
                                                "literal": 0
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::x",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::x",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::y",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "||",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::x",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::y",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "!=",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "pose::z",
                                              "type": "float",
                                              "initial-value": {
                                                "kind": "unknown"
                                              },
                                              "base": {
                                                "kind": "variable-reference",
                                                "qualified_name": "initial_pose",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::z",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "float-literal",
                                                "literal": 0.0
                                              },
                                              "base": {
                                                "kind": "unknown"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "||",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "||",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::x",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::y",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "!=",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "pose::z",
                                              "type": "float",
                                              "initial-value": {
                                                "kind": "unknown"
                                              },
                                              "base": {
                                                "kind": "variable-reference",
                                                "qualified_name": "initial_pose",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::z",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "float-literal",
                                                "literal": 0.0
                                              },
                                              "base": {
                                                "kind": "unknown"
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "!=",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "pose::roll",
                                            "type": "float",
                                            "initial-value": {
                                              "kind": "unknown"
                                            },
                                            "base": {
                                              "kind": "variable-reference",
                                              "qualified_name": "initial_pose",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "unknown"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::roll",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "float-literal",
                                              "literal": 0.0
                                            },
                                            "base": {
                                              "kind": "unknown"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "||",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "||",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "||",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::x",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::y",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "!=",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "pose::z",
                                              "type": "float",
                                              "initial-value": {
                                                "kind": "unknown"
                                              },
                                              "base": {
                                                "kind": "variable-reference",
                                                "qualified_name": "initial_pose",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::z",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "float-literal",
                                                "literal": 0.0
                                              },
                                              "base": {
                                                "kind": "unknown"
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "!=",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "pose::roll",
                                            "type": "float",
                                            "initial-value": {
                                              "kind": "unknown"
                                            },
                                            "base": {
                                              "kind": "variable-reference",
                                              "qualified_name": "initial_pose",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "unknown"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::roll",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "float-literal",
                                              "literal": 0.0
                                            },
                                            "base": {
                                              "kind": "unknown"
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "!=",
                                        "lhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "pose::pitch",
                                          "type": "float",
                                          "initial-value": {
                                            "kind": "unknown"
                                          },
                                          "base": {
                                            "kind": "variable-reference",
                                            "qualified_name": "initial_pose",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::pitch",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "float-literal",
                                            "literal": 0.0
                                          },
                                          "base": {
                                            "kind": "unknown"
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_gnss",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "||",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "||",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "||",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::x",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::y",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "!=",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "pose::z",
                                              "type": "float",
                                              "initial-value": {
                                                "kind": "unknown"
                                              },
                                              "base": {
                                                "kind": "variable-reference",
                                                "qualified_name": "initial_pose",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::z",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "float-literal",
                                                "literal": 0.0
                                              },
                                              "base": {
                                                "kind": "unknown"
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "!=",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "pose::roll",
                                            "type": "float",
                                            "initial-value": {
                                              "kind": "unknown"
                                            },
                                            "base": {
                                              "kind": "variable-reference",
                                              "qualified_name": "initial_pose",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "unknown"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::roll",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "float-literal",
                                              "literal": 0.0
                                            },
                                            "base": {
                                              "kind": "unknown"
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "!=",
                                        "lhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "pose::pitch",
                                          "type": "float",
                                          "initial-value": {
                                            "kind": "unknown"
                                          },
                                          "base": {
                                            "kind": "variable-reference",
                                            "qualified_name": "initial_pose",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::pitch",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "float-literal",
                                            "literal": 0.0
                                          },
                                          "base": {
                                            "kind": "unknown"
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "!=",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "pose::yaw",
                                        "type": "float",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "variable-reference",
                                          "qualified_name": "initial_pose",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::yaw",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "float-literal",
                                          "literal": 0.0
                                        },
                                        "base": {
                                          "kind": "unknown"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "!=",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_use_gnss",
                                                  "type": "integer",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": 1
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "member-var-ref",
                                                  "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::init_pos_gnss",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": 0
                                                  },
                                                  "base": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "_use_gnss",
                                                "type": "integer",
                                                "initial-value": {
                                                  "kind": "int-literal",
                                                  "literal": 1
                                                }
                                              },
                                              "rhs": {
                                                "kind": "int-literal",
                                                "literal": 0
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::x",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::x",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::y",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "||",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::x",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::y",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "!=",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "pose::z",
                                              "type": "float",
                                              "initial-value": {
                                                "kind": "unknown"
                                              },
                                              "base": {
                                                "kind": "variable-reference",
                                                "qualified_name": "initial_pose",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::z",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "float-literal",
                                                "literal": 0.0
                                              },
                                              "base": {
                                                "kind": "unknown"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "||",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "||",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::x",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::y",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "!=",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "pose::z",
                                              "type": "float",
                                              "initial-value": {
                                                "kind": "unknown"
                                              },
                                              "base": {
                                                "kind": "variable-reference",
                                                "qualified_name": "initial_pose",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::z",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "float-literal",
                                                "literal": 0.0
                                              },
                                              "base": {
                                                "kind": "unknown"
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "!=",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "pose::roll",
                                            "type": "float",
                                            "initial-value": {
                                              "kind": "unknown"
                                            },
                                            "base": {
                                              "kind": "variable-reference",
                                              "qualified_name": "initial_pose",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "unknown"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::roll",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "float-literal",
                                              "literal": 0.0
                                            },
                                            "base": {
                                              "kind": "unknown"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "||",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "||",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "||",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "!=",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "pose::x",
                                              "type": "float",
                                              "initial-value": {
                                                "kind": "unknown"
                                              },
                                              "base": {
                                                "kind": "variable-reference",
                                                "qualified_name": "initial_pose",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "float-literal",
                                                "literal": 0.0
                                              },
                                              "base": {
                                                "kind": "unknown"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "!=",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "pose::y",
                                              "type": "float",
                                              "initial-value": {
                                                "kind": "unknown"
                                              },
                                              "base": {
                                                "kind": "variable-reference",
                                                "qualified_name": "initial_pose",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "float-literal",
                                                "literal": 0.0
                                              },
                                              "base": {
                                                "kind": "unknown"
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "!=",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "pose::z",
                                            "type": "float",
                                            "initial-value": {
                                              "kind": "unknown"
                                            },
                                            "base": {
                                              "kind": "variable-reference",
                                              "qualified_name": "initial_pose",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "unknown"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::z",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "float-literal",
                                              "literal": 0.0
                                            },
                                            "base": {
                                              "kind": "unknown"
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "!=",
                                        "lhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "pose::roll",
                                          "type": "float",
                                          "initial-value": {
                                            "kind": "unknown"
                                          },
                                          "base": {
                                            "kind": "variable-reference",
                                            "qualified_name": "initial_pose",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::roll",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "float-literal",
                                            "literal": 0.0
                                          },
                                          "base": {
                                            "kind": "unknown"
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "!=",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "pose::pitch",
                                        "type": "float",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "variable-reference",
                                          "qualified_name": "initial_pose",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::pitch",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "float-literal",
                                          "literal": 0.0
                                        },
                                        "base": {
                                          "kind": "unknown"
                                        }
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "||",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "!=",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_use_gnss",
                                                  "type": "integer",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": 1
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "member-var-ref",
                                                  "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::init_pos_gnss",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": 0
                                                  },
                                                  "base": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "_use_gnss",
                                                "type": "integer",
                                                "initial-value": {
                                                  "kind": "int-literal",
                                                  "literal": 1
                                                }
                                              },
                                              "rhs": {
                                                "kind": "int-literal",
                                                "literal": 0
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::x",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::x",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::y",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "||",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::x",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::y",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "!=",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "pose::z",
                                              "type": "float",
                                              "initial-value": {
                                                "kind": "unknown"
                                              },
                                              "base": {
                                                "kind": "variable-reference",
                                                "qualified_name": "initial_pose",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::z",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "float-literal",
                                                "literal": 0.0
                                              },
                                              "base": {
                                                "kind": "unknown"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "||",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "||",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "||",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "!=",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "pose::x",
                                              "type": "float",
                                              "initial-value": {
                                                "kind": "unknown"
                                              },
                                              "base": {
                                                "kind": "variable-reference",
                                                "qualified_name": "initial_pose",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "float-literal",
                                                "literal": 0.0
                                              },
                                              "base": {
                                                "kind": "unknown"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "!=",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "pose::y",
                                              "type": "float",
                                              "initial-value": {
                                                "kind": "unknown"
                                              },
                                              "base": {
                                                "kind": "variable-reference",
                                                "qualified_name": "initial_pose",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "float-literal",
                                                "literal": 0.0
                                              },
                                              "base": {
                                                "kind": "unknown"
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "!=",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "pose::z",
                                            "type": "float",
                                            "initial-value": {
                                              "kind": "unknown"
                                            },
                                            "base": {
                                              "kind": "variable-reference",
                                              "qualified_name": "initial_pose",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "unknown"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::z",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "float-literal",
                                              "literal": 0.0
                                            },
                                            "base": {
                                              "kind": "unknown"
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "!=",
                                        "lhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "pose::roll",
                                          "type": "float",
                                          "initial-value": {
                                            "kind": "unknown"
                                          },
                                          "base": {
                                            "kind": "variable-reference",
                                            "qualified_name": "initial_pose",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::roll",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "float-literal",
                                            "literal": 0.0
                                          },
                                          "base": {
                                            "kind": "unknown"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "!=",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_use_gnss",
                                                  "type": "integer",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": 1
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "member-var-ref",
                                                  "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::init_pos_gnss",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": 0
                                                  },
                                                  "base": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "_use_gnss",
                                                "type": "integer",
                                                "initial-value": {
                                                  "kind": "int-literal",
                                                  "literal": 1
                                                }
                                              },
                                              "rhs": {
                                                "kind": "int-literal",
                                                "literal": 0
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::x",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::x",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::y",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "||",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "||",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "!=",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "pose::x",
                                              "type": "float",
                                              "initial-value": {
                                                "kind": "unknown"
                                              },
                                              "base": {
                                                "kind": "variable-reference",
                                                "qualified_name": "initial_pose",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "float-literal",
                                                "literal": 0.0
                                              },
                                              "base": {
                                                "kind": "unknown"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "!=",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "pose::y",
                                              "type": "float",
                                              "initial-value": {
                                                "kind": "unknown"
                                              },
                                              "base": {
                                                "kind": "variable-reference",
                                                "qualified_name": "initial_pose",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "float-literal",
                                                "literal": 0.0
                                              },
                                              "base": {
                                                "kind": "unknown"
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "!=",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "pose::z",
                                            "type": "float",
                                            "initial-value": {
                                              "kind": "unknown"
                                            },
                                            "base": {
                                              "kind": "variable-reference",
                                              "qualified_name": "initial_pose",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "unknown"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::z",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "float-literal",
                                              "literal": 0.0
                                            },
                                            "base": {
                                              "kind": "unknown"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "||",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "!=",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_use_gnss",
                                                  "type": "integer",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": 1
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "member-var-ref",
                                                  "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::init_pos_gnss",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": 0
                                                  },
                                                  "base": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "_use_gnss",
                                                "type": "integer",
                                                "initial-value": {
                                                  "kind": "int-literal",
                                                  "literal": 1
                                                }
                                              },
                                              "rhs": {
                                                "kind": "int-literal",
                                                "literal": 0
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "pose::x",
                                                "type": "float",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                },
                                                "base": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "initial_pose",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "float-literal",
                                                  "literal": 0.0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "||",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "!=",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "pose::x",
                                              "type": "float",
                                              "initial-value": {
                                                "kind": "unknown"
                                              },
                                              "base": {
                                                "kind": "variable-reference",
                                                "qualified_name": "initial_pose",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "float-literal",
                                                "literal": 0.0
                                              },
                                              "base": {
                                                "kind": "unknown"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "!=",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "pose::y",
                                              "type": "float",
                                              "initial-value": {
                                                "kind": "unknown"
                                              },
                                              "base": {
                                                "kind": "variable-reference",
                                                "qualified_name": "initial_pose",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "float-literal",
                                                "literal": 0.0
                                              },
                                              "base": {
                                                "kind": "unknown"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "_use_gnss",
                                                "type": "integer",
                                                "initial-value": {
                                                  "kind": "int-literal",
                                                  "literal": 1
                                                }
                                              },
                                              "rhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::init_pos_gnss",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "int-literal",
                                                  "literal": 0
                                                },
                                                "base": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "_use_gnss",
                                              "type": "integer",
                                              "initial-value": {
                                                "kind": "int-literal",
                                                "literal": 1
                                              }
                                            },
                                            "rhs": {
                                              "kind": "int-literal",
                                              "literal": 0
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "!=",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "pose::x",
                                            "type": "float",
                                            "initial-value": {
                                              "kind": "unknown"
                                            },
                                            "base": {
                                              "kind": "variable-reference",
                                              "qualified_name": "initial_pose",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "unknown"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "float-literal",
                                              "literal": 0.0
                                            },
                                            "base": {
                                              "kind": "unknown"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": []
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  ]
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:171:3, col:22>",
                "kind": "assignment",
                "variable": "_use_gnss",
                "unqualified_variable": "_use_gnss",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::init_pos_gnss",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:173:3, line:205:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:175:5, col:29>",
                      "kind": "assignment",
                      "variable": "pose::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        },
                        "base": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:176:5, col:29>",
                      "kind": "assignment",
                      "variable": "pose::y",
                      "unqualified_variable": "y",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        },
                        "base": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:177:5, col:29>",
                      "kind": "assignment",
                      "variable": "pose::z",
                      "unqualified_variable": "z",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::z",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        },
                        "base": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:178:5, col:32>",
                      "kind": "assignment",
                      "variable": "pose::roll",
                      "unqualified_variable": "roll",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::roll",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        },
                        "base": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:179:5, col:33>",
                      "kind": "assignment",
                      "variable": "pose::pitch",
                      "unqualified_variable": "pitch",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::pitch",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        },
                        "base": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:180:5, col:31>",
                      "kind": "assignment",
                      "variable": "pose::yaw",
                      "unqualified_variable": "yaw",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::yaw",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        },
                        "base": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:183:5, col:37>",
                      "kind": "assignment",
                      "variable": "pose::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::x",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "initial_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:184:5, col:37>",
                      "kind": "assignment",
                      "variable": "pose::y",
                      "unqualified_variable": "y",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::y",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "initial_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:185:5, col:37>",
                      "kind": "assignment",
                      "variable": "pose::z",
                      "unqualified_variable": "z",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::z",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "initial_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:186:5, col:40>",
                      "kind": "assignment",
                      "variable": "pose::roll",
                      "unqualified_variable": "roll",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::roll",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "initial_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:187:5, col:41>",
                      "kind": "assignment",
                      "variable": "pose::pitch",
                      "unqualified_variable": "pitch",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::pitch",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "initial_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:188:5, col:39>",
                      "kind": "assignment",
                      "variable": "pose::yaw",
                      "unqualified_variable": "yaw",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::yaw",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "initial_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:190:5, col:36>",
                      "kind": "assignment",
                      "variable": "pose::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::x",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "initial_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:191:5, col:36>",
                      "kind": "assignment",
                      "variable": "pose::y",
                      "unqualified_variable": "y",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::y",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "initial_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:192:5, col:36>",
                      "kind": "assignment",
                      "variable": "pose::z",
                      "unqualified_variable": "z",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::z",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "initial_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:193:5, col:39>",
                      "kind": "assignment",
                      "variable": "pose::roll",
                      "unqualified_variable": "roll",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::roll",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "initial_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:194:5, col:40>",
                      "kind": "assignment",
                      "variable": "pose::pitch",
                      "unqualified_variable": "pitch",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::pitch",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "initial_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:195:5, col:38>",
                      "kind": "assignment",
                      "variable": "pose::yaw",
                      "unqualified_variable": "yaw",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::yaw",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "initial_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:197:5, col:35>",
                      "kind": "assignment",
                      "variable": "pose::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::x",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "initial_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:198:5, col:35>",
                      "kind": "assignment",
                      "variable": "pose::y",
                      "unqualified_variable": "y",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::y",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "initial_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:199:5, col:35>",
                      "kind": "assignment",
                      "variable": "pose::z",
                      "unqualified_variable": "z",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::z",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "initial_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:200:5, col:38>",
                      "kind": "assignment",
                      "variable": "pose::roll",
                      "unqualified_variable": "roll",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::roll",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "initial_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:201:5, col:39>",
                      "kind": "assignment",
                      "variable": "pose::pitch",
                      "unqualified_variable": "pitch",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::pitch",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "initial_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:202:5, col:37>",
                      "kind": "assignment",
                      "variable": "pose::yaw",
                      "unqualified_variable": "yaw",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::yaw",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "initial_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:204:5, col:20>",
                      "kind": "assignment",
                      "variable": "init_pos_set",
                      "unqualified_variable": "init_pos_set",
                      "value": {
                        "kind": "int-literal",
                        "literal": 1
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:175:5, col:29>",
                      "kind": "assignment",
                      "variable": "pose::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::x",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        },
                        "base": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:176:5, col:29>",
                      "kind": "assignment",
                      "variable": "pose::y",
                      "unqualified_variable": "y",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::y",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        },
                        "base": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:177:5, col:29>",
                      "kind": "assignment",
                      "variable": "pose::z",
                      "unqualified_variable": "z",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::z",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        },
                        "base": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:178:5, col:32>",
                      "kind": "assignment",
                      "variable": "pose::roll",
                      "unqualified_variable": "roll",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::roll",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        },
                        "base": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:179:5, col:33>",
                      "kind": "assignment",
                      "variable": "pose::pitch",
                      "unqualified_variable": "pitch",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::pitch",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        },
                        "base": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:180:5, col:31>",
                      "kind": "assignment",
                      "variable": "pose::yaw",
                      "unqualified_variable": "yaw",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::yaw",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        },
                        "base": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:183:5, col:37>",
                      "kind": "assignment",
                      "variable": "pose::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::x",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "initial_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:184:5, col:37>",
                      "kind": "assignment",
                      "variable": "pose::y",
                      "unqualified_variable": "y",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::y",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "initial_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:185:5, col:37>",
                      "kind": "assignment",
                      "variable": "pose::z",
                      "unqualified_variable": "z",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::z",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "initial_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:186:5, col:40>",
                      "kind": "assignment",
                      "variable": "pose::roll",
                      "unqualified_variable": "roll",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::roll",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "initial_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:187:5, col:41>",
                      "kind": "assignment",
                      "variable": "pose::pitch",
                      "unqualified_variable": "pitch",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::pitch",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "initial_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:188:5, col:39>",
                      "kind": "assignment",
                      "variable": "pose::yaw",
                      "unqualified_variable": "yaw",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::yaw",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "initial_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:190:5, col:36>",
                      "kind": "assignment",
                      "variable": "pose::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::x",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "initial_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:191:5, col:36>",
                      "kind": "assignment",
                      "variable": "pose::y",
                      "unqualified_variable": "y",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::y",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "initial_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:192:5, col:36>",
                      "kind": "assignment",
                      "variable": "pose::z",
                      "unqualified_variable": "z",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::z",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "initial_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:193:5, col:39>",
                      "kind": "assignment",
                      "variable": "pose::roll",
                      "unqualified_variable": "roll",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::roll",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "initial_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:194:5, col:40>",
                      "kind": "assignment",
                      "variable": "pose::pitch",
                      "unqualified_variable": "pitch",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::pitch",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "initial_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:195:5, col:38>",
                      "kind": "assignment",
                      "variable": "pose::yaw",
                      "unqualified_variable": "yaw",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::yaw",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "initial_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:197:5, col:35>",
                      "kind": "assignment",
                      "variable": "pose::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::x",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "initial_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:198:5, col:35>",
                      "kind": "assignment",
                      "variable": "pose::y",
                      "unqualified_variable": "y",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::y",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "initial_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:199:5, col:35>",
                      "kind": "assignment",
                      "variable": "pose::z",
                      "unqualified_variable": "z",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::z",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "initial_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:200:5, col:38>",
                      "kind": "assignment",
                      "variable": "pose::roll",
                      "unqualified_variable": "roll",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::roll",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "initial_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:201:5, col:39>",
                      "kind": "assignment",
                      "variable": "pose::pitch",
                      "unqualified_variable": "pitch",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::pitch",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "initial_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:202:5, col:37>",
                      "kind": "assignment",
                      "variable": "pose::yaw",
                      "unqualified_variable": "yaw",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::yaw",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "initial_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:204:5, col:20>",
                      "kind": "assignment",
                      "variable": "init_pos_set",
                      "unqualified_variable": "init_pos_set",
                      "value": {
                        "kind": "int-literal",
                        "literal": 1
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:207:3, col:31>",
                "kind": "assignment",
                "variable": "maximum_iterations",
                "unqualified_variable": "maximum_iterations",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::maximum_iterations",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:208:3, col:35>",
                "kind": "assignment",
                "variable": "transformation_epsilon",
                "unqualified_variable": "transformation_epsilon",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::transformation_epsilon",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:209:3, col:40>",
                "kind": "assignment",
                "variable": "max_correspondence_distance",
                "unqualified_variable": "max_correspondence_distance",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::max_correspondence_distance",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:210:3, col:38>",
                "kind": "assignment",
                "variable": "euclidean_fitness_epsilon",
                "unqualified_variable": "euclidean_fitness_epsilon",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::euclidean_fitness_epsilon",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:211:3, col:47>",
                "kind": "assignment",
                "variable": "ransac_outlier_rejection_threshold",
                "unqualified_variable": "ransac_outlier_rejection_threshold",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigICP_<std::allocator<void>>::ransac_outlier_rejection_threshold",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        },
        {
          "name": "points_callback",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:313:5, col:53>",
                "kind": "assignment",
                "variable": "matching_start",
                "unqualified_variable": "matching_start",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:322:5, col:39>",
                "kind": "assignment",
                "variable": "current_scan_time",
                "unqualified_variable": "current_scan_time",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "std_msgs::Header_<std::allocator<void>>::stamp",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "qualified_name": "sensor_msgs::PointCloud2_<std::allocator<void>>::header",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:338:5, col:40>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "binary-expr",
                  "operator": "+",
                  "lhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "pose::x",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "previous_pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "offset_x",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:339:5, col:40>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "binary-expr",
                  "operator": "+",
                  "lhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "pose::y",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "previous_pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "offset_y",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:340:5, col:40>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "binary-expr",
                  "operator": "+",
                  "lhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "pose::z",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "previous_pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "offset_z",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:341:5, col:39>",
                "kind": "assignment",
                "variable": "pose::roll",
                "unqualified_variable": "roll",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::roll",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "previous_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:342:5, col:40>",
                "kind": "assignment",
                "variable": "pose::pitch",
                "unqualified_variable": "pitch",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::pitch",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "previous_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:343:5, col:44>",
                "kind": "assignment",
                "variable": "pose::yaw",
                "unqualified_variable": "yaw",
                "value": {
                  "kind": "binary-expr",
                  "operator": "+",
                  "lhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "pose::yaw",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "previous_pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "offset_yaw",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:359:5, col:50>",
                "kind": "assignment",
                "variable": "align_start",
                "unqualified_variable": "align_start",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:361:5, col:48>",
                "kind": "assignment",
                "variable": "align_end",
                "unqualified_variable": "align_end",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:362:5, col:107>",
                "kind": "assignment",
                "variable": "align_time",
                "unqualified_variable": "align_time",
                "value": {
                  "kind": "binary-expr",
                  "operator": "/",
                  "lhs": {
                    "kind": "unknown"
                  },
                  "rhs": {
                    "kind": "float-literal",
                    "literal": 1000.0
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:364:5, col:36>",
                "kind": "assignment",
                "variable": "t",
                "unqualified_variable": "t",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:365:5, col:14>",
                "kind": "assignment",
                "variable": "t2",
                "unqualified_variable": "t2",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:367:5, col:60>",
                "kind": "assignment",
                "variable": "getFitnessScore_start",
                "unqualified_variable": "getFitnessScore_start",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:368:5, col:41>",
                "kind": "assignment",
                "variable": "fitness_score",
                "unqualified_variable": "fitness_score",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:369:5, col:58>",
                "kind": "assignment",
                "variable": "getFitnessScore_end",
                "unqualified_variable": "getFitnessScore_end",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:370:5, col:137>",
                "kind": "assignment",
                "variable": "getFitnessScore_time",
                "unqualified_variable": "getFitnessScore_time",
                "value": {
                  "kind": "binary-expr",
                  "operator": "/",
                  "lhs": {
                    "kind": "unknown"
                  },
                  "rhs": {
                    "kind": "float-literal",
                    "literal": 1000.0
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:378:5, col:30>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:379:5, col:30>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:380:5, col:30>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:389:5, col:25>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:390:5, col:25>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:391:5, col:25>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:395:5, line:397:92>",
                "kind": "assignment",
                "variable": "predict_pose_error",
                "unqualified_variable": "predict_pose_error",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:401:7, col:26>",
                "kind": "assignment",
                "variable": "use_predict_pose",
                "unqualified_variable": "use_predict_pose",
                "value": {
                  "kind": "int-literal",
                  "literal": 0
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "map_loaded",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "<=",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "predict_pose_error",
                      "type": "float",
                      "initial-value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      }
                    },
                    "rhs": {
                      "kind": "float-literal",
                      "literal": 0.5
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:405:7, col:26>",
                "kind": "assignment",
                "variable": "use_predict_pose",
                "unqualified_variable": "use_predict_pose",
                "value": {
                  "kind": "int-literal",
                  "literal": 1
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "map_loaded",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "<=",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "predict_pose_error",
                        "type": "float",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        }
                      },
                      "rhs": {
                        "kind": "float-literal",
                        "literal": 0.5
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:407:5, col:24>",
                "kind": "assignment",
                "variable": "use_predict_pose",
                "unqualified_variable": "use_predict_pose",
                "value": {
                  "kind": "int-literal",
                  "literal": 0
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:411:7, col:33>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::x",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "icp_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "map_loaded",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "use_predict_pose",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:412:7, col:33>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::y",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "icp_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "map_loaded",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "use_predict_pose",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:413:7, col:33>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::z",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "icp_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "map_loaded",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "use_predict_pose",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:414:7, col:36>",
                "kind": "assignment",
                "variable": "pose::roll",
                "unqualified_variable": "roll",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::roll",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "icp_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "map_loaded",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "use_predict_pose",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:415:7, col:37>",
                "kind": "assignment",
                "variable": "pose::pitch",
                "unqualified_variable": "pitch",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::pitch",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "icp_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "map_loaded",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "use_predict_pose",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:416:7, col:35>",
                "kind": "assignment",
                "variable": "pose::yaw",
                "unqualified_variable": "yaw",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::yaw",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "icp_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "map_loaded",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "use_predict_pose",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:420:7, col:37>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::x",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "predict_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "map_loaded",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "use_predict_pose",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:421:7, col:37>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::y",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "predict_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "map_loaded",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "use_predict_pose",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:422:7, col:37>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::z",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "predict_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "map_loaded",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "use_predict_pose",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:423:7, col:40>",
                "kind": "assignment",
                "variable": "pose::roll",
                "unqualified_variable": "roll",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::roll",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "predict_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "map_loaded",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "use_predict_pose",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:424:7, col:41>",
                "kind": "assignment",
                "variable": "pose::pitch",
                "unqualified_variable": "pitch",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::pitch",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "predict_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "map_loaded",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "use_predict_pose",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:425:7, col:39>",
                "kind": "assignment",
                "variable": "pose::yaw",
                "unqualified_variable": "yaw",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::yaw",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "predict_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "map_loaded",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "use_predict_pose",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:429:5, col:41>",
                "kind": "assignment",
                "variable": "scan_duration",
                "unqualified_variable": "scan_duration",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:431:5, col:45>",
                "kind": "assignment",
                "variable": "diff_x",
                "unqualified_variable": "diff_x",
                "value": {
                  "kind": "binary-expr",
                  "operator": "-",
                  "lhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "pose::x",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "current_pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "pose::x",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "previous_pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:432:5, col:45>",
                "kind": "assignment",
                "variable": "diff_y",
                "unqualified_variable": "diff_y",
                "value": {
                  "kind": "binary-expr",
                  "operator": "-",
                  "lhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "pose::y",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "current_pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "pose::y",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "previous_pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:433:5, col:45>",
                "kind": "assignment",
                "variable": "diff_z",
                "unqualified_variable": "diff_z",
                "value": {
                  "kind": "binary-expr",
                  "operator": "-",
                  "lhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "pose::z",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "current_pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "pose::z",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "previous_pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:434:5, col:49>",
                "kind": "assignment",
                "variable": "diff_yaw",
                "unqualified_variable": "diff_yaw",
                "value": {
                  "kind": "binary-expr",
                  "operator": "-",
                  "lhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "pose::yaw",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "current_pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "pose::yaw",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "previous_pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:435:5, col:68>",
                "kind": "assignment",
                "variable": "diff",
                "unqualified_variable": "diff",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:437:5, col:31>",
                "kind": "assignment",
                "variable": "current_velocity",
                "unqualified_variable": "current_velocity",
                "value": {
                  "kind": "binary-expr",
                  "operator": "/",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "diff",
                    "type": "float",
                    "initial-value": {
                      "kind": "float-literal",
                      "literal": 0.0
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "secs",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:438:5, col:35>",
                "kind": "assignment",
                "variable": "current_velocity_x",
                "unqualified_variable": "current_velocity_x",
                "value": {
                  "kind": "binary-expr",
                  "operator": "/",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "diff_x",
                    "type": "float",
                    "initial-value": {
                      "kind": "float-literal",
                      "literal": 0.0
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "secs",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:439:5, col:35>",
                "kind": "assignment",
                "variable": "current_velocity_y",
                "unqualified_variable": "current_velocity_y",
                "value": {
                  "kind": "binary-expr",
                  "operator": "/",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "diff_y",
                    "type": "float",
                    "initial-value": {
                      "kind": "float-literal",
                      "literal": 0.0
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "secs",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:440:5, col:35>",
                "kind": "assignment",
                "variable": "current_velocity_z",
                "unqualified_variable": "current_velocity_z",
                "value": {
                  "kind": "binary-expr",
                  "operator": "/",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "diff_z",
                    "type": "float",
                    "initial-value": {
                      "kind": "float-literal",
                      "literal": 0.0
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "secs",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:441:5, col:35>",
                "kind": "assignment",
                "variable": "angular_velocity",
                "unqualified_variable": "angular_velocity",
                "value": {
                  "kind": "binary-expr",
                  "operator": "/",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "diff_yaw",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "secs",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:443:5, col:101>",
                "kind": "assignment",
                "variable": "current_velocity_smooth",
                "unqualified_variable": "current_velocity_smooth",
                "value": {
                  "kind": "binary-expr",
                  "operator": "/",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "+",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "+",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "current_velocity",
                        "type": "float",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        }
                      },
                      "rhs": {
                        "kind": "variable-reference",
                        "qualified_name": "previous_velocity",
                        "type": "float",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        }
                      }
                    },
                    "rhs": {
                      "kind": "variable-reference",
                      "qualified_name": "previous_previous_velocity",
                      "type": "float",
                      "initial-value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      }
                    }
                  },
                  "rhs": {
                    "kind": "float-literal",
                    "literal": 3.0
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:446:7, col:33>",
                "kind": "assignment",
                "variable": "current_velocity_smooth",
                "unqualified_variable": "current_velocity_smooth",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "map_loaded",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "<",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "current_velocity_smooth",
                      "type": "float",
                      "initial-value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      }
                    },
                    "rhs": {
                      "kind": "float-literal",
                      "literal": 0.2
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:449:5, col:62>",
                "kind": "assignment",
                "variable": "current_accel",
                "unqualified_variable": "current_accel",
                "value": {
                  "kind": "binary-expr",
                  "operator": "/",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "-",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "current_velocity",
                      "type": "float",
                      "initial-value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      }
                    },
                    "rhs": {
                      "kind": "variable-reference",
                      "qualified_name": "previous_velocity",
                      "type": "float",
                      "initial-value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      }
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "secs",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:450:5, col:68>",
                "kind": "assignment",
                "variable": "current_accel_x",
                "unqualified_variable": "current_accel_x",
                "value": {
                  "kind": "binary-expr",
                  "operator": "/",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "-",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "current_velocity_x",
                      "type": "float",
                      "initial-value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      }
                    },
                    "rhs": {
                      "kind": "variable-reference",
                      "qualified_name": "previous_velocity_x",
                      "type": "float",
                      "initial-value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      }
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "secs",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:451:5, col:68>",
                "kind": "assignment",
                "variable": "current_accel_y",
                "unqualified_variable": "current_accel_y",
                "value": {
                  "kind": "binary-expr",
                  "operator": "/",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "-",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "current_velocity_y",
                      "type": "float",
                      "initial-value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      }
                    },
                    "rhs": {
                      "kind": "variable-reference",
                      "qualified_name": "previous_velocity_y",
                      "type": "float",
                      "initial-value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      }
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "secs",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:452:5, col:68>",
                "kind": "assignment",
                "variable": "current_accel_z",
                "unqualified_variable": "current_accel_z",
                "value": {
                  "kind": "binary-expr",
                  "operator": "/",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "-",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "current_velocity_z",
                      "type": "float",
                      "initial-value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      }
                    },
                    "rhs": {
                      "kind": "variable-reference",
                      "qualified_name": "previous_velocity_z",
                      "type": "float",
                      "initial-value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      }
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "secs",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:454:5, col:30>",
                "kind": "assignment",
                "variable": "std_msgs::Float32_<std::allocator<void>>::data",
                "unqualified_variable": "data",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "current_velocity",
                  "type": "float",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:455:5, col:50>",
                "kind": "assignment",
                "variable": "std_msgs::Float32_<std::allocator<void>>::data",
                "unqualified_variable": "data",
                "value": {
                  "kind": "binary-expr",
                  "operator": "*",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "current_velocity",
                    "type": "float",
                    "initial-value": {
                      "kind": "float-literal",
                      "literal": 0.0
                    }
                  },
                  "rhs": {
                    "kind": "float-literal",
                    "literal": 3.6
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:457:5, col:52>",
                "kind": "publish",
                "publisher": "estimated_vel_mps_pub",
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:458:5, col:54>",
                "kind": "publish",
                "publisher": "estimated_vel_kmph_pub",
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:462:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "/map"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:463:5, col:37>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                "unqualified_variable": "stamp",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "current_scan_time",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:464:5, col:53>",
                "kind": "assignment",
                "variable": "geometry_msgs::Point_<std::allocator<void>>::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::x",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "predict_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:465:5, col:53>",
                "kind": "assignment",
                "variable": "geometry_msgs::Point_<std::allocator<void>>::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::y",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "predict_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:466:5, col:53>",
                "kind": "assignment",
                "variable": "geometry_msgs::Point_<std::allocator<void>>::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::z",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "predict_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:467:5, col:55>",
                "kind": "assignment",
                "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:468:5, col:55>",
                "kind": "assignment",
                "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:469:5, col:55>",
                "kind": "assignment",
                "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:470:5, col:55>",
                "kind": "assignment",
                "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::w",
                "unqualified_variable": "w",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:473:5, col:36>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "/map"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:474:5, col:33>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                "unqualified_variable": "stamp",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "current_scan_time",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:475:5, col:45>",
                "kind": "assignment",
                "variable": "geometry_msgs::Point_<std::allocator<void>>::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::x",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "icp_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:476:5, col:45>",
                "kind": "assignment",
                "variable": "geometry_msgs::Point_<std::allocator<void>>::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::y",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "icp_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:477:5, col:45>",
                "kind": "assignment",
                "variable": "geometry_msgs::Point_<std::allocator<void>>::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::z",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "icp_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:478:5, col:47>",
                "kind": "assignment",
                "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:479:5, col:47>",
                "kind": "assignment",
                "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:480:5, col:47>",
                "kind": "assignment",
                "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:481:5, col:47>",
                "kind": "assignment",
                "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::w",
                "unqualified_variable": "w",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:484:5, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "/map"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:485:5, col:37>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                "unqualified_variable": "stamp",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "current_scan_time",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:486:5, col:53>",
                "kind": "assignment",
                "variable": "geometry_msgs::Point_<std::allocator<void>>::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::x",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:487:5, col:53>",
                "kind": "assignment",
                "variable": "geometry_msgs::Point_<std::allocator<void>>::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::y",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:488:5, col:53>",
                "kind": "assignment",
                "variable": "geometry_msgs::Point_<std::allocator<void>>::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::z",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:489:5, col:55>",
                "kind": "assignment",
                "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:490:5, col:55>",
                "kind": "assignment",
                "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:491:5, col:55>",
                "kind": "assignment",
                "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:492:5, col:55>",
                "kind": "assignment",
                "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::w",
                "unqualified_variable": "w",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:495:5, col:42>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "/map"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:496:5, col:39>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                "unqualified_variable": "stamp",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "current_scan_time",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:497:5, col:57>",
                "kind": "assignment",
                "variable": "geometry_msgs::Point_<std::allocator<void>>::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::x",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "localizer_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:498:5, col:57>",
                "kind": "assignment",
                "variable": "geometry_msgs::Point_<std::allocator<void>>::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::y",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "localizer_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:499:5, col:57>",
                "kind": "assignment",
                "variable": "geometry_msgs::Point_<std::allocator<void>>::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::z",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "localizer_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:500:5, col:59>",
                "kind": "assignment",
                "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:501:5, col:59>",
                "kind": "assignment",
                "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:502:5, col:59>",
                "kind": "assignment",
                "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:503:5, col:59>",
                "kind": "assignment",
                "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::w",
                "unqualified_variable": "w",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:505:5, col:46>",
                "kind": "publish",
                "publisher": "predict_pose_pub",
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:506:5, col:38>",
                "kind": "publish",
                "publisher": "icp_pose_pub",
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:507:5, col:50>",
                "kind": "publish",
                "publisher": "localizer_pose_pub",
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:512:5, col:94>",
                "kind": "publish",
                "publisher": "tf_broadcaster",
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:514:5, col:51>",
                "kind": "assignment",
                "variable": "matching_end",
                "unqualified_variable": "matching_end",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:515:5, col:111>",
                "kind": "assignment",
                "variable": "exe_time",
                "unqualified_variable": "exe_time",
                "value": {
                  "kind": "binary-expr",
                  "operator": "/",
                  "lhs": {
                    "kind": "unknown"
                  },
                  "rhs": {
                    "kind": "float-literal",
                    "literal": 1000.0
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:516:5, col:30>",
                "kind": "assignment",
                "variable": "std_msgs::Float32_<std::allocator<void>>::data",
                "unqualified_variable": "data",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "exe_time",
                  "type": "float",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:517:5, col:52>",
                "kind": "publish",
                "publisher": "time_icp_matching_pub",
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:520:5, col:39>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                "unqualified_variable": "stamp",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "current_scan_time",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:521:5, col:41>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "current_velocity",
                  "type": "float",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:522:5, col:41>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:523:5, col:41>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:524:5, col:42>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:525:5, col:42>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:526:5, col:42>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "angular_velocity",
                  "type": "float",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:528:5, col:50>",
                "kind": "publish",
                "publisher": "estimate_twist_pub",
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:531:5, col:37>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                "unqualified_variable": "stamp",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "current_scan_time",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:532:5, col:33>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "current_velocity",
                  "type": "float",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:533:5, col:47>",
                "kind": "publish",
                "publisher": "estimated_vel_pub",
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:536:5, col:33>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                "unqualified_variable": "stamp",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "current_scan_time",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:537:5, col:47>",
                "kind": "assignment",
                "variable": "autoware_msgs::ICPStat_<std::allocator<void>>::exe_time",
                "unqualified_variable": "exe_time",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "std_msgs::Float32_<std::allocator<void>>::data",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "time_icp_matching",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:539:5, col:26>",
                "kind": "assignment",
                "variable": "autoware_msgs::ICPStat_<std::allocator<void>>::score",
                "unqualified_variable": "score",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "fitness_score",
                  "type": "float",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:540:5, col:29>",
                "kind": "assignment",
                "variable": "autoware_msgs::ICPStat_<std::allocator<void>>::velocity",
                "unqualified_variable": "velocity",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "current_velocity",
                  "type": "float",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:541:5, col:33>",
                "kind": "assignment",
                "variable": "autoware_msgs::ICPStat_<std::allocator<void>>::acceleration",
                "unqualified_variable": "acceleration",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "current_accel",
                  "type": "float",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:542:5, col:37>",
                "kind": "assignment",
                "variable": "autoware_msgs::ICPStat_<std::allocator<void>>::use_predict_pose",
                "unqualified_variable": "use_predict_pose",
                "value": {
                  "kind": "int-literal",
                  "literal": 0
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:544:5, col:38>",
                "kind": "publish",
                "publisher": "icp_stat_pub",
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "map_loaded",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 1
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "init_pos_set",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:583:7, col:18>",
                "kind": "assignment",
                "variable": "offset_x",
                "unqualified_variable": "offset_x",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "diff_x",
                  "type": "float",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "map_loaded",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "init_pos_set",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "variable-reference",
                      "qualified_name": "ofs",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_offset",
                      "type": "string",
                      "initial-value": {
                        "kind": "string-literal",
                        "literal": "linear"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "linear"
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:584:7, col:18>",
                "kind": "assignment",
                "variable": "offset_y",
                "unqualified_variable": "offset_y",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "diff_y",
                  "type": "float",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "map_loaded",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "init_pos_set",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "variable-reference",
                      "qualified_name": "ofs",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_offset",
                      "type": "string",
                      "initial-value": {
                        "kind": "string-literal",
                        "literal": "linear"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "linear"
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:585:7, col:18>",
                "kind": "assignment",
                "variable": "offset_z",
                "unqualified_variable": "offset_z",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "diff_z",
                  "type": "float",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "map_loaded",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "init_pos_set",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "variable-reference",
                      "qualified_name": "ofs",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_offset",
                      "type": "string",
                      "initial-value": {
                        "kind": "string-literal",
                        "literal": "linear"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "linear"
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:586:7, col:20>",
                "kind": "assignment",
                "variable": "offset_yaw",
                "unqualified_variable": "offset_yaw",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "diff_yaw",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "map_loaded",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "init_pos_set",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "variable-reference",
                      "qualified_name": "ofs",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_offset",
                      "type": "string",
                      "initial-value": {
                        "kind": "string-literal",
                        "literal": "linear"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "linear"
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:590:7, col:66>",
                "kind": "assignment",
                "variable": "offset_x",
                "unqualified_variable": "offset_x",
                "value": {
                  "kind": "binary-expr",
                  "operator": "*",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "+",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "current_velocity_x",
                      "type": "float",
                      "initial-value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "*",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "current_accel_x",
                        "type": "float",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        }
                      },
                      "rhs": {
                        "kind": "variable-reference",
                        "qualified_name": "secs",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "secs",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "variable-reference",
                        "qualified_name": "ofs",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_offset",
                          "type": "string",
                          "initial-value": {
                            "kind": "string-literal",
                            "literal": "linear"
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "linear"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_offset",
                      "type": "string",
                      "initial-value": {
                        "kind": "string-literal",
                        "literal": "linear"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "quadratic"
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:591:7, col:66>",
                "kind": "assignment",
                "variable": "offset_y",
                "unqualified_variable": "offset_y",
                "value": {
                  "kind": "binary-expr",
                  "operator": "*",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "+",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "current_velocity_y",
                      "type": "float",
                      "initial-value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "*",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "current_accel_y",
                        "type": "float",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        }
                      },
                      "rhs": {
                        "kind": "variable-reference",
                        "qualified_name": "secs",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "secs",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "variable-reference",
                        "qualified_name": "ofs",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_offset",
                          "type": "string",
                          "initial-value": {
                            "kind": "string-literal",
                            "literal": "linear"
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "linear"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_offset",
                      "type": "string",
                      "initial-value": {
                        "kind": "string-literal",
                        "literal": "linear"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "quadratic"
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:592:7, col:18>",
                "kind": "assignment",
                "variable": "offset_z",
                "unqualified_variable": "offset_z",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "diff_z",
                  "type": "float",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "variable-reference",
                        "qualified_name": "ofs",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_offset",
                          "type": "string",
                          "initial-value": {
                            "kind": "string-literal",
                            "literal": "linear"
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "linear"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_offset",
                      "type": "string",
                      "initial-value": {
                        "kind": "string-literal",
                        "literal": "linear"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "quadratic"
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:593:7, col:20>",
                "kind": "assignment",
                "variable": "offset_yaw",
                "unqualified_variable": "offset_yaw",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "diff_yaw",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "variable-reference",
                        "qualified_name": "ofs",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_offset",
                          "type": "string",
                          "initial-value": {
                            "kind": "string-literal",
                            "literal": "linear"
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "linear"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_offset",
                      "type": "string",
                      "initial-value": {
                        "kind": "string-literal",
                        "literal": "linear"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "quadratic"
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:597:7, col:18>",
                "kind": "assignment",
                "variable": "offset_x",
                "unqualified_variable": "offset_x",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "map_loaded",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "ofs",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_offset",
                            "type": "string",
                            "initial-value": {
                              "kind": "string-literal",
                              "literal": "linear"
                            }
                          },
                          "rhs": {
                            "kind": "string-literal",
                            "literal": "linear"
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_offset",
                          "type": "string",
                          "initial-value": {
                            "kind": "string-literal",
                            "literal": "linear"
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "quadratic"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_offset",
                      "type": "string",
                      "initial-value": {
                        "kind": "string-literal",
                        "literal": "linear"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "zero"
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:598:7, col:18>",
                "kind": "assignment",
                "variable": "offset_y",
                "unqualified_variable": "offset_y",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "map_loaded",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "ofs",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_offset",
                            "type": "string",
                            "initial-value": {
                              "kind": "string-literal",
                              "literal": "linear"
                            }
                          },
                          "rhs": {
                            "kind": "string-literal",
                            "literal": "linear"
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_offset",
                          "type": "string",
                          "initial-value": {
                            "kind": "string-literal",
                            "literal": "linear"
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "quadratic"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_offset",
                      "type": "string",
                      "initial-value": {
                        "kind": "string-literal",
                        "literal": "linear"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "zero"
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:599:7, col:18>",
                "kind": "assignment",
                "variable": "offset_z",
                "unqualified_variable": "offset_z",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "map_loaded",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "ofs",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_offset",
                            "type": "string",
                            "initial-value": {
                              "kind": "string-literal",
                              "literal": "linear"
                            }
                          },
                          "rhs": {
                            "kind": "string-literal",
                            "literal": "linear"
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_offset",
                          "type": "string",
                          "initial-value": {
                            "kind": "string-literal",
                            "literal": "linear"
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "quadratic"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_offset",
                      "type": "string",
                      "initial-value": {
                        "kind": "string-literal",
                        "literal": "linear"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "zero"
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:600:7, col:20>",
                "kind": "assignment",
                "variable": "offset_yaw",
                "unqualified_variable": "offset_yaw",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "map_loaded",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "ofs",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_offset",
                            "type": "string",
                            "initial-value": {
                              "kind": "string-literal",
                              "literal": "linear"
                            }
                          },
                          "rhs": {
                            "kind": "string-literal",
                            "literal": "linear"
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_offset",
                          "type": "string",
                          "initial-value": {
                            "kind": "string-literal",
                            "literal": "linear"
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "quadratic"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_offset",
                      "type": "string",
                      "initial-value": {
                        "kind": "string-literal",
                        "literal": "linear"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "zero"
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:604:5, col:36>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::x",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "map_loaded",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "ofs",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:605:5, col:36>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::y",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "map_loaded",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "ofs",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:606:5, col:36>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::z",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "map_loaded",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "ofs",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:607:5, col:39>",
                "kind": "assignment",
                "variable": "pose::roll",
                "unqualified_variable": "roll",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::roll",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "map_loaded",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "ofs",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:608:5, col:40>",
                "kind": "assignment",
                "variable": "pose::pitch",
                "unqualified_variable": "pitch",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::pitch",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "map_loaded",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "ofs",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:609:5, col:38>",
                "kind": "assignment",
                "variable": "pose::yaw",
                "unqualified_variable": "yaw",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::yaw",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "map_loaded",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "ofs",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:611:5, col:48>",
                "kind": "assignment",
                "variable": "ros::TimeBase<ros::Time, ros::Duration>::sec",
                "unqualified_variable": "sec",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "ros::TimeBase<ros::Time, ros::Duration>::sec",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 0
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_scan_time",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "map_loaded",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "ofs",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:612:5, col:49>",
                "kind": "assignment",
                "variable": "ros::TimeBase<ros::Time, ros::Duration>::nsec",
                "unqualified_variable": "nsec",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "ros::TimeBase<ros::Time, ros::Duration>::nsec",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 0
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_scan_time",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "map_loaded",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "ofs",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:614:5, col:34>",
                "kind": "assignment",
                "variable": "previous_previous_velocity",
                "unqualified_variable": "previous_previous_velocity",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "previous_velocity",
                  "type": "float",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "map_loaded",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "ofs",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:615:5, col:25>",
                "kind": "assignment",
                "variable": "previous_velocity",
                "unqualified_variable": "previous_velocity",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "current_velocity",
                  "type": "float",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "map_loaded",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "ofs",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:616:5, col:27>",
                "kind": "assignment",
                "variable": "previous_velocity_x",
                "unqualified_variable": "previous_velocity_x",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "current_velocity_x",
                  "type": "float",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "map_loaded",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "ofs",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:617:5, col:27>",
                "kind": "assignment",
                "variable": "previous_velocity_y",
                "unqualified_variable": "previous_velocity_y",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "current_velocity_y",
                  "type": "float",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "map_loaded",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "ofs",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:618:5, col:27>",
                "kind": "assignment",
                "variable": "previous_velocity_z",
                "unqualified_variable": "previous_velocity_z",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "current_velocity_z",
                  "type": "float",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "map_loaded",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "ofs",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:619:5, col:22>",
                "kind": "assignment",
                "variable": "previous_accel",
                "unqualified_variable": "previous_accel",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "current_accel",
                  "type": "float",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "map_loaded",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "ofs",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:621:5, col:59>",
                "kind": "assignment",
                "variable": "std_msgs::Float32_<std::allocator<void>>::data",
                "unqualified_variable": "data",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "std_msgs::Float32_<std::allocator<void>>::data",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "estimated_vel_kmph",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "map_loaded",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "map_loaded",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "ofs",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:311:3, line:622:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:313:5, col:53>",
                      "kind": "assignment",
                      "variable": "matching_start",
                      "unqualified_variable": "matching_start",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:322:5, col:39>",
                      "kind": "assignment",
                      "variable": "current_scan_time",
                      "unqualified_variable": "current_scan_time",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "std_msgs::Header_<std::allocator<void>>::stamp",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "member-var-ref",
                          "qualified_name": "sensor_msgs::PointCloud2_<std::allocator<void>>::header",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:338:5, col:40>",
                      "kind": "assignment",
                      "variable": "pose::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "+",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "pose::x",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "previous_pose",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "offset_x",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:339:5, col:40>",
                      "kind": "assignment",
                      "variable": "pose::y",
                      "unqualified_variable": "y",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "+",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "pose::y",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "previous_pose",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "offset_y",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:340:5, col:40>",
                      "kind": "assignment",
                      "variable": "pose::z",
                      "unqualified_variable": "z",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "+",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "pose::z",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "previous_pose",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "offset_z",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:341:5, col:39>",
                      "kind": "assignment",
                      "variable": "pose::roll",
                      "unqualified_variable": "roll",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::roll",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "previous_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:342:5, col:40>",
                      "kind": "assignment",
                      "variable": "pose::pitch",
                      "unqualified_variable": "pitch",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::pitch",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "previous_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:343:5, col:44>",
                      "kind": "assignment",
                      "variable": "pose::yaw",
                      "unqualified_variable": "yaw",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "+",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "pose::yaw",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "previous_pose",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "offset_yaw",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:359:5, col:50>",
                      "kind": "assignment",
                      "variable": "align_start",
                      "unqualified_variable": "align_start",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:361:5, col:48>",
                      "kind": "assignment",
                      "variable": "align_end",
                      "unqualified_variable": "align_end",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:362:5, col:107>",
                      "kind": "assignment",
                      "variable": "align_time",
                      "unqualified_variable": "align_time",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "/",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "float-literal",
                          "literal": 1000.0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:364:5, col:36>",
                      "kind": "assignment",
                      "variable": "t",
                      "unqualified_variable": "t",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:365:5, col:14>",
                      "kind": "assignment",
                      "variable": "t2",
                      "unqualified_variable": "t2",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:367:5, col:60>",
                      "kind": "assignment",
                      "variable": "getFitnessScore_start",
                      "unqualified_variable": "getFitnessScore_start",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:368:5, col:41>",
                      "kind": "assignment",
                      "variable": "fitness_score",
                      "unqualified_variable": "fitness_score",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:369:5, col:58>",
                      "kind": "assignment",
                      "variable": "getFitnessScore_end",
                      "unqualified_variable": "getFitnessScore_end",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:370:5, col:137>",
                      "kind": "assignment",
                      "variable": "getFitnessScore_time",
                      "unqualified_variable": "getFitnessScore_time",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "/",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "float-literal",
                          "literal": 1000.0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:378:5, col:30>",
                      "kind": "assignment",
                      "variable": "pose::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:379:5, col:30>",
                      "kind": "assignment",
                      "variable": "pose::y",
                      "unqualified_variable": "y",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:380:5, col:30>",
                      "kind": "assignment",
                      "variable": "pose::z",
                      "unqualified_variable": "z",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:389:5, col:25>",
                      "kind": "assignment",
                      "variable": "pose::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:390:5, col:25>",
                      "kind": "assignment",
                      "variable": "pose::y",
                      "unqualified_variable": "y",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:391:5, col:25>",
                      "kind": "assignment",
                      "variable": "pose::z",
                      "unqualified_variable": "z",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:395:5, line:397:92>",
                      "kind": "assignment",
                      "variable": "predict_pose_error",
                      "unqualified_variable": "predict_pose_error",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:399:5, line:406:5>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:401:7, col:26>",
                            "kind": "assignment",
                            "variable": "use_predict_pose",
                            "unqualified_variable": "use_predict_pose",
                            "value": {
                              "kind": "int-literal",
                              "literal": 0
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "map_loaded",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "map_loaded",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<=",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "predict_pose_error",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  }
                                },
                                "rhs": {
                                  "kind": "float-literal",
                                  "literal": 0.5
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:401:7, col:26>",
                            "kind": "assignment",
                            "variable": "use_predict_pose",
                            "unqualified_variable": "use_predict_pose",
                            "value": {
                              "kind": "int-literal",
                              "literal": 0
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "map_loaded",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "map_loaded",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<=",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "predict_pose_error",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  }
                                },
                                "rhs": {
                                  "kind": "float-literal",
                                  "literal": 0.5
                                }
                              }
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:405:7, col:26>",
                            "kind": "assignment",
                            "variable": "use_predict_pose",
                            "unqualified_variable": "use_predict_pose",
                            "value": {
                              "kind": "int-literal",
                              "literal": 1
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "map_loaded",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "map_loaded",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "<=",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "predict_pose_error",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "float-literal",
                                      "literal": 0.0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "float-literal",
                                    "literal": 0.5
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:405:7, col:26>",
                            "kind": "assignment",
                            "variable": "use_predict_pose",
                            "unqualified_variable": "use_predict_pose",
                            "value": {
                              "kind": "int-literal",
                              "literal": 1
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "map_loaded",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "map_loaded",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "<=",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "predict_pose_error",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "float-literal",
                                      "literal": 0.0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "float-literal",
                                    "literal": 0.5
                                  }
                                }
                              }
                            }
                          }
                        ]
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:407:5, col:24>",
                      "kind": "assignment",
                      "variable": "use_predict_pose",
                      "unqualified_variable": "use_predict_pose",
                      "value": {
                        "kind": "int-literal",
                        "literal": 0
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:409:5, line:426:5>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:411:7, col:33>",
                            "kind": "assignment",
                            "variable": "pose::x",
                            "unqualified_variable": "x",
                            "value": {
                              "kind": "member-var-ref",
                              "qualified_name": "pose::x",
                              "type": "float",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "qualified_name": "icp_pose",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "unknown"
                                }
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "map_loaded",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "map_loaded",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "use_predict_pose",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:412:7, col:33>",
                            "kind": "assignment",
                            "variable": "pose::y",
                            "unqualified_variable": "y",
                            "value": {
                              "kind": "member-var-ref",
                              "qualified_name": "pose::y",
                              "type": "float",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "qualified_name": "icp_pose",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "unknown"
                                }
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "map_loaded",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "map_loaded",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "use_predict_pose",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:413:7, col:33>",
                            "kind": "assignment",
                            "variable": "pose::z",
                            "unqualified_variable": "z",
                            "value": {
                              "kind": "member-var-ref",
                              "qualified_name": "pose::z",
                              "type": "float",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "qualified_name": "icp_pose",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "unknown"
                                }
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "map_loaded",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "map_loaded",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "use_predict_pose",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:414:7, col:36>",
                            "kind": "assignment",
                            "variable": "pose::roll",
                            "unqualified_variable": "roll",
                            "value": {
                              "kind": "member-var-ref",
                              "qualified_name": "pose::roll",
                              "type": "float",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "qualified_name": "icp_pose",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "unknown"
                                }
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "map_loaded",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "map_loaded",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "use_predict_pose",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:415:7, col:37>",
                            "kind": "assignment",
                            "variable": "pose::pitch",
                            "unqualified_variable": "pitch",
                            "value": {
                              "kind": "member-var-ref",
                              "qualified_name": "pose::pitch",
                              "type": "float",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "qualified_name": "icp_pose",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "unknown"
                                }
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "map_loaded",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "map_loaded",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "use_predict_pose",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:416:7, col:35>",
                            "kind": "assignment",
                            "variable": "pose::yaw",
                            "unqualified_variable": "yaw",
                            "value": {
                              "kind": "member-var-ref",
                              "qualified_name": "pose::yaw",
                              "type": "float",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "qualified_name": "icp_pose",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "unknown"
                                }
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "map_loaded",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "map_loaded",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "use_predict_pose",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:411:7, col:33>",
                            "kind": "assignment",
                            "variable": "pose::x",
                            "unqualified_variable": "x",
                            "value": {
                              "kind": "member-var-ref",
                              "qualified_name": "pose::x",
                              "type": "float",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "qualified_name": "icp_pose",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "unknown"
                                }
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "map_loaded",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "map_loaded",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "use_predict_pose",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:412:7, col:33>",
                            "kind": "assignment",
                            "variable": "pose::y",
                            "unqualified_variable": "y",
                            "value": {
                              "kind": "member-var-ref",
                              "qualified_name": "pose::y",
                              "type": "float",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "qualified_name": "icp_pose",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "unknown"
                                }
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "map_loaded",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "map_loaded",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "use_predict_pose",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:413:7, col:33>",
                            "kind": "assignment",
                            "variable": "pose::z",
                            "unqualified_variable": "z",
                            "value": {
                              "kind": "member-var-ref",
                              "qualified_name": "pose::z",
                              "type": "float",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "qualified_name": "icp_pose",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "unknown"
                                }
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "map_loaded",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "map_loaded",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "use_predict_pose",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:414:7, col:36>",
                            "kind": "assignment",
                            "variable": "pose::roll",
                            "unqualified_variable": "roll",
                            "value": {
                              "kind": "member-var-ref",
                              "qualified_name": "pose::roll",
                              "type": "float",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "qualified_name": "icp_pose",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "unknown"
                                }
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "map_loaded",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "map_loaded",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "use_predict_pose",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:415:7, col:37>",
                            "kind": "assignment",
                            "variable": "pose::pitch",
                            "unqualified_variable": "pitch",
                            "value": {
                              "kind": "member-var-ref",
                              "qualified_name": "pose::pitch",
                              "type": "float",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "qualified_name": "icp_pose",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "unknown"
                                }
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "map_loaded",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "map_loaded",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "use_predict_pose",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:416:7, col:35>",
                            "kind": "assignment",
                            "variable": "pose::yaw",
                            "unqualified_variable": "yaw",
                            "value": {
                              "kind": "member-var-ref",
                              "qualified_name": "pose::yaw",
                              "type": "float",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "qualified_name": "icp_pose",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "unknown"
                                }
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "map_loaded",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "map_loaded",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "use_predict_pose",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:420:7, col:37>",
                            "kind": "assignment",
                            "variable": "pose::x",
                            "unqualified_variable": "x",
                            "value": {
                              "kind": "member-var-ref",
                              "qualified_name": "pose::x",
                              "type": "float",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "qualified_name": "predict_pose",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "unknown"
                                }
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "map_loaded",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "map_loaded",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "use_predict_pose",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:421:7, col:37>",
                            "kind": "assignment",
                            "variable": "pose::y",
                            "unqualified_variable": "y",
                            "value": {
                              "kind": "member-var-ref",
                              "qualified_name": "pose::y",
                              "type": "float",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "qualified_name": "predict_pose",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "unknown"
                                }
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "map_loaded",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "map_loaded",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "use_predict_pose",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:422:7, col:37>",
                            "kind": "assignment",
                            "variable": "pose::z",
                            "unqualified_variable": "z",
                            "value": {
                              "kind": "member-var-ref",
                              "qualified_name": "pose::z",
                              "type": "float",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "qualified_name": "predict_pose",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "unknown"
                                }
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "map_loaded",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "map_loaded",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "use_predict_pose",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:423:7, col:40>",
                            "kind": "assignment",
                            "variable": "pose::roll",
                            "unqualified_variable": "roll",
                            "value": {
                              "kind": "member-var-ref",
                              "qualified_name": "pose::roll",
                              "type": "float",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "qualified_name": "predict_pose",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "unknown"
                                }
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "map_loaded",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "map_loaded",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "use_predict_pose",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:424:7, col:41>",
                            "kind": "assignment",
                            "variable": "pose::pitch",
                            "unqualified_variable": "pitch",
                            "value": {
                              "kind": "member-var-ref",
                              "qualified_name": "pose::pitch",
                              "type": "float",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "qualified_name": "predict_pose",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "unknown"
                                }
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "map_loaded",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "map_loaded",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "use_predict_pose",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:425:7, col:39>",
                            "kind": "assignment",
                            "variable": "pose::yaw",
                            "unqualified_variable": "yaw",
                            "value": {
                              "kind": "member-var-ref",
                              "qualified_name": "pose::yaw",
                              "type": "float",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "qualified_name": "predict_pose",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "unknown"
                                }
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "map_loaded",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "map_loaded",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "use_predict_pose",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:420:7, col:37>",
                            "kind": "assignment",
                            "variable": "pose::x",
                            "unqualified_variable": "x",
                            "value": {
                              "kind": "member-var-ref",
                              "qualified_name": "pose::x",
                              "type": "float",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "qualified_name": "predict_pose",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "unknown"
                                }
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "map_loaded",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "map_loaded",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "use_predict_pose",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:421:7, col:37>",
                            "kind": "assignment",
                            "variable": "pose::y",
                            "unqualified_variable": "y",
                            "value": {
                              "kind": "member-var-ref",
                              "qualified_name": "pose::y",
                              "type": "float",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "qualified_name": "predict_pose",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "unknown"
                                }
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "map_loaded",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "map_loaded",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "use_predict_pose",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:422:7, col:37>",
                            "kind": "assignment",
                            "variable": "pose::z",
                            "unqualified_variable": "z",
                            "value": {
                              "kind": "member-var-ref",
                              "qualified_name": "pose::z",
                              "type": "float",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "qualified_name": "predict_pose",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "unknown"
                                }
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "map_loaded",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "map_loaded",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "use_predict_pose",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:423:7, col:40>",
                            "kind": "assignment",
                            "variable": "pose::roll",
                            "unqualified_variable": "roll",
                            "value": {
                              "kind": "member-var-ref",
                              "qualified_name": "pose::roll",
                              "type": "float",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "qualified_name": "predict_pose",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "unknown"
                                }
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "map_loaded",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "map_loaded",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "use_predict_pose",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:424:7, col:41>",
                            "kind": "assignment",
                            "variable": "pose::pitch",
                            "unqualified_variable": "pitch",
                            "value": {
                              "kind": "member-var-ref",
                              "qualified_name": "pose::pitch",
                              "type": "float",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "qualified_name": "predict_pose",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "unknown"
                                }
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "map_loaded",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "map_loaded",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "use_predict_pose",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:425:7, col:39>",
                            "kind": "assignment",
                            "variable": "pose::yaw",
                            "unqualified_variable": "yaw",
                            "value": {
                              "kind": "member-var-ref",
                              "qualified_name": "pose::yaw",
                              "type": "float",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "qualified_name": "predict_pose",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "unknown"
                                }
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "map_loaded",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "map_loaded",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "use_predict_pose",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                }
                              }
                            }
                          }
                        ]
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:429:5, col:41>",
                      "kind": "assignment",
                      "variable": "scan_duration",
                      "unqualified_variable": "scan_duration",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:431:5, col:45>",
                      "kind": "assignment",
                      "variable": "diff_x",
                      "unqualified_variable": "diff_x",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "-",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "pose::x",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "current_pose",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "pose::x",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "previous_pose",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:432:5, col:45>",
                      "kind": "assignment",
                      "variable": "diff_y",
                      "unqualified_variable": "diff_y",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "-",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "pose::y",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "current_pose",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "pose::y",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "previous_pose",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:433:5, col:45>",
                      "kind": "assignment",
                      "variable": "diff_z",
                      "unqualified_variable": "diff_z",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "-",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "pose::z",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "current_pose",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "pose::z",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "previous_pose",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:434:5, col:49>",
                      "kind": "assignment",
                      "variable": "diff_yaw",
                      "unqualified_variable": "diff_yaw",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "-",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "pose::yaw",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "current_pose",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "pose::yaw",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "previous_pose",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:435:5, col:68>",
                      "kind": "assignment",
                      "variable": "diff",
                      "unqualified_variable": "diff",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:437:5, col:31>",
                      "kind": "assignment",
                      "variable": "current_velocity",
                      "unqualified_variable": "current_velocity",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "/",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "diff",
                          "type": "float",
                          "initial-value": {
                            "kind": "float-literal",
                            "literal": 0.0
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "secs",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:438:5, col:35>",
                      "kind": "assignment",
                      "variable": "current_velocity_x",
                      "unqualified_variable": "current_velocity_x",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "/",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "diff_x",
                          "type": "float",
                          "initial-value": {
                            "kind": "float-literal",
                            "literal": 0.0
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "secs",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:439:5, col:35>",
                      "kind": "assignment",
                      "variable": "current_velocity_y",
                      "unqualified_variable": "current_velocity_y",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "/",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "diff_y",
                          "type": "float",
                          "initial-value": {
                            "kind": "float-literal",
                            "literal": 0.0
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "secs",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:440:5, col:35>",
                      "kind": "assignment",
                      "variable": "current_velocity_z",
                      "unqualified_variable": "current_velocity_z",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "/",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "diff_z",
                          "type": "float",
                          "initial-value": {
                            "kind": "float-literal",
                            "literal": 0.0
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "secs",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:441:5, col:35>",
                      "kind": "assignment",
                      "variable": "angular_velocity",
                      "unqualified_variable": "angular_velocity",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "/",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "diff_yaw",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "secs",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:443:5, col:101>",
                      "kind": "assignment",
                      "variable": "current_velocity_smooth",
                      "unqualified_variable": "current_velocity_smooth",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "/",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "+",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "+",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "current_velocity",
                              "type": "float",
                              "initial-value": {
                                "kind": "float-literal",
                                "literal": 0.0
                              }
                            },
                            "rhs": {
                              "kind": "variable-reference",
                              "qualified_name": "previous_velocity",
                              "type": "float",
                              "initial-value": {
                                "kind": "float-literal",
                                "literal": 0.0
                              }
                            }
                          },
                          "rhs": {
                            "kind": "variable-reference",
                            "qualified_name": "previous_previous_velocity",
                            "type": "float",
                            "initial-value": {
                              "kind": "float-literal",
                              "literal": 0.0
                            }
                          }
                        },
                        "rhs": {
                          "kind": "float-literal",
                          "literal": 3.0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:444:5, line:447:5>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:446:7, col:33>",
                            "kind": "assignment",
                            "variable": "current_velocity_smooth",
                            "unqualified_variable": "current_velocity_smooth",
                            "value": {
                              "kind": "float-literal",
                              "literal": 0.0
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "map_loaded",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "map_loaded",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "current_velocity_smooth",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  }
                                },
                                "rhs": {
                                  "kind": "float-literal",
                                  "literal": 0.2
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:446:7, col:33>",
                            "kind": "assignment",
                            "variable": "current_velocity_smooth",
                            "unqualified_variable": "current_velocity_smooth",
                            "value": {
                              "kind": "float-literal",
                              "literal": 0.0
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "map_loaded",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "map_loaded",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "current_velocity_smooth",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  }
                                },
                                "rhs": {
                                  "kind": "float-literal",
                                  "literal": 0.2
                                }
                              }
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": []
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:449:5, col:62>",
                      "kind": "assignment",
                      "variable": "current_accel",
                      "unqualified_variable": "current_accel",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "/",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "-",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "current_velocity",
                            "type": "float",
                            "initial-value": {
                              "kind": "float-literal",
                              "literal": 0.0
                            }
                          },
                          "rhs": {
                            "kind": "variable-reference",
                            "qualified_name": "previous_velocity",
                            "type": "float",
                            "initial-value": {
                              "kind": "float-literal",
                              "literal": 0.0
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "secs",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:450:5, col:68>",
                      "kind": "assignment",
                      "variable": "current_accel_x",
                      "unqualified_variable": "current_accel_x",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "/",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "-",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "current_velocity_x",
                            "type": "float",
                            "initial-value": {
                              "kind": "float-literal",
                              "literal": 0.0
                            }
                          },
                          "rhs": {
                            "kind": "variable-reference",
                            "qualified_name": "previous_velocity_x",
                            "type": "float",
                            "initial-value": {
                              "kind": "float-literal",
                              "literal": 0.0
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "secs",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:451:5, col:68>",
                      "kind": "assignment",
                      "variable": "current_accel_y",
                      "unqualified_variable": "current_accel_y",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "/",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "-",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "current_velocity_y",
                            "type": "float",
                            "initial-value": {
                              "kind": "float-literal",
                              "literal": 0.0
                            }
                          },
                          "rhs": {
                            "kind": "variable-reference",
                            "qualified_name": "previous_velocity_y",
                            "type": "float",
                            "initial-value": {
                              "kind": "float-literal",
                              "literal": 0.0
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "secs",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:452:5, col:68>",
                      "kind": "assignment",
                      "variable": "current_accel_z",
                      "unqualified_variable": "current_accel_z",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "/",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "-",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "current_velocity_z",
                            "type": "float",
                            "initial-value": {
                              "kind": "float-literal",
                              "literal": 0.0
                            }
                          },
                          "rhs": {
                            "kind": "variable-reference",
                            "qualified_name": "previous_velocity_z",
                            "type": "float",
                            "initial-value": {
                              "kind": "float-literal",
                              "literal": 0.0
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "secs",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:454:5, col:30>",
                      "kind": "assignment",
                      "variable": "std_msgs::Float32_<std::allocator<void>>::data",
                      "unqualified_variable": "data",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "current_velocity",
                        "type": "float",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:455:5, col:50>",
                      "kind": "assignment",
                      "variable": "std_msgs::Float32_<std::allocator<void>>::data",
                      "unqualified_variable": "data",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "*",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "current_velocity",
                          "type": "float",
                          "initial-value": {
                            "kind": "float-literal",
                            "literal": 0.0
                          }
                        },
                        "rhs": {
                          "kind": "float-literal",
                          "literal": 3.6
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:457:5, col:52>",
                      "kind": "publish",
                      "publisher": "estimated_vel_mps_pub",
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:458:5, col:54>",
                      "kind": "publish",
                      "publisher": "estimated_vel_kmph_pub",
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:462:5, col:40>",
                      "kind": "assignment",
                      "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                      "unqualified_variable": "frame_id",
                      "value": {
                        "kind": "string-literal",
                        "literal": "/map"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:463:5, col:37>",
                      "kind": "assignment",
                      "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                      "unqualified_variable": "stamp",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "current_scan_time",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:464:5, col:53>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Point_<std::allocator<void>>::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::x",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "predict_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:465:5, col:53>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Point_<std::allocator<void>>::y",
                      "unqualified_variable": "y",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::y",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "predict_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:466:5, col:53>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Point_<std::allocator<void>>::z",
                      "unqualified_variable": "z",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::z",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "predict_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:467:5, col:55>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:468:5, col:55>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::y",
                      "unqualified_variable": "y",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:469:5, col:55>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::z",
                      "unqualified_variable": "z",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:470:5, col:55>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::w",
                      "unqualified_variable": "w",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:473:5, col:36>",
                      "kind": "assignment",
                      "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                      "unqualified_variable": "frame_id",
                      "value": {
                        "kind": "string-literal",
                        "literal": "/map"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:474:5, col:33>",
                      "kind": "assignment",
                      "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                      "unqualified_variable": "stamp",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "current_scan_time",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:475:5, col:45>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Point_<std::allocator<void>>::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::x",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "icp_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:476:5, col:45>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Point_<std::allocator<void>>::y",
                      "unqualified_variable": "y",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::y",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "icp_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:477:5, col:45>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Point_<std::allocator<void>>::z",
                      "unqualified_variable": "z",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::z",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "icp_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:478:5, col:47>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:479:5, col:47>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::y",
                      "unqualified_variable": "y",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:480:5, col:47>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::z",
                      "unqualified_variable": "z",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:481:5, col:47>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::w",
                      "unqualified_variable": "w",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:484:5, col:40>",
                      "kind": "assignment",
                      "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                      "unqualified_variable": "frame_id",
                      "value": {
                        "kind": "string-literal",
                        "literal": "/map"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:485:5, col:37>",
                      "kind": "assignment",
                      "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                      "unqualified_variable": "stamp",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "current_scan_time",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:486:5, col:53>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Point_<std::allocator<void>>::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::x",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "current_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:487:5, col:53>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Point_<std::allocator<void>>::y",
                      "unqualified_variable": "y",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::y",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "current_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:488:5, col:53>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Point_<std::allocator<void>>::z",
                      "unqualified_variable": "z",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::z",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "current_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:489:5, col:55>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:490:5, col:55>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::y",
                      "unqualified_variable": "y",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:491:5, col:55>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::z",
                      "unqualified_variable": "z",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:492:5, col:55>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::w",
                      "unqualified_variable": "w",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:495:5, col:42>",
                      "kind": "assignment",
                      "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                      "unqualified_variable": "frame_id",
                      "value": {
                        "kind": "string-literal",
                        "literal": "/map"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:496:5, col:39>",
                      "kind": "assignment",
                      "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                      "unqualified_variable": "stamp",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "current_scan_time",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:497:5, col:57>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Point_<std::allocator<void>>::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::x",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "localizer_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:498:5, col:57>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Point_<std::allocator<void>>::y",
                      "unqualified_variable": "y",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::y",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "localizer_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:499:5, col:57>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Point_<std::allocator<void>>::z",
                      "unqualified_variable": "z",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::z",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "localizer_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:500:5, col:59>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:501:5, col:59>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::y",
                      "unqualified_variable": "y",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:502:5, col:59>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::z",
                      "unqualified_variable": "z",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:503:5, col:59>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::w",
                      "unqualified_variable": "w",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:505:5, col:46>",
                      "kind": "publish",
                      "publisher": "predict_pose_pub",
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:506:5, col:38>",
                      "kind": "publish",
                      "publisher": "icp_pose_pub",
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:507:5, col:50>",
                      "kind": "publish",
                      "publisher": "localizer_pose_pub",
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:512:5, col:94>",
                      "kind": "publish",
                      "publisher": "tf_broadcaster",
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:514:5, col:51>",
                      "kind": "assignment",
                      "variable": "matching_end",
                      "unqualified_variable": "matching_end",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:515:5, col:111>",
                      "kind": "assignment",
                      "variable": "exe_time",
                      "unqualified_variable": "exe_time",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "/",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "float-literal",
                          "literal": 1000.0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:516:5, col:30>",
                      "kind": "assignment",
                      "variable": "std_msgs::Float32_<std::allocator<void>>::data",
                      "unqualified_variable": "data",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "exe_time",
                        "type": "float",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:517:5, col:52>",
                      "kind": "publish",
                      "publisher": "time_icp_matching_pub",
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:520:5, col:39>",
                      "kind": "assignment",
                      "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                      "unqualified_variable": "stamp",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "current_scan_time",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:521:5, col:41>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "current_velocity",
                        "type": "float",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:522:5, col:41>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Vector3_<std::allocator<void>>::y",
                      "unqualified_variable": "y",
                      "value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:523:5, col:41>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Vector3_<std::allocator<void>>::z",
                      "unqualified_variable": "z",
                      "value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:524:5, col:42>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:525:5, col:42>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Vector3_<std::allocator<void>>::y",
                      "unqualified_variable": "y",
                      "value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:526:5, col:42>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Vector3_<std::allocator<void>>::z",
                      "unqualified_variable": "z",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "angular_velocity",
                        "type": "float",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:528:5, col:50>",
                      "kind": "publish",
                      "publisher": "estimate_twist_pub",
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:531:5, col:37>",
                      "kind": "assignment",
                      "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                      "unqualified_variable": "stamp",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "current_scan_time",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:532:5, col:33>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "current_velocity",
                        "type": "float",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:533:5, col:47>",
                      "kind": "publish",
                      "publisher": "estimated_vel_pub",
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:536:5, col:33>",
                      "kind": "assignment",
                      "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                      "unqualified_variable": "stamp",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "current_scan_time",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:537:5, col:47>",
                      "kind": "assignment",
                      "variable": "autoware_msgs::ICPStat_<std::allocator<void>>::exe_time",
                      "unqualified_variable": "exe_time",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "std_msgs::Float32_<std::allocator<void>>::data",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "time_icp_matching",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:539:5, col:26>",
                      "kind": "assignment",
                      "variable": "autoware_msgs::ICPStat_<std::allocator<void>>::score",
                      "unqualified_variable": "score",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "fitness_score",
                        "type": "float",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:540:5, col:29>",
                      "kind": "assignment",
                      "variable": "autoware_msgs::ICPStat_<std::allocator<void>>::velocity",
                      "unqualified_variable": "velocity",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "current_velocity",
                        "type": "float",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:541:5, col:33>",
                      "kind": "assignment",
                      "variable": "autoware_msgs::ICPStat_<std::allocator<void>>::acceleration",
                      "unqualified_variable": "acceleration",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "current_accel",
                        "type": "float",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:542:5, col:37>",
                      "kind": "assignment",
                      "variable": "autoware_msgs::ICPStat_<std::allocator<void>>::use_predict_pose",
                      "unqualified_variable": "use_predict_pose",
                      "value": {
                        "kind": "int-literal",
                        "literal": 0
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:544:5, col:38>",
                      "kind": "publish",
                      "publisher": "icp_stat_pub",
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:581:5, line:601:5>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:583:7, col:18>",
                            "kind": "assignment",
                            "variable": "offset_x",
                            "unqualified_variable": "offset_x",
                            "value": {
                              "kind": "variable-reference",
                              "qualified_name": "diff_x",
                              "type": "float",
                              "initial-value": {
                                "kind": "float-literal",
                                "literal": 0.0
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "map_loaded",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "map_loaded",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "init_pos_set",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "ofs",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_offset",
                                  "type": "string",
                                  "initial-value": {
                                    "kind": "string-literal",
                                    "literal": "linear"
                                  }
                                },
                                "rhs": {
                                  "kind": "string-literal",
                                  "literal": "linear"
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:584:7, col:18>",
                            "kind": "assignment",
                            "variable": "offset_y",
                            "unqualified_variable": "offset_y",
                            "value": {
                              "kind": "variable-reference",
                              "qualified_name": "diff_y",
                              "type": "float",
                              "initial-value": {
                                "kind": "float-literal",
                                "literal": 0.0
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "map_loaded",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "map_loaded",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "init_pos_set",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "ofs",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_offset",
                                  "type": "string",
                                  "initial-value": {
                                    "kind": "string-literal",
                                    "literal": "linear"
                                  }
                                },
                                "rhs": {
                                  "kind": "string-literal",
                                  "literal": "linear"
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:585:7, col:18>",
                            "kind": "assignment",
                            "variable": "offset_z",
                            "unqualified_variable": "offset_z",
                            "value": {
                              "kind": "variable-reference",
                              "qualified_name": "diff_z",
                              "type": "float",
                              "initial-value": {
                                "kind": "float-literal",
                                "literal": 0.0
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "map_loaded",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "map_loaded",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "init_pos_set",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "ofs",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_offset",
                                  "type": "string",
                                  "initial-value": {
                                    "kind": "string-literal",
                                    "literal": "linear"
                                  }
                                },
                                "rhs": {
                                  "kind": "string-literal",
                                  "literal": "linear"
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:586:7, col:20>",
                            "kind": "assignment",
                            "variable": "offset_yaw",
                            "unqualified_variable": "offset_yaw",
                            "value": {
                              "kind": "variable-reference",
                              "qualified_name": "diff_yaw",
                              "type": "float",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "map_loaded",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "map_loaded",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "init_pos_set",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "ofs",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_offset",
                                  "type": "string",
                                  "initial-value": {
                                    "kind": "string-literal",
                                    "literal": "linear"
                                  }
                                },
                                "rhs": {
                                  "kind": "string-literal",
                                  "literal": "linear"
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:583:7, col:18>",
                            "kind": "assignment",
                            "variable": "offset_x",
                            "unqualified_variable": "offset_x",
                            "value": {
                              "kind": "variable-reference",
                              "qualified_name": "diff_x",
                              "type": "float",
                              "initial-value": {
                                "kind": "float-literal",
                                "literal": 0.0
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "map_loaded",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "map_loaded",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "init_pos_set",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "ofs",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_offset",
                                  "type": "string",
                                  "initial-value": {
                                    "kind": "string-literal",
                                    "literal": "linear"
                                  }
                                },
                                "rhs": {
                                  "kind": "string-literal",
                                  "literal": "linear"
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:584:7, col:18>",
                            "kind": "assignment",
                            "variable": "offset_y",
                            "unqualified_variable": "offset_y",
                            "value": {
                              "kind": "variable-reference",
                              "qualified_name": "diff_y",
                              "type": "float",
                              "initial-value": {
                                "kind": "float-literal",
                                "literal": 0.0
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "map_loaded",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "map_loaded",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "init_pos_set",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "ofs",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_offset",
                                  "type": "string",
                                  "initial-value": {
                                    "kind": "string-literal",
                                    "literal": "linear"
                                  }
                                },
                                "rhs": {
                                  "kind": "string-literal",
                                  "literal": "linear"
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:585:7, col:18>",
                            "kind": "assignment",
                            "variable": "offset_z",
                            "unqualified_variable": "offset_z",
                            "value": {
                              "kind": "variable-reference",
                              "qualified_name": "diff_z",
                              "type": "float",
                              "initial-value": {
                                "kind": "float-literal",
                                "literal": 0.0
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "map_loaded",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "map_loaded",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "init_pos_set",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "ofs",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_offset",
                                  "type": "string",
                                  "initial-value": {
                                    "kind": "string-literal",
                                    "literal": "linear"
                                  }
                                },
                                "rhs": {
                                  "kind": "string-literal",
                                  "literal": "linear"
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:586:7, col:20>",
                            "kind": "assignment",
                            "variable": "offset_yaw",
                            "unqualified_variable": "offset_yaw",
                            "value": {
                              "kind": "variable-reference",
                              "qualified_name": "diff_yaw",
                              "type": "float",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "map_loaded",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "map_loaded",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "init_pos_set",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "ofs",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_offset",
                                  "type": "string",
                                  "initial-value": {
                                    "kind": "string-literal",
                                    "literal": "linear"
                                  }
                                },
                                "rhs": {
                                  "kind": "string-literal",
                                  "literal": "linear"
                                }
                              }
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:588:10, line:601:5>",
                            "kind": "if",
                            "trueBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": [
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:590:7, col:66>",
                                  "kind": "assignment",
                                  "variable": "offset_x",
                                  "unqualified_variable": "offset_x",
                                  "value": {
                                    "kind": "binary-expr",
                                    "operator": "*",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "+",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "current_velocity_x",
                                        "type": "float",
                                        "initial-value": {
                                          "kind": "float-literal",
                                          "literal": 0.0
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "*",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "current_accel_x",
                                          "type": "float",
                                          "initial-value": {
                                            "kind": "float-literal",
                                            "literal": 0.0
                                          }
                                        },
                                        "rhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "secs",
                                          "type": "float",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "secs",
                                      "type": "float",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "map_loaded",
                                              "type": "integer",
                                              "initial-value": {
                                                "kind": "int-literal",
                                                "literal": 0
                                              }
                                            },
                                            "rhs": {
                                              "kind": "int-literal",
                                              "literal": 1
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "map_loaded",
                                                "type": "integer",
                                                "initial-value": {
                                                  "kind": "int-literal",
                                                  "literal": 0
                                                }
                                              },
                                              "rhs": {
                                                "kind": "int-literal",
                                                "literal": 1
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "init_pos_set",
                                                "type": "integer",
                                                "initial-value": {
                                                  "kind": "int-literal",
                                                  "literal": 0
                                                }
                                              },
                                              "rhs": {
                                                "kind": "int-literal",
                                                "literal": 1
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "ofs",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "_offset",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "string-literal",
                                              "literal": "linear"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "linear"
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "_offset",
                                        "type": "string",
                                        "initial-value": {
                                          "kind": "string-literal",
                                          "literal": "linear"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "string-literal",
                                        "literal": "quadratic"
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:591:7, col:66>",
                                  "kind": "assignment",
                                  "variable": "offset_y",
                                  "unqualified_variable": "offset_y",
                                  "value": {
                                    "kind": "binary-expr",
                                    "operator": "*",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "+",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "current_velocity_y",
                                        "type": "float",
                                        "initial-value": {
                                          "kind": "float-literal",
                                          "literal": 0.0
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "*",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "current_accel_y",
                                          "type": "float",
                                          "initial-value": {
                                            "kind": "float-literal",
                                            "literal": 0.0
                                          }
                                        },
                                        "rhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "secs",
                                          "type": "float",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "secs",
                                      "type": "float",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "map_loaded",
                                              "type": "integer",
                                              "initial-value": {
                                                "kind": "int-literal",
                                                "literal": 0
                                              }
                                            },
                                            "rhs": {
                                              "kind": "int-literal",
                                              "literal": 1
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "map_loaded",
                                                "type": "integer",
                                                "initial-value": {
                                                  "kind": "int-literal",
                                                  "literal": 0
                                                }
                                              },
                                              "rhs": {
                                                "kind": "int-literal",
                                                "literal": 1
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "init_pos_set",
                                                "type": "integer",
                                                "initial-value": {
                                                  "kind": "int-literal",
                                                  "literal": 0
                                                }
                                              },
                                              "rhs": {
                                                "kind": "int-literal",
                                                "literal": 1
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "ofs",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "_offset",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "string-literal",
                                              "literal": "linear"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "linear"
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "_offset",
                                        "type": "string",
                                        "initial-value": {
                                          "kind": "string-literal",
                                          "literal": "linear"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "string-literal",
                                        "literal": "quadratic"
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:592:7, col:18>",
                                  "kind": "assignment",
                                  "variable": "offset_z",
                                  "unqualified_variable": "offset_z",
                                  "value": {
                                    "kind": "variable-reference",
                                    "qualified_name": "diff_z",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "float-literal",
                                      "literal": 0.0
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "map_loaded",
                                              "type": "integer",
                                              "initial-value": {
                                                "kind": "int-literal",
                                                "literal": 0
                                              }
                                            },
                                            "rhs": {
                                              "kind": "int-literal",
                                              "literal": 1
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "map_loaded",
                                                "type": "integer",
                                                "initial-value": {
                                                  "kind": "int-literal",
                                                  "literal": 0
                                                }
                                              },
                                              "rhs": {
                                                "kind": "int-literal",
                                                "literal": 1
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "init_pos_set",
                                                "type": "integer",
                                                "initial-value": {
                                                  "kind": "int-literal",
                                                  "literal": 0
                                                }
                                              },
                                              "rhs": {
                                                "kind": "int-literal",
                                                "literal": 1
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "ofs",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "_offset",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "string-literal",
                                              "literal": "linear"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "linear"
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "_offset",
                                        "type": "string",
                                        "initial-value": {
                                          "kind": "string-literal",
                                          "literal": "linear"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "string-literal",
                                        "literal": "quadratic"
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:593:7, col:20>",
                                  "kind": "assignment",
                                  "variable": "offset_yaw",
                                  "unqualified_variable": "offset_yaw",
                                  "value": {
                                    "kind": "variable-reference",
                                    "qualified_name": "diff_yaw",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "map_loaded",
                                              "type": "integer",
                                              "initial-value": {
                                                "kind": "int-literal",
                                                "literal": 0
                                              }
                                            },
                                            "rhs": {
                                              "kind": "int-literal",
                                              "literal": 1
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "map_loaded",
                                                "type": "integer",
                                                "initial-value": {
                                                  "kind": "int-literal",
                                                  "literal": 0
                                                }
                                              },
                                              "rhs": {
                                                "kind": "int-literal",
                                                "literal": 1
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "init_pos_set",
                                                "type": "integer",
                                                "initial-value": {
                                                  "kind": "int-literal",
                                                  "literal": 0
                                                }
                                              },
                                              "rhs": {
                                                "kind": "int-literal",
                                                "literal": 1
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "ofs",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "_offset",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "string-literal",
                                              "literal": "linear"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "linear"
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "_offset",
                                        "type": "string",
                                        "initial-value": {
                                          "kind": "string-literal",
                                          "literal": "linear"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "string-literal",
                                        "literal": "quadratic"
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:590:7, col:66>",
                                  "kind": "assignment",
                                  "variable": "offset_x",
                                  "unqualified_variable": "offset_x",
                                  "value": {
                                    "kind": "binary-expr",
                                    "operator": "*",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "+",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "current_velocity_x",
                                        "type": "float",
                                        "initial-value": {
                                          "kind": "float-literal",
                                          "literal": 0.0
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "*",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "current_accel_x",
                                          "type": "float",
                                          "initial-value": {
                                            "kind": "float-literal",
                                            "literal": 0.0
                                          }
                                        },
                                        "rhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "secs",
                                          "type": "float",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "secs",
                                      "type": "float",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "map_loaded",
                                              "type": "integer",
                                              "initial-value": {
                                                "kind": "int-literal",
                                                "literal": 0
                                              }
                                            },
                                            "rhs": {
                                              "kind": "int-literal",
                                              "literal": 1
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "map_loaded",
                                                "type": "integer",
                                                "initial-value": {
                                                  "kind": "int-literal",
                                                  "literal": 0
                                                }
                                              },
                                              "rhs": {
                                                "kind": "int-literal",
                                                "literal": 1
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "init_pos_set",
                                                "type": "integer",
                                                "initial-value": {
                                                  "kind": "int-literal",
                                                  "literal": 0
                                                }
                                              },
                                              "rhs": {
                                                "kind": "int-literal",
                                                "literal": 1
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "ofs",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "_offset",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "string-literal",
                                              "literal": "linear"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "linear"
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "_offset",
                                        "type": "string",
                                        "initial-value": {
                                          "kind": "string-literal",
                                          "literal": "linear"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "string-literal",
                                        "literal": "quadratic"
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:591:7, col:66>",
                                  "kind": "assignment",
                                  "variable": "offset_y",
                                  "unqualified_variable": "offset_y",
                                  "value": {
                                    "kind": "binary-expr",
                                    "operator": "*",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "+",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "current_velocity_y",
                                        "type": "float",
                                        "initial-value": {
                                          "kind": "float-literal",
                                          "literal": 0.0
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "*",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "current_accel_y",
                                          "type": "float",
                                          "initial-value": {
                                            "kind": "float-literal",
                                            "literal": 0.0
                                          }
                                        },
                                        "rhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "secs",
                                          "type": "float",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "secs",
                                      "type": "float",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "map_loaded",
                                              "type": "integer",
                                              "initial-value": {
                                                "kind": "int-literal",
                                                "literal": 0
                                              }
                                            },
                                            "rhs": {
                                              "kind": "int-literal",
                                              "literal": 1
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "map_loaded",
                                                "type": "integer",
                                                "initial-value": {
                                                  "kind": "int-literal",
                                                  "literal": 0
                                                }
                                              },
                                              "rhs": {
                                                "kind": "int-literal",
                                                "literal": 1
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "init_pos_set",
                                                "type": "integer",
                                                "initial-value": {
                                                  "kind": "int-literal",
                                                  "literal": 0
                                                }
                                              },
                                              "rhs": {
                                                "kind": "int-literal",
                                                "literal": 1
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "ofs",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "_offset",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "string-literal",
                                              "literal": "linear"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "linear"
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "_offset",
                                        "type": "string",
                                        "initial-value": {
                                          "kind": "string-literal",
                                          "literal": "linear"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "string-literal",
                                        "literal": "quadratic"
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:592:7, col:18>",
                                  "kind": "assignment",
                                  "variable": "offset_z",
                                  "unqualified_variable": "offset_z",
                                  "value": {
                                    "kind": "variable-reference",
                                    "qualified_name": "diff_z",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "float-literal",
                                      "literal": 0.0
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "map_loaded",
                                              "type": "integer",
                                              "initial-value": {
                                                "kind": "int-literal",
                                                "literal": 0
                                              }
                                            },
                                            "rhs": {
                                              "kind": "int-literal",
                                              "literal": 1
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "map_loaded",
                                                "type": "integer",
                                                "initial-value": {
                                                  "kind": "int-literal",
                                                  "literal": 0
                                                }
                                              },
                                              "rhs": {
                                                "kind": "int-literal",
                                                "literal": 1
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "init_pos_set",
                                                "type": "integer",
                                                "initial-value": {
                                                  "kind": "int-literal",
                                                  "literal": 0
                                                }
                                              },
                                              "rhs": {
                                                "kind": "int-literal",
                                                "literal": 1
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "ofs",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "_offset",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "string-literal",
                                              "literal": "linear"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "linear"
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "_offset",
                                        "type": "string",
                                        "initial-value": {
                                          "kind": "string-literal",
                                          "literal": "linear"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "string-literal",
                                        "literal": "quadratic"
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:593:7, col:20>",
                                  "kind": "assignment",
                                  "variable": "offset_yaw",
                                  "unqualified_variable": "offset_yaw",
                                  "value": {
                                    "kind": "variable-reference",
                                    "qualified_name": "diff_yaw",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "map_loaded",
                                              "type": "integer",
                                              "initial-value": {
                                                "kind": "int-literal",
                                                "literal": 0
                                              }
                                            },
                                            "rhs": {
                                              "kind": "int-literal",
                                              "literal": 1
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "map_loaded",
                                                "type": "integer",
                                                "initial-value": {
                                                  "kind": "int-literal",
                                                  "literal": 0
                                                }
                                              },
                                              "rhs": {
                                                "kind": "int-literal",
                                                "literal": 1
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "init_pos_set",
                                                "type": "integer",
                                                "initial-value": {
                                                  "kind": "int-literal",
                                                  "literal": 0
                                                }
                                              },
                                              "rhs": {
                                                "kind": "int-literal",
                                                "literal": 1
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "ofs",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "_offset",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "string-literal",
                                              "literal": "linear"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "linear"
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "_offset",
                                        "type": "string",
                                        "initial-value": {
                                          "kind": "string-literal",
                                          "literal": "linear"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "string-literal",
                                        "literal": "quadratic"
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "falseBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": [
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:595:10, line:601:5>",
                                  "kind": "if",
                                  "trueBranchBody": {
                                    "source-location": "",
                                    "kind": "compound",
                                    "statements": [
                                      {
                                        "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:597:7, col:18>",
                                        "kind": "assignment",
                                        "variable": "offset_x",
                                        "unqualified_variable": "offset_x",
                                        "value": {
                                          "kind": "float-literal",
                                          "literal": 0.0
                                        },
                                        "path_condition": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "&&",
                                                  "lhs": {
                                                    "kind": "binary-expr",
                                                    "operator": "==",
                                                    "lhs": {
                                                      "kind": "variable-reference",
                                                      "qualified_name": "map_loaded",
                                                      "type": "integer",
                                                      "initial-value": {
                                                        "kind": "int-literal",
                                                        "literal": 0
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "int-literal",
                                                      "literal": 1
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "binary-expr",
                                                    "operator": "&&",
                                                    "lhs": {
                                                      "kind": "binary-expr",
                                                      "operator": "==",
                                                      "lhs": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "map_loaded",
                                                        "type": "integer",
                                                        "initial-value": {
                                                          "kind": "int-literal",
                                                          "literal": 0
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "int-literal",
                                                        "literal": 1
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "binary-expr",
                                                      "operator": "==",
                                                      "lhs": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "init_pos_set",
                                                        "type": "integer",
                                                        "initial-value": {
                                                          "kind": "int-literal",
                                                          "literal": 0
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "int-literal",
                                                        "literal": 1
                                                      }
                                                    }
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "ofs",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "_offset",
                                                    "type": "string",
                                                    "initial-value": {
                                                      "kind": "string-literal",
                                                      "literal": "linear"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "string-literal",
                                                    "literal": "linear"
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_offset",
                                                  "type": "string",
                                                  "initial-value": {
                                                    "kind": "string-literal",
                                                    "literal": "linear"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "string-literal",
                                                  "literal": "quadratic"
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "_offset",
                                              "type": "string",
                                              "initial-value": {
                                                "kind": "string-literal",
                                                "literal": "linear"
                                              }
                                            },
                                            "rhs": {
                                              "kind": "string-literal",
                                              "literal": "zero"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:598:7, col:18>",
                                        "kind": "assignment",
                                        "variable": "offset_y",
                                        "unqualified_variable": "offset_y",
                                        "value": {
                                          "kind": "float-literal",
                                          "literal": 0.0
                                        },
                                        "path_condition": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "&&",
                                                  "lhs": {
                                                    "kind": "binary-expr",
                                                    "operator": "==",
                                                    "lhs": {
                                                      "kind": "variable-reference",
                                                      "qualified_name": "map_loaded",
                                                      "type": "integer",
                                                      "initial-value": {
                                                        "kind": "int-literal",
                                                        "literal": 0
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "int-literal",
                                                      "literal": 1
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "binary-expr",
                                                    "operator": "&&",
                                                    "lhs": {
                                                      "kind": "binary-expr",
                                                      "operator": "==",
                                                      "lhs": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "map_loaded",
                                                        "type": "integer",
                                                        "initial-value": {
                                                          "kind": "int-literal",
                                                          "literal": 0
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "int-literal",
                                                        "literal": 1
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "binary-expr",
                                                      "operator": "==",
                                                      "lhs": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "init_pos_set",
                                                        "type": "integer",
                                                        "initial-value": {
                                                          "kind": "int-literal",
                                                          "literal": 0
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "int-literal",
                                                        "literal": 1
                                                      }
                                                    }
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "ofs",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "_offset",
                                                    "type": "string",
                                                    "initial-value": {
                                                      "kind": "string-literal",
                                                      "literal": "linear"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "string-literal",
                                                    "literal": "linear"
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_offset",
                                                  "type": "string",
                                                  "initial-value": {
                                                    "kind": "string-literal",
                                                    "literal": "linear"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "string-literal",
                                                  "literal": "quadratic"
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "_offset",
                                              "type": "string",
                                              "initial-value": {
                                                "kind": "string-literal",
                                                "literal": "linear"
                                              }
                                            },
                                            "rhs": {
                                              "kind": "string-literal",
                                              "literal": "zero"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:599:7, col:18>",
                                        "kind": "assignment",
                                        "variable": "offset_z",
                                        "unqualified_variable": "offset_z",
                                        "value": {
                                          "kind": "float-literal",
                                          "literal": 0.0
                                        },
                                        "path_condition": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "&&",
                                                  "lhs": {
                                                    "kind": "binary-expr",
                                                    "operator": "==",
                                                    "lhs": {
                                                      "kind": "variable-reference",
                                                      "qualified_name": "map_loaded",
                                                      "type": "integer",
                                                      "initial-value": {
                                                        "kind": "int-literal",
                                                        "literal": 0
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "int-literal",
                                                      "literal": 1
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "binary-expr",
                                                    "operator": "&&",
                                                    "lhs": {
                                                      "kind": "binary-expr",
                                                      "operator": "==",
                                                      "lhs": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "map_loaded",
                                                        "type": "integer",
                                                        "initial-value": {
                                                          "kind": "int-literal",
                                                          "literal": 0
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "int-literal",
                                                        "literal": 1
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "binary-expr",
                                                      "operator": "==",
                                                      "lhs": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "init_pos_set",
                                                        "type": "integer",
                                                        "initial-value": {
                                                          "kind": "int-literal",
                                                          "literal": 0
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "int-literal",
                                                        "literal": 1
                                                      }
                                                    }
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "ofs",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "_offset",
                                                    "type": "string",
                                                    "initial-value": {
                                                      "kind": "string-literal",
                                                      "literal": "linear"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "string-literal",
                                                    "literal": "linear"
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_offset",
                                                  "type": "string",
                                                  "initial-value": {
                                                    "kind": "string-literal",
                                                    "literal": "linear"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "string-literal",
                                                  "literal": "quadratic"
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "_offset",
                                              "type": "string",
                                              "initial-value": {
                                                "kind": "string-literal",
                                                "literal": "linear"
                                              }
                                            },
                                            "rhs": {
                                              "kind": "string-literal",
                                              "literal": "zero"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:600:7, col:20>",
                                        "kind": "assignment",
                                        "variable": "offset_yaw",
                                        "unqualified_variable": "offset_yaw",
                                        "value": {
                                          "kind": "float-literal",
                                          "literal": 0.0
                                        },
                                        "path_condition": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "&&",
                                                  "lhs": {
                                                    "kind": "binary-expr",
                                                    "operator": "==",
                                                    "lhs": {
                                                      "kind": "variable-reference",
                                                      "qualified_name": "map_loaded",
                                                      "type": "integer",
                                                      "initial-value": {
                                                        "kind": "int-literal",
                                                        "literal": 0
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "int-literal",
                                                      "literal": 1
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "binary-expr",
                                                    "operator": "&&",
                                                    "lhs": {
                                                      "kind": "binary-expr",
                                                      "operator": "==",
                                                      "lhs": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "map_loaded",
                                                        "type": "integer",
                                                        "initial-value": {
                                                          "kind": "int-literal",
                                                          "literal": 0
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "int-literal",
                                                        "literal": 1
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "binary-expr",
                                                      "operator": "==",
                                                      "lhs": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "init_pos_set",
                                                        "type": "integer",
                                                        "initial-value": {
                                                          "kind": "int-literal",
                                                          "literal": 0
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "int-literal",
                                                        "literal": 1
                                                      }
                                                    }
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "ofs",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "_offset",
                                                    "type": "string",
                                                    "initial-value": {
                                                      "kind": "string-literal",
                                                      "literal": "linear"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "string-literal",
                                                    "literal": "linear"
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_offset",
                                                  "type": "string",
                                                  "initial-value": {
                                                    "kind": "string-literal",
                                                    "literal": "linear"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "string-literal",
                                                  "literal": "quadratic"
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "_offset",
                                              "type": "string",
                                              "initial-value": {
                                                "kind": "string-literal",
                                                "literal": "linear"
                                              }
                                            },
                                            "rhs": {
                                              "kind": "string-literal",
                                              "literal": "zero"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:597:7, col:18>",
                                        "kind": "assignment",
                                        "variable": "offset_x",
                                        "unqualified_variable": "offset_x",
                                        "value": {
                                          "kind": "float-literal",
                                          "literal": 0.0
                                        },
                                        "path_condition": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "&&",
                                                  "lhs": {
                                                    "kind": "binary-expr",
                                                    "operator": "==",
                                                    "lhs": {
                                                      "kind": "variable-reference",
                                                      "qualified_name": "map_loaded",
                                                      "type": "integer",
                                                      "initial-value": {
                                                        "kind": "int-literal",
                                                        "literal": 0
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "int-literal",
                                                      "literal": 1
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "binary-expr",
                                                    "operator": "&&",
                                                    "lhs": {
                                                      "kind": "binary-expr",
                                                      "operator": "==",
                                                      "lhs": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "map_loaded",
                                                        "type": "integer",
                                                        "initial-value": {
                                                          "kind": "int-literal",
                                                          "literal": 0
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "int-literal",
                                                        "literal": 1
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "binary-expr",
                                                      "operator": "==",
                                                      "lhs": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "init_pos_set",
                                                        "type": "integer",
                                                        "initial-value": {
                                                          "kind": "int-literal",
                                                          "literal": 0
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "int-literal",
                                                        "literal": 1
                                                      }
                                                    }
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "ofs",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "_offset",
                                                    "type": "string",
                                                    "initial-value": {
                                                      "kind": "string-literal",
                                                      "literal": "linear"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "string-literal",
                                                    "literal": "linear"
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_offset",
                                                  "type": "string",
                                                  "initial-value": {
                                                    "kind": "string-literal",
                                                    "literal": "linear"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "string-literal",
                                                  "literal": "quadratic"
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "_offset",
                                              "type": "string",
                                              "initial-value": {
                                                "kind": "string-literal",
                                                "literal": "linear"
                                              }
                                            },
                                            "rhs": {
                                              "kind": "string-literal",
                                              "literal": "zero"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:598:7, col:18>",
                                        "kind": "assignment",
                                        "variable": "offset_y",
                                        "unqualified_variable": "offset_y",
                                        "value": {
                                          "kind": "float-literal",
                                          "literal": 0.0
                                        },
                                        "path_condition": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "&&",
                                                  "lhs": {
                                                    "kind": "binary-expr",
                                                    "operator": "==",
                                                    "lhs": {
                                                      "kind": "variable-reference",
                                                      "qualified_name": "map_loaded",
                                                      "type": "integer",
                                                      "initial-value": {
                                                        "kind": "int-literal",
                                                        "literal": 0
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "int-literal",
                                                      "literal": 1
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "binary-expr",
                                                    "operator": "&&",
                                                    "lhs": {
                                                      "kind": "binary-expr",
                                                      "operator": "==",
                                                      "lhs": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "map_loaded",
                                                        "type": "integer",
                                                        "initial-value": {
                                                          "kind": "int-literal",
                                                          "literal": 0
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "int-literal",
                                                        "literal": 1
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "binary-expr",
                                                      "operator": "==",
                                                      "lhs": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "init_pos_set",
                                                        "type": "integer",
                                                        "initial-value": {
                                                          "kind": "int-literal",
                                                          "literal": 0
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "int-literal",
                                                        "literal": 1
                                                      }
                                                    }
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "ofs",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "_offset",
                                                    "type": "string",
                                                    "initial-value": {
                                                      "kind": "string-literal",
                                                      "literal": "linear"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "string-literal",
                                                    "literal": "linear"
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_offset",
                                                  "type": "string",
                                                  "initial-value": {
                                                    "kind": "string-literal",
                                                    "literal": "linear"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "string-literal",
                                                  "literal": "quadratic"
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "_offset",
                                              "type": "string",
                                              "initial-value": {
                                                "kind": "string-literal",
                                                "literal": "linear"
                                              }
                                            },
                                            "rhs": {
                                              "kind": "string-literal",
                                              "literal": "zero"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:599:7, col:18>",
                                        "kind": "assignment",
                                        "variable": "offset_z",
                                        "unqualified_variable": "offset_z",
                                        "value": {
                                          "kind": "float-literal",
                                          "literal": 0.0
                                        },
                                        "path_condition": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "&&",
                                                  "lhs": {
                                                    "kind": "binary-expr",
                                                    "operator": "==",
                                                    "lhs": {
                                                      "kind": "variable-reference",
                                                      "qualified_name": "map_loaded",
                                                      "type": "integer",
                                                      "initial-value": {
                                                        "kind": "int-literal",
                                                        "literal": 0
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "int-literal",
                                                      "literal": 1
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "binary-expr",
                                                    "operator": "&&",
                                                    "lhs": {
                                                      "kind": "binary-expr",
                                                      "operator": "==",
                                                      "lhs": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "map_loaded",
                                                        "type": "integer",
                                                        "initial-value": {
                                                          "kind": "int-literal",
                                                          "literal": 0
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "int-literal",
                                                        "literal": 1
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "binary-expr",
                                                      "operator": "==",
                                                      "lhs": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "init_pos_set",
                                                        "type": "integer",
                                                        "initial-value": {
                                                          "kind": "int-literal",
                                                          "literal": 0
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "int-literal",
                                                        "literal": 1
                                                      }
                                                    }
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "ofs",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "_offset",
                                                    "type": "string",
                                                    "initial-value": {
                                                      "kind": "string-literal",
                                                      "literal": "linear"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "string-literal",
                                                    "literal": "linear"
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_offset",
                                                  "type": "string",
                                                  "initial-value": {
                                                    "kind": "string-literal",
                                                    "literal": "linear"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "string-literal",
                                                  "literal": "quadratic"
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "_offset",
                                              "type": "string",
                                              "initial-value": {
                                                "kind": "string-literal",
                                                "literal": "linear"
                                              }
                                            },
                                            "rhs": {
                                              "kind": "string-literal",
                                              "literal": "zero"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:600:7, col:20>",
                                        "kind": "assignment",
                                        "variable": "offset_yaw",
                                        "unqualified_variable": "offset_yaw",
                                        "value": {
                                          "kind": "float-literal",
                                          "literal": 0.0
                                        },
                                        "path_condition": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "&&",
                                                  "lhs": {
                                                    "kind": "binary-expr",
                                                    "operator": "==",
                                                    "lhs": {
                                                      "kind": "variable-reference",
                                                      "qualified_name": "map_loaded",
                                                      "type": "integer",
                                                      "initial-value": {
                                                        "kind": "int-literal",
                                                        "literal": 0
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "int-literal",
                                                      "literal": 1
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "binary-expr",
                                                    "operator": "&&",
                                                    "lhs": {
                                                      "kind": "binary-expr",
                                                      "operator": "==",
                                                      "lhs": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "map_loaded",
                                                        "type": "integer",
                                                        "initial-value": {
                                                          "kind": "int-literal",
                                                          "literal": 0
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "int-literal",
                                                        "literal": 1
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "binary-expr",
                                                      "operator": "==",
                                                      "lhs": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "init_pos_set",
                                                        "type": "integer",
                                                        "initial-value": {
                                                          "kind": "int-literal",
                                                          "literal": 0
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "int-literal",
                                                        "literal": 1
                                                      }
                                                    }
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "ofs",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "_offset",
                                                    "type": "string",
                                                    "initial-value": {
                                                      "kind": "string-literal",
                                                      "literal": "linear"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "string-literal",
                                                    "literal": "linear"
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_offset",
                                                  "type": "string",
                                                  "initial-value": {
                                                    "kind": "string-literal",
                                                    "literal": "linear"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "string-literal",
                                                  "literal": "quadratic"
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "_offset",
                                              "type": "string",
                                              "initial-value": {
                                                "kind": "string-literal",
                                                "literal": "linear"
                                              }
                                            },
                                            "rhs": {
                                              "kind": "string-literal",
                                              "literal": "zero"
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "falseBranchBody": {
                                    "source-location": "",
                                    "kind": "compound",
                                    "statements": []
                                  },
                                  "condition": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                }
                              ]
                            },
                            "condition": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        ]
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:604:5, col:36>",
                      "kind": "assignment",
                      "variable": "pose::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::x",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "current_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "map_loaded",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "ofs",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:605:5, col:36>",
                      "kind": "assignment",
                      "variable": "pose::y",
                      "unqualified_variable": "y",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::y",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "current_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "map_loaded",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "ofs",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:606:5, col:36>",
                      "kind": "assignment",
                      "variable": "pose::z",
                      "unqualified_variable": "z",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::z",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "current_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "map_loaded",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "ofs",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:607:5, col:39>",
                      "kind": "assignment",
                      "variable": "pose::roll",
                      "unqualified_variable": "roll",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::roll",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "current_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "map_loaded",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "ofs",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:608:5, col:40>",
                      "kind": "assignment",
                      "variable": "pose::pitch",
                      "unqualified_variable": "pitch",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::pitch",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "current_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "map_loaded",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "ofs",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:609:5, col:38>",
                      "kind": "assignment",
                      "variable": "pose::yaw",
                      "unqualified_variable": "yaw",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::yaw",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "current_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "map_loaded",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "ofs",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:611:5, col:48>",
                      "kind": "assignment",
                      "variable": "ros::TimeBase<ros::Time, ros::Duration>::sec",
                      "unqualified_variable": "sec",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "ros::TimeBase<ros::Time, ros::Duration>::sec",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "current_scan_time",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "map_loaded",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "ofs",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:612:5, col:49>",
                      "kind": "assignment",
                      "variable": "ros::TimeBase<ros::Time, ros::Duration>::nsec",
                      "unqualified_variable": "nsec",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "ros::TimeBase<ros::Time, ros::Duration>::nsec",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "current_scan_time",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "map_loaded",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "ofs",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:614:5, col:34>",
                      "kind": "assignment",
                      "variable": "previous_previous_velocity",
                      "unqualified_variable": "previous_previous_velocity",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "previous_velocity",
                        "type": "float",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "map_loaded",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "ofs",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:615:5, col:25>",
                      "kind": "assignment",
                      "variable": "previous_velocity",
                      "unqualified_variable": "previous_velocity",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "current_velocity",
                        "type": "float",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "map_loaded",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "ofs",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:616:5, col:27>",
                      "kind": "assignment",
                      "variable": "previous_velocity_x",
                      "unqualified_variable": "previous_velocity_x",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "current_velocity_x",
                        "type": "float",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "map_loaded",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "ofs",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:617:5, col:27>",
                      "kind": "assignment",
                      "variable": "previous_velocity_y",
                      "unqualified_variable": "previous_velocity_y",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "current_velocity_y",
                        "type": "float",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "map_loaded",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "ofs",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:618:5, col:27>",
                      "kind": "assignment",
                      "variable": "previous_velocity_z",
                      "unqualified_variable": "previous_velocity_z",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "current_velocity_z",
                        "type": "float",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "map_loaded",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "ofs",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:619:5, col:22>",
                      "kind": "assignment",
                      "variable": "previous_accel",
                      "unqualified_variable": "previous_accel",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "current_accel",
                        "type": "float",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "map_loaded",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "ofs",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:621:5, col:59>",
                      "kind": "assignment",
                      "variable": "std_msgs::Float32_<std::allocator<void>>::data",
                      "unqualified_variable": "data",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "std_msgs::Float32_<std::allocator<void>>::data",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "estimated_vel_kmph",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "map_loaded",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "ofs",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:313:5, col:53>",
                      "kind": "assignment",
                      "variable": "matching_start",
                      "unqualified_variable": "matching_start",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:322:5, col:39>",
                      "kind": "assignment",
                      "variable": "current_scan_time",
                      "unqualified_variable": "current_scan_time",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "std_msgs::Header_<std::allocator<void>>::stamp",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "member-var-ref",
                          "qualified_name": "sensor_msgs::PointCloud2_<std::allocator<void>>::header",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:338:5, col:40>",
                      "kind": "assignment",
                      "variable": "pose::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "+",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "pose::x",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "previous_pose",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "offset_x",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:339:5, col:40>",
                      "kind": "assignment",
                      "variable": "pose::y",
                      "unqualified_variable": "y",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "+",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "pose::y",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "previous_pose",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "offset_y",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:340:5, col:40>",
                      "kind": "assignment",
                      "variable": "pose::z",
                      "unqualified_variable": "z",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "+",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "pose::z",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "previous_pose",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "offset_z",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:341:5, col:39>",
                      "kind": "assignment",
                      "variable": "pose::roll",
                      "unqualified_variable": "roll",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::roll",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "previous_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:342:5, col:40>",
                      "kind": "assignment",
                      "variable": "pose::pitch",
                      "unqualified_variable": "pitch",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::pitch",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "previous_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:343:5, col:44>",
                      "kind": "assignment",
                      "variable": "pose::yaw",
                      "unqualified_variable": "yaw",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "+",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "pose::yaw",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "previous_pose",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "offset_yaw",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:359:5, col:50>",
                      "kind": "assignment",
                      "variable": "align_start",
                      "unqualified_variable": "align_start",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:361:5, col:48>",
                      "kind": "assignment",
                      "variable": "align_end",
                      "unqualified_variable": "align_end",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:362:5, col:107>",
                      "kind": "assignment",
                      "variable": "align_time",
                      "unqualified_variable": "align_time",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "/",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "float-literal",
                          "literal": 1000.0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:364:5, col:36>",
                      "kind": "assignment",
                      "variable": "t",
                      "unqualified_variable": "t",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:365:5, col:14>",
                      "kind": "assignment",
                      "variable": "t2",
                      "unqualified_variable": "t2",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:367:5, col:60>",
                      "kind": "assignment",
                      "variable": "getFitnessScore_start",
                      "unqualified_variable": "getFitnessScore_start",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:368:5, col:41>",
                      "kind": "assignment",
                      "variable": "fitness_score",
                      "unqualified_variable": "fitness_score",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:369:5, col:58>",
                      "kind": "assignment",
                      "variable": "getFitnessScore_end",
                      "unqualified_variable": "getFitnessScore_end",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:370:5, col:137>",
                      "kind": "assignment",
                      "variable": "getFitnessScore_time",
                      "unqualified_variable": "getFitnessScore_time",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "/",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "float-literal",
                          "literal": 1000.0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:378:5, col:30>",
                      "kind": "assignment",
                      "variable": "pose::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:379:5, col:30>",
                      "kind": "assignment",
                      "variable": "pose::y",
                      "unqualified_variable": "y",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:380:5, col:30>",
                      "kind": "assignment",
                      "variable": "pose::z",
                      "unqualified_variable": "z",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:389:5, col:25>",
                      "kind": "assignment",
                      "variable": "pose::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:390:5, col:25>",
                      "kind": "assignment",
                      "variable": "pose::y",
                      "unqualified_variable": "y",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:391:5, col:25>",
                      "kind": "assignment",
                      "variable": "pose::z",
                      "unqualified_variable": "z",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:395:5, line:397:92>",
                      "kind": "assignment",
                      "variable": "predict_pose_error",
                      "unqualified_variable": "predict_pose_error",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:407:5, col:24>",
                      "kind": "assignment",
                      "variable": "use_predict_pose",
                      "unqualified_variable": "use_predict_pose",
                      "value": {
                        "kind": "int-literal",
                        "literal": 0
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:429:5, col:41>",
                      "kind": "assignment",
                      "variable": "scan_duration",
                      "unqualified_variable": "scan_duration",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:431:5, col:45>",
                      "kind": "assignment",
                      "variable": "diff_x",
                      "unqualified_variable": "diff_x",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "-",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "pose::x",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "current_pose",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "pose::x",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "previous_pose",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:432:5, col:45>",
                      "kind": "assignment",
                      "variable": "diff_y",
                      "unqualified_variable": "diff_y",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "-",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "pose::y",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "current_pose",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "pose::y",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "previous_pose",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:433:5, col:45>",
                      "kind": "assignment",
                      "variable": "diff_z",
                      "unqualified_variable": "diff_z",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "-",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "pose::z",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "current_pose",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "pose::z",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "previous_pose",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:434:5, col:49>",
                      "kind": "assignment",
                      "variable": "diff_yaw",
                      "unqualified_variable": "diff_yaw",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "-",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "pose::yaw",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "current_pose",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "pose::yaw",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "previous_pose",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:435:5, col:68>",
                      "kind": "assignment",
                      "variable": "diff",
                      "unqualified_variable": "diff",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:437:5, col:31>",
                      "kind": "assignment",
                      "variable": "current_velocity",
                      "unqualified_variable": "current_velocity",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "/",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "diff",
                          "type": "float",
                          "initial-value": {
                            "kind": "float-literal",
                            "literal": 0.0
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "secs",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:438:5, col:35>",
                      "kind": "assignment",
                      "variable": "current_velocity_x",
                      "unqualified_variable": "current_velocity_x",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "/",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "diff_x",
                          "type": "float",
                          "initial-value": {
                            "kind": "float-literal",
                            "literal": 0.0
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "secs",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:439:5, col:35>",
                      "kind": "assignment",
                      "variable": "current_velocity_y",
                      "unqualified_variable": "current_velocity_y",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "/",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "diff_y",
                          "type": "float",
                          "initial-value": {
                            "kind": "float-literal",
                            "literal": 0.0
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "secs",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:440:5, col:35>",
                      "kind": "assignment",
                      "variable": "current_velocity_z",
                      "unqualified_variable": "current_velocity_z",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "/",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "diff_z",
                          "type": "float",
                          "initial-value": {
                            "kind": "float-literal",
                            "literal": 0.0
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "secs",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:441:5, col:35>",
                      "kind": "assignment",
                      "variable": "angular_velocity",
                      "unqualified_variable": "angular_velocity",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "/",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "diff_yaw",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "secs",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:443:5, col:101>",
                      "kind": "assignment",
                      "variable": "current_velocity_smooth",
                      "unqualified_variable": "current_velocity_smooth",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "/",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "+",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "+",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "current_velocity",
                              "type": "float",
                              "initial-value": {
                                "kind": "float-literal",
                                "literal": 0.0
                              }
                            },
                            "rhs": {
                              "kind": "variable-reference",
                              "qualified_name": "previous_velocity",
                              "type": "float",
                              "initial-value": {
                                "kind": "float-literal",
                                "literal": 0.0
                              }
                            }
                          },
                          "rhs": {
                            "kind": "variable-reference",
                            "qualified_name": "previous_previous_velocity",
                            "type": "float",
                            "initial-value": {
                              "kind": "float-literal",
                              "literal": 0.0
                            }
                          }
                        },
                        "rhs": {
                          "kind": "float-literal",
                          "literal": 3.0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:449:5, col:62>",
                      "kind": "assignment",
                      "variable": "current_accel",
                      "unqualified_variable": "current_accel",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "/",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "-",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "current_velocity",
                            "type": "float",
                            "initial-value": {
                              "kind": "float-literal",
                              "literal": 0.0
                            }
                          },
                          "rhs": {
                            "kind": "variable-reference",
                            "qualified_name": "previous_velocity",
                            "type": "float",
                            "initial-value": {
                              "kind": "float-literal",
                              "literal": 0.0
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "secs",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:450:5, col:68>",
                      "kind": "assignment",
                      "variable": "current_accel_x",
                      "unqualified_variable": "current_accel_x",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "/",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "-",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "current_velocity_x",
                            "type": "float",
                            "initial-value": {
                              "kind": "float-literal",
                              "literal": 0.0
                            }
                          },
                          "rhs": {
                            "kind": "variable-reference",
                            "qualified_name": "previous_velocity_x",
                            "type": "float",
                            "initial-value": {
                              "kind": "float-literal",
                              "literal": 0.0
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "secs",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:451:5, col:68>",
                      "kind": "assignment",
                      "variable": "current_accel_y",
                      "unqualified_variable": "current_accel_y",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "/",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "-",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "current_velocity_y",
                            "type": "float",
                            "initial-value": {
                              "kind": "float-literal",
                              "literal": 0.0
                            }
                          },
                          "rhs": {
                            "kind": "variable-reference",
                            "qualified_name": "previous_velocity_y",
                            "type": "float",
                            "initial-value": {
                              "kind": "float-literal",
                              "literal": 0.0
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "secs",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:452:5, col:68>",
                      "kind": "assignment",
                      "variable": "current_accel_z",
                      "unqualified_variable": "current_accel_z",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "/",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "-",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "current_velocity_z",
                            "type": "float",
                            "initial-value": {
                              "kind": "float-literal",
                              "literal": 0.0
                            }
                          },
                          "rhs": {
                            "kind": "variable-reference",
                            "qualified_name": "previous_velocity_z",
                            "type": "float",
                            "initial-value": {
                              "kind": "float-literal",
                              "literal": 0.0
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "secs",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:454:5, col:30>",
                      "kind": "assignment",
                      "variable": "std_msgs::Float32_<std::allocator<void>>::data",
                      "unqualified_variable": "data",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "current_velocity",
                        "type": "float",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:455:5, col:50>",
                      "kind": "assignment",
                      "variable": "std_msgs::Float32_<std::allocator<void>>::data",
                      "unqualified_variable": "data",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "*",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "current_velocity",
                          "type": "float",
                          "initial-value": {
                            "kind": "float-literal",
                            "literal": 0.0
                          }
                        },
                        "rhs": {
                          "kind": "float-literal",
                          "literal": 3.6
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:457:5, col:52>",
                      "kind": "publish",
                      "publisher": "estimated_vel_mps_pub",
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:458:5, col:54>",
                      "kind": "publish",
                      "publisher": "estimated_vel_kmph_pub",
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:462:5, col:40>",
                      "kind": "assignment",
                      "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                      "unqualified_variable": "frame_id",
                      "value": {
                        "kind": "string-literal",
                        "literal": "/map"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:463:5, col:37>",
                      "kind": "assignment",
                      "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                      "unqualified_variable": "stamp",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "current_scan_time",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:464:5, col:53>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Point_<std::allocator<void>>::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::x",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "predict_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:465:5, col:53>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Point_<std::allocator<void>>::y",
                      "unqualified_variable": "y",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::y",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "predict_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:466:5, col:53>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Point_<std::allocator<void>>::z",
                      "unqualified_variable": "z",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::z",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "predict_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:467:5, col:55>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:468:5, col:55>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::y",
                      "unqualified_variable": "y",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:469:5, col:55>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::z",
                      "unqualified_variable": "z",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:470:5, col:55>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::w",
                      "unqualified_variable": "w",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:473:5, col:36>",
                      "kind": "assignment",
                      "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                      "unqualified_variable": "frame_id",
                      "value": {
                        "kind": "string-literal",
                        "literal": "/map"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:474:5, col:33>",
                      "kind": "assignment",
                      "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                      "unqualified_variable": "stamp",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "current_scan_time",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:475:5, col:45>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Point_<std::allocator<void>>::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::x",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "icp_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:476:5, col:45>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Point_<std::allocator<void>>::y",
                      "unqualified_variable": "y",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::y",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "icp_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:477:5, col:45>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Point_<std::allocator<void>>::z",
                      "unqualified_variable": "z",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::z",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "icp_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:478:5, col:47>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:479:5, col:47>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::y",
                      "unqualified_variable": "y",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:480:5, col:47>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::z",
                      "unqualified_variable": "z",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:481:5, col:47>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::w",
                      "unqualified_variable": "w",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:484:5, col:40>",
                      "kind": "assignment",
                      "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                      "unqualified_variable": "frame_id",
                      "value": {
                        "kind": "string-literal",
                        "literal": "/map"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:485:5, col:37>",
                      "kind": "assignment",
                      "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                      "unqualified_variable": "stamp",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "current_scan_time",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:486:5, col:53>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Point_<std::allocator<void>>::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::x",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "current_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:487:5, col:53>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Point_<std::allocator<void>>::y",
                      "unqualified_variable": "y",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::y",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "current_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:488:5, col:53>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Point_<std::allocator<void>>::z",
                      "unqualified_variable": "z",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::z",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "current_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:489:5, col:55>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:490:5, col:55>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::y",
                      "unqualified_variable": "y",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:491:5, col:55>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::z",
                      "unqualified_variable": "z",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:492:5, col:55>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::w",
                      "unqualified_variable": "w",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:495:5, col:42>",
                      "kind": "assignment",
                      "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                      "unqualified_variable": "frame_id",
                      "value": {
                        "kind": "string-literal",
                        "literal": "/map"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:496:5, col:39>",
                      "kind": "assignment",
                      "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                      "unqualified_variable": "stamp",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "current_scan_time",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:497:5, col:57>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Point_<std::allocator<void>>::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::x",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "localizer_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:498:5, col:57>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Point_<std::allocator<void>>::y",
                      "unqualified_variable": "y",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::y",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "localizer_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:499:5, col:57>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Point_<std::allocator<void>>::z",
                      "unqualified_variable": "z",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::z",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "localizer_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:500:5, col:59>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:501:5, col:59>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::y",
                      "unqualified_variable": "y",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:502:5, col:59>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::z",
                      "unqualified_variable": "z",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:503:5, col:59>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::w",
                      "unqualified_variable": "w",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:505:5, col:46>",
                      "kind": "publish",
                      "publisher": "predict_pose_pub",
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:506:5, col:38>",
                      "kind": "publish",
                      "publisher": "icp_pose_pub",
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:507:5, col:50>",
                      "kind": "publish",
                      "publisher": "localizer_pose_pub",
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:512:5, col:94>",
                      "kind": "publish",
                      "publisher": "tf_broadcaster",
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:514:5, col:51>",
                      "kind": "assignment",
                      "variable": "matching_end",
                      "unqualified_variable": "matching_end",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:515:5, col:111>",
                      "kind": "assignment",
                      "variable": "exe_time",
                      "unqualified_variable": "exe_time",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "/",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "float-literal",
                          "literal": 1000.0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:516:5, col:30>",
                      "kind": "assignment",
                      "variable": "std_msgs::Float32_<std::allocator<void>>::data",
                      "unqualified_variable": "data",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "exe_time",
                        "type": "float",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:517:5, col:52>",
                      "kind": "publish",
                      "publisher": "time_icp_matching_pub",
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:520:5, col:39>",
                      "kind": "assignment",
                      "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                      "unqualified_variable": "stamp",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "current_scan_time",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:521:5, col:41>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "current_velocity",
                        "type": "float",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:522:5, col:41>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Vector3_<std::allocator<void>>::y",
                      "unqualified_variable": "y",
                      "value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:523:5, col:41>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Vector3_<std::allocator<void>>::z",
                      "unqualified_variable": "z",
                      "value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:524:5, col:42>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:525:5, col:42>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Vector3_<std::allocator<void>>::y",
                      "unqualified_variable": "y",
                      "value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:526:5, col:42>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Vector3_<std::allocator<void>>::z",
                      "unqualified_variable": "z",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "angular_velocity",
                        "type": "float",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:528:5, col:50>",
                      "kind": "publish",
                      "publisher": "estimate_twist_pub",
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:531:5, col:37>",
                      "kind": "assignment",
                      "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                      "unqualified_variable": "stamp",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "current_scan_time",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:532:5, col:33>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "current_velocity",
                        "type": "float",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:533:5, col:47>",
                      "kind": "publish",
                      "publisher": "estimated_vel_pub",
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:536:5, col:33>",
                      "kind": "assignment",
                      "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                      "unqualified_variable": "stamp",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "current_scan_time",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:537:5, col:47>",
                      "kind": "assignment",
                      "variable": "autoware_msgs::ICPStat_<std::allocator<void>>::exe_time",
                      "unqualified_variable": "exe_time",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "std_msgs::Float32_<std::allocator<void>>::data",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "time_icp_matching",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:539:5, col:26>",
                      "kind": "assignment",
                      "variable": "autoware_msgs::ICPStat_<std::allocator<void>>::score",
                      "unqualified_variable": "score",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "fitness_score",
                        "type": "float",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:540:5, col:29>",
                      "kind": "assignment",
                      "variable": "autoware_msgs::ICPStat_<std::allocator<void>>::velocity",
                      "unqualified_variable": "velocity",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "current_velocity",
                        "type": "float",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:541:5, col:33>",
                      "kind": "assignment",
                      "variable": "autoware_msgs::ICPStat_<std::allocator<void>>::acceleration",
                      "unqualified_variable": "acceleration",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "current_accel",
                        "type": "float",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:542:5, col:37>",
                      "kind": "assignment",
                      "variable": "autoware_msgs::ICPStat_<std::allocator<void>>::use_predict_pose",
                      "unqualified_variable": "use_predict_pose",
                      "value": {
                        "kind": "int-literal",
                        "literal": 0
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:544:5, col:38>",
                      "kind": "publish",
                      "publisher": "icp_stat_pub",
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "map_loaded",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "init_pos_set",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:604:5, col:36>",
                      "kind": "assignment",
                      "variable": "pose::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::x",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "current_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "map_loaded",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "ofs",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:605:5, col:36>",
                      "kind": "assignment",
                      "variable": "pose::y",
                      "unqualified_variable": "y",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::y",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "current_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "map_loaded",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "ofs",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:606:5, col:36>",
                      "kind": "assignment",
                      "variable": "pose::z",
                      "unqualified_variable": "z",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::z",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "current_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "map_loaded",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "ofs",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:607:5, col:39>",
                      "kind": "assignment",
                      "variable": "pose::roll",
                      "unqualified_variable": "roll",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::roll",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "current_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "map_loaded",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "ofs",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:608:5, col:40>",
                      "kind": "assignment",
                      "variable": "pose::pitch",
                      "unqualified_variable": "pitch",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::pitch",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "current_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "map_loaded",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "ofs",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:609:5, col:38>",
                      "kind": "assignment",
                      "variable": "pose::yaw",
                      "unqualified_variable": "yaw",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::yaw",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "current_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "map_loaded",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "ofs",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:611:5, col:48>",
                      "kind": "assignment",
                      "variable": "ros::TimeBase<ros::Time, ros::Duration>::sec",
                      "unqualified_variable": "sec",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "ros::TimeBase<ros::Time, ros::Duration>::sec",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "current_scan_time",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "map_loaded",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "ofs",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:612:5, col:49>",
                      "kind": "assignment",
                      "variable": "ros::TimeBase<ros::Time, ros::Duration>::nsec",
                      "unqualified_variable": "nsec",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "ros::TimeBase<ros::Time, ros::Duration>::nsec",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "current_scan_time",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "map_loaded",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "ofs",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:614:5, col:34>",
                      "kind": "assignment",
                      "variable": "previous_previous_velocity",
                      "unqualified_variable": "previous_previous_velocity",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "previous_velocity",
                        "type": "float",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "map_loaded",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "ofs",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:615:5, col:25>",
                      "kind": "assignment",
                      "variable": "previous_velocity",
                      "unqualified_variable": "previous_velocity",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "current_velocity",
                        "type": "float",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "map_loaded",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "ofs",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:616:5, col:27>",
                      "kind": "assignment",
                      "variable": "previous_velocity_x",
                      "unqualified_variable": "previous_velocity_x",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "current_velocity_x",
                        "type": "float",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "map_loaded",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "ofs",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:617:5, col:27>",
                      "kind": "assignment",
                      "variable": "previous_velocity_y",
                      "unqualified_variable": "previous_velocity_y",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "current_velocity_y",
                        "type": "float",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "map_loaded",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "ofs",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:618:5, col:27>",
                      "kind": "assignment",
                      "variable": "previous_velocity_z",
                      "unqualified_variable": "previous_velocity_z",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "current_velocity_z",
                        "type": "float",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "map_loaded",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "ofs",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:619:5, col:22>",
                      "kind": "assignment",
                      "variable": "previous_accel",
                      "unqualified_variable": "previous_accel",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "current_accel",
                        "type": "float",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "map_loaded",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "ofs",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:621:5, col:59>",
                      "kind": "assignment",
                      "variable": "std_msgs::Float32_<std::allocator<void>>::data",
                      "unqualified_variable": "data",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "std_msgs::Float32_<std::allocator<void>>::data",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "estimated_vel_kmph",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "map_loaded",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "map_loaded",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "ofs",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              }
            ]
          }
        },
        {
          "name": "initialpose_callback",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:291:3, col:74>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "binary-expr",
                  "operator": "+",
                  "lhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "geometry_msgs::Point_<std::allocator<void>>::x",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "float-literal",
                      "literal": 0.0
                    },
                    "base": {
                      "kind": "member-var-ref",
                      "qualified_name": "geometry_msgs::Pose_<std::allocator<void>>::position",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "member-var-ref",
                        "qualified_name": "geometry_msgs::PoseWithCovariance_<std::allocator<void>>::pose",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "member-var-ref",
                          "qualified_name": "geometry_msgs::PoseWithCovarianceStamped_<std::allocator<void>>::pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "unknown"
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:292:3, col:74>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "binary-expr",
                  "operator": "+",
                  "lhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "geometry_msgs::Point_<std::allocator<void>>::y",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "float-literal",
                      "literal": 0.0
                    },
                    "base": {
                      "kind": "member-var-ref",
                      "qualified_name": "geometry_msgs::Pose_<std::allocator<void>>::position",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "member-var-ref",
                        "qualified_name": "geometry_msgs::PoseWithCovariance_<std::allocator<void>>::pose",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "member-var-ref",
                          "qualified_name": "geometry_msgs::PoseWithCovarianceStamped_<std::allocator<void>>::pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "unknown"
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:293:3, col:74>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "binary-expr",
                  "operator": "+",
                  "lhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "geometry_msgs::Point_<std::allocator<void>>::z",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "float-literal",
                      "literal": 0.0
                    },
                    "base": {
                      "kind": "member-var-ref",
                      "qualified_name": "geometry_msgs::Pose_<std::allocator<void>>::position",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "member-var-ref",
                        "qualified_name": "geometry_msgs::PoseWithCovariance_<std::allocator<void>>::pose",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "member-var-ref",
                          "qualified_name": "geometry_msgs::PoseWithCovarianceStamped_<std::allocator<void>>::pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "unknown"
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:296:3, col:34>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::x",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:297:3, col:34>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::y",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:298:3, col:34>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::z",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:299:3, col:37>",
                "kind": "assignment",
                "variable": "pose::roll",
                "unqualified_variable": "roll",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::roll",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:300:3, col:38>",
                "kind": "assignment",
                "variable": "pose::pitch",
                "unqualified_variable": "pitch",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::pitch",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:301:3, col:36>",
                "kind": "assignment",
                "variable": "pose::yaw",
                "unqualified_variable": "yaw",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::yaw",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:303:3, col:14>",
                "kind": "assignment",
                "variable": "offset_x",
                "unqualified_variable": "offset_x",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:304:3, col:14>",
                "kind": "assignment",
                "variable": "offset_y",
                "unqualified_variable": "offset_y",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:305:3, col:14>",
                "kind": "assignment",
                "variable": "offset_z",
                "unqualified_variable": "offset_z",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:306:3, col:16>",
                "kind": "assignment",
                "variable": "offset_yaw",
                "unqualified_variable": "offset_yaw",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:291:3, col:74>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "binary-expr",
                  "operator": "+",
                  "lhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "geometry_msgs::Point_<std::allocator<void>>::x",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "float-literal",
                      "literal": 0.0
                    },
                    "base": {
                      "kind": "member-var-ref",
                      "qualified_name": "geometry_msgs::Pose_<std::allocator<void>>::position",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "member-var-ref",
                        "qualified_name": "geometry_msgs::PoseWithCovariance_<std::allocator<void>>::pose",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "member-var-ref",
                          "qualified_name": "geometry_msgs::PoseWithCovarianceStamped_<std::allocator<void>>::pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "unknown"
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:292:3, col:74>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "binary-expr",
                  "operator": "+",
                  "lhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "geometry_msgs::Point_<std::allocator<void>>::y",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "float-literal",
                      "literal": 0.0
                    },
                    "base": {
                      "kind": "member-var-ref",
                      "qualified_name": "geometry_msgs::Pose_<std::allocator<void>>::position",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "member-var-ref",
                        "qualified_name": "geometry_msgs::PoseWithCovariance_<std::allocator<void>>::pose",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "member-var-ref",
                          "qualified_name": "geometry_msgs::PoseWithCovarianceStamped_<std::allocator<void>>::pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "unknown"
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:293:3, col:74>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "binary-expr",
                  "operator": "+",
                  "lhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "geometry_msgs::Point_<std::allocator<void>>::z",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "float-literal",
                      "literal": 0.0
                    },
                    "base": {
                      "kind": "member-var-ref",
                      "qualified_name": "geometry_msgs::Pose_<std::allocator<void>>::position",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "member-var-ref",
                        "qualified_name": "geometry_msgs::PoseWithCovariance_<std::allocator<void>>::pose",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "member-var-ref",
                          "qualified_name": "geometry_msgs::PoseWithCovarianceStamped_<std::allocator<void>>::pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "unknown"
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:296:3, col:34>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::x",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:297:3, col:34>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::y",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:298:3, col:34>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::z",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:299:3, col:37>",
                "kind": "assignment",
                "variable": "pose::roll",
                "unqualified_variable": "roll",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::roll",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:300:3, col:38>",
                "kind": "assignment",
                "variable": "pose::pitch",
                "unqualified_variable": "pitch",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::pitch",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:301:3, col:36>",
                "kind": "assignment",
                "variable": "pose::yaw",
                "unqualified_variable": "yaw",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::yaw",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:303:3, col:14>",
                "kind": "assignment",
                "variable": "offset_x",
                "unqualified_variable": "offset_x",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:304:3, col:14>",
                "kind": "assignment",
                "variable": "offset_y",
                "unqualified_variable": "offset_y",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:305:3, col:14>",
                "kind": "assignment",
                "variable": "offset_z",
                "unqualified_variable": "offset_z",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:306:3, col:16>",
                "kind": "assignment",
                "variable": "offset_yaw",
                "unqualified_variable": "offset_yaw",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        },
        {
          "name": "gnss_callback",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:236:3, col:46>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "geometry_msgs::Point_<std::allocator<void>>::x",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "qualified_name": "geometry_msgs::Pose_<std::allocator<void>>::position",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "member-var-ref",
                      "qualified_name": "geometry_msgs::PoseStamped_<std::allocator<void>>::pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "unknown"
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:237:3, col:46>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "geometry_msgs::Point_<std::allocator<void>>::y",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "qualified_name": "geometry_msgs::Pose_<std::allocator<void>>::position",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "member-var-ref",
                      "qualified_name": "geometry_msgs::PoseStamped_<std::allocator<void>>::pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "unknown"
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:238:3, col:46>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "geometry_msgs::Point_<std::allocator<void>>::z",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "qualified_name": "geometry_msgs::Pose_<std::allocator<void>>::position",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "member-var-ref",
                      "qualified_name": "geometry_msgs::PoseStamped_<std::allocator<void>>::pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "unknown"
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:243:5, col:42>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::x",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "previous_gnss_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "||",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "init_pos_set",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": ">=",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "fitness_score",
                          "type": "float",
                          "initial-value": {
                            "kind": "float-literal",
                            "literal": 0.0
                          }
                        },
                        "rhs": {
                          "kind": "float-literal",
                          "literal": 500.0
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_gnss",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_use_gnss",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:244:5, col:42>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::y",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "previous_gnss_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "||",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "init_pos_set",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": ">=",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "fitness_score",
                          "type": "float",
                          "initial-value": {
                            "kind": "float-literal",
                            "literal": 0.0
                          }
                        },
                        "rhs": {
                          "kind": "float-literal",
                          "literal": 500.0
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_gnss",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_use_gnss",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:245:5, col:42>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::z",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "previous_gnss_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "||",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "init_pos_set",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": ">=",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "fitness_score",
                          "type": "float",
                          "initial-value": {
                            "kind": "float-literal",
                            "literal": 0.0
                          }
                        },
                        "rhs": {
                          "kind": "float-literal",
                          "literal": 500.0
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_gnss",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_use_gnss",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:246:5, col:45>",
                "kind": "assignment",
                "variable": "pose::roll",
                "unqualified_variable": "roll",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::roll",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "previous_gnss_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "||",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "init_pos_set",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": ">=",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "fitness_score",
                          "type": "float",
                          "initial-value": {
                            "kind": "float-literal",
                            "literal": 0.0
                          }
                        },
                        "rhs": {
                          "kind": "float-literal",
                          "literal": 500.0
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_gnss",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_use_gnss",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:247:5, col:46>",
                "kind": "assignment",
                "variable": "pose::pitch",
                "unqualified_variable": "pitch",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::pitch",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "previous_gnss_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "||",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "init_pos_set",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": ">=",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "fitness_score",
                          "type": "float",
                          "initial-value": {
                            "kind": "float-literal",
                            "literal": 0.0
                          }
                        },
                        "rhs": {
                          "kind": "float-literal",
                          "literal": 500.0
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_gnss",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_use_gnss",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:248:5, col:44>",
                "kind": "assignment",
                "variable": "pose::yaw",
                "unqualified_variable": "yaw",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::yaw",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "previous_gnss_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "||",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "init_pos_set",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": ">=",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "fitness_score",
                          "type": "float",
                          "initial-value": {
                            "kind": "float-literal",
                            "literal": 0.0
                          }
                        },
                        "rhs": {
                          "kind": "float-literal",
                          "literal": 500.0
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_gnss",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_use_gnss",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:250:5, col:40>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::x",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_gnss_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "||",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "init_pos_set",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": ">=",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "fitness_score",
                          "type": "float",
                          "initial-value": {
                            "kind": "float-literal",
                            "literal": 0.0
                          }
                        },
                        "rhs": {
                          "kind": "float-literal",
                          "literal": 500.0
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_gnss",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_use_gnss",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:251:5, col:40>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::y",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_gnss_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "||",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "init_pos_set",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": ">=",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "fitness_score",
                          "type": "float",
                          "initial-value": {
                            "kind": "float-literal",
                            "literal": 0.0
                          }
                        },
                        "rhs": {
                          "kind": "float-literal",
                          "literal": 500.0
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_gnss",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_use_gnss",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:252:5, col:40>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::z",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_gnss_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "||",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "init_pos_set",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": ">=",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "fitness_score",
                          "type": "float",
                          "initial-value": {
                            "kind": "float-literal",
                            "literal": 0.0
                          }
                        },
                        "rhs": {
                          "kind": "float-literal",
                          "literal": 500.0
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_gnss",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_use_gnss",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:253:5, col:43>",
                "kind": "assignment",
                "variable": "pose::roll",
                "unqualified_variable": "roll",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::roll",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_gnss_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "||",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "init_pos_set",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": ">=",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "fitness_score",
                          "type": "float",
                          "initial-value": {
                            "kind": "float-literal",
                            "literal": 0.0
                          }
                        },
                        "rhs": {
                          "kind": "float-literal",
                          "literal": 500.0
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_gnss",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_use_gnss",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:254:5, col:44>",
                "kind": "assignment",
                "variable": "pose::pitch",
                "unqualified_variable": "pitch",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::pitch",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_gnss_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "||",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "init_pos_set",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": ">=",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "fitness_score",
                          "type": "float",
                          "initial-value": {
                            "kind": "float-literal",
                            "literal": 0.0
                          }
                        },
                        "rhs": {
                          "kind": "float-literal",
                          "literal": 500.0
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_gnss",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_use_gnss",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:255:5, col:42>",
                "kind": "assignment",
                "variable": "pose::yaw",
                "unqualified_variable": "yaw",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::yaw",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_gnss_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "||",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "init_pos_set",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": ">=",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "fitness_score",
                          "type": "float",
                          "initial-value": {
                            "kind": "float-literal",
                            "literal": 0.0
                          }
                        },
                        "rhs": {
                          "kind": "float-literal",
                          "literal": 500.0
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_gnss",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_use_gnss",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:257:5, col:47>",
                "kind": "assignment",
                "variable": "offset_x",
                "unqualified_variable": "offset_x",
                "value": {
                  "kind": "binary-expr",
                  "operator": "-",
                  "lhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "pose::x",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "current_pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "pose::x",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "previous_pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "||",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "init_pos_set",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": ">=",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "fitness_score",
                          "type": "float",
                          "initial-value": {
                            "kind": "float-literal",
                            "literal": 0.0
                          }
                        },
                        "rhs": {
                          "kind": "float-literal",
                          "literal": 500.0
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_gnss",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_use_gnss",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:258:5, col:47>",
                "kind": "assignment",
                "variable": "offset_y",
                "unqualified_variable": "offset_y",
                "value": {
                  "kind": "binary-expr",
                  "operator": "-",
                  "lhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "pose::y",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "current_pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "pose::y",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "previous_pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "||",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "init_pos_set",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": ">=",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "fitness_score",
                          "type": "float",
                          "initial-value": {
                            "kind": "float-literal",
                            "literal": 0.0
                          }
                        },
                        "rhs": {
                          "kind": "float-literal",
                          "literal": 500.0
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_gnss",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_use_gnss",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:259:5, col:47>",
                "kind": "assignment",
                "variable": "offset_z",
                "unqualified_variable": "offset_z",
                "value": {
                  "kind": "binary-expr",
                  "operator": "-",
                  "lhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "pose::z",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "current_pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "pose::z",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "previous_pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "||",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "init_pos_set",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": ">=",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "fitness_score",
                          "type": "float",
                          "initial-value": {
                            "kind": "float-literal",
                            "literal": 0.0
                          }
                        },
                        "rhs": {
                          "kind": "float-literal",
                          "literal": 500.0
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_gnss",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_use_gnss",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:260:5, col:51>",
                "kind": "assignment",
                "variable": "offset_yaw",
                "unqualified_variable": "offset_yaw",
                "value": {
                  "kind": "binary-expr",
                  "operator": "-",
                  "lhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "pose::yaw",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "current_pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "pose::yaw",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "previous_pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "||",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "init_pos_set",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": ">=",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "fitness_score",
                          "type": "float",
                          "initial-value": {
                            "kind": "float-literal",
                            "literal": 0.0
                          }
                        },
                        "rhs": {
                          "kind": "float-literal",
                          "literal": 500.0
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_gnss",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_use_gnss",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:262:5, col:20>",
                "kind": "assignment",
                "variable": "init_pos_set",
                "unqualified_variable": "init_pos_set",
                "value": {
                  "kind": "int-literal",
                  "literal": 1
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "||",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_gnss",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "init_pos_set",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": ">=",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "fitness_score",
                          "type": "float",
                          "initial-value": {
                            "kind": "float-literal",
                            "literal": 0.0
                          }
                        },
                        "rhs": {
                          "kind": "float-literal",
                          "literal": 500.0
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_gnss",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_use_gnss",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "init_pos_set",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:265:3, col:44>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::x",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_gnss_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:266:3, col:44>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::y",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_gnss_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:267:3, col:44>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::z",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_gnss_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:268:3, col:47>",
                "kind": "assignment",
                "variable": "pose::roll",
                "unqualified_variable": "roll",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::roll",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_gnss_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:269:3, col:48>",
                "kind": "assignment",
                "variable": "pose::pitch",
                "unqualified_variable": "pitch",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::pitch",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_gnss_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:270:3, col:46>",
                "kind": "assignment",
                "variable": "pose::yaw",
                "unqualified_variable": "yaw",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::yaw",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_gnss_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:236:3, col:46>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "geometry_msgs::Point_<std::allocator<void>>::x",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "qualified_name": "geometry_msgs::Pose_<std::allocator<void>>::position",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "member-var-ref",
                      "qualified_name": "geometry_msgs::PoseStamped_<std::allocator<void>>::pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "unknown"
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:237:3, col:46>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "geometry_msgs::Point_<std::allocator<void>>::y",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "qualified_name": "geometry_msgs::Pose_<std::allocator<void>>::position",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "member-var-ref",
                      "qualified_name": "geometry_msgs::PoseStamped_<std::allocator<void>>::pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "unknown"
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:238:3, col:46>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "geometry_msgs::Point_<std::allocator<void>>::z",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "qualified_name": "geometry_msgs::Pose_<std::allocator<void>>::position",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "member-var-ref",
                      "qualified_name": "geometry_msgs::PoseStamped_<std::allocator<void>>::pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "unknown"
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:241:3, line:263:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:243:5, col:42>",
                      "kind": "assignment",
                      "variable": "pose::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::x",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "previous_gnss_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_gnss",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "init_pos_set",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": ">=",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "fitness_score",
                                "type": "float",
                                "initial-value": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              },
                              "rhs": {
                                "kind": "float-literal",
                                "literal": 500.0
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:244:5, col:42>",
                      "kind": "assignment",
                      "variable": "pose::y",
                      "unqualified_variable": "y",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::y",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "previous_gnss_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_gnss",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "init_pos_set",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": ">=",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "fitness_score",
                                "type": "float",
                                "initial-value": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              },
                              "rhs": {
                                "kind": "float-literal",
                                "literal": 500.0
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:245:5, col:42>",
                      "kind": "assignment",
                      "variable": "pose::z",
                      "unqualified_variable": "z",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::z",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "previous_gnss_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_gnss",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "init_pos_set",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": ">=",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "fitness_score",
                                "type": "float",
                                "initial-value": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              },
                              "rhs": {
                                "kind": "float-literal",
                                "literal": 500.0
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:246:5, col:45>",
                      "kind": "assignment",
                      "variable": "pose::roll",
                      "unqualified_variable": "roll",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::roll",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "previous_gnss_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_gnss",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "init_pos_set",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": ">=",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "fitness_score",
                                "type": "float",
                                "initial-value": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              },
                              "rhs": {
                                "kind": "float-literal",
                                "literal": 500.0
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:247:5, col:46>",
                      "kind": "assignment",
                      "variable": "pose::pitch",
                      "unqualified_variable": "pitch",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::pitch",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "previous_gnss_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_gnss",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "init_pos_set",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": ">=",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "fitness_score",
                                "type": "float",
                                "initial-value": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              },
                              "rhs": {
                                "kind": "float-literal",
                                "literal": 500.0
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:248:5, col:44>",
                      "kind": "assignment",
                      "variable": "pose::yaw",
                      "unqualified_variable": "yaw",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::yaw",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "previous_gnss_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_gnss",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "init_pos_set",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": ">=",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "fitness_score",
                                "type": "float",
                                "initial-value": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              },
                              "rhs": {
                                "kind": "float-literal",
                                "literal": 500.0
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:250:5, col:40>",
                      "kind": "assignment",
                      "variable": "pose::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::x",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "current_gnss_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_gnss",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "init_pos_set",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": ">=",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "fitness_score",
                                "type": "float",
                                "initial-value": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              },
                              "rhs": {
                                "kind": "float-literal",
                                "literal": 500.0
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:251:5, col:40>",
                      "kind": "assignment",
                      "variable": "pose::y",
                      "unqualified_variable": "y",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::y",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "current_gnss_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_gnss",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "init_pos_set",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": ">=",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "fitness_score",
                                "type": "float",
                                "initial-value": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              },
                              "rhs": {
                                "kind": "float-literal",
                                "literal": 500.0
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:252:5, col:40>",
                      "kind": "assignment",
                      "variable": "pose::z",
                      "unqualified_variable": "z",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::z",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "current_gnss_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_gnss",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "init_pos_set",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": ">=",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "fitness_score",
                                "type": "float",
                                "initial-value": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              },
                              "rhs": {
                                "kind": "float-literal",
                                "literal": 500.0
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:253:5, col:43>",
                      "kind": "assignment",
                      "variable": "pose::roll",
                      "unqualified_variable": "roll",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::roll",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "current_gnss_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_gnss",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "init_pos_set",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": ">=",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "fitness_score",
                                "type": "float",
                                "initial-value": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              },
                              "rhs": {
                                "kind": "float-literal",
                                "literal": 500.0
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:254:5, col:44>",
                      "kind": "assignment",
                      "variable": "pose::pitch",
                      "unqualified_variable": "pitch",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::pitch",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "current_gnss_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_gnss",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "init_pos_set",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": ">=",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "fitness_score",
                                "type": "float",
                                "initial-value": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              },
                              "rhs": {
                                "kind": "float-literal",
                                "literal": 500.0
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:255:5, col:42>",
                      "kind": "assignment",
                      "variable": "pose::yaw",
                      "unqualified_variable": "yaw",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::yaw",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "current_gnss_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_gnss",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "init_pos_set",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": ">=",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "fitness_score",
                                "type": "float",
                                "initial-value": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              },
                              "rhs": {
                                "kind": "float-literal",
                                "literal": 500.0
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:257:5, col:47>",
                      "kind": "assignment",
                      "variable": "offset_x",
                      "unqualified_variable": "offset_x",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "-",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "pose::x",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "current_pose",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "pose::x",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "previous_pose",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_gnss",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "init_pos_set",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": ">=",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "fitness_score",
                                "type": "float",
                                "initial-value": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              },
                              "rhs": {
                                "kind": "float-literal",
                                "literal": 500.0
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:258:5, col:47>",
                      "kind": "assignment",
                      "variable": "offset_y",
                      "unqualified_variable": "offset_y",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "-",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "pose::y",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "current_pose",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "pose::y",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "previous_pose",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_gnss",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "init_pos_set",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": ">=",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "fitness_score",
                                "type": "float",
                                "initial-value": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              },
                              "rhs": {
                                "kind": "float-literal",
                                "literal": 500.0
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:259:5, col:47>",
                      "kind": "assignment",
                      "variable": "offset_z",
                      "unqualified_variable": "offset_z",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "-",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "pose::z",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "current_pose",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "pose::z",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "previous_pose",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_gnss",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "init_pos_set",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": ">=",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "fitness_score",
                                "type": "float",
                                "initial-value": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              },
                              "rhs": {
                                "kind": "float-literal",
                                "literal": 500.0
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:260:5, col:51>",
                      "kind": "assignment",
                      "variable": "offset_yaw",
                      "unqualified_variable": "offset_yaw",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "-",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "pose::yaw",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "current_pose",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "pose::yaw",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "previous_pose",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_gnss",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "init_pos_set",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": ">=",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "fitness_score",
                                "type": "float",
                                "initial-value": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              },
                              "rhs": {
                                "kind": "float-literal",
                                "literal": 500.0
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:262:5, col:20>",
                      "kind": "assignment",
                      "variable": "init_pos_set",
                      "unqualified_variable": "init_pos_set",
                      "value": {
                        "kind": "int-literal",
                        "literal": 1
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_gnss",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "init_pos_set",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": ">=",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "fitness_score",
                                "type": "float",
                                "initial-value": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              },
                              "rhs": {
                                "kind": "float-literal",
                                "literal": 500.0
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:243:5, col:42>",
                      "kind": "assignment",
                      "variable": "pose::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::x",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "previous_gnss_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_gnss",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "init_pos_set",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": ">=",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "fitness_score",
                                "type": "float",
                                "initial-value": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              },
                              "rhs": {
                                "kind": "float-literal",
                                "literal": 500.0
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:244:5, col:42>",
                      "kind": "assignment",
                      "variable": "pose::y",
                      "unqualified_variable": "y",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::y",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "previous_gnss_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_gnss",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "init_pos_set",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": ">=",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "fitness_score",
                                "type": "float",
                                "initial-value": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              },
                              "rhs": {
                                "kind": "float-literal",
                                "literal": 500.0
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:245:5, col:42>",
                      "kind": "assignment",
                      "variable": "pose::z",
                      "unqualified_variable": "z",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::z",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "previous_gnss_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_gnss",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "init_pos_set",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": ">=",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "fitness_score",
                                "type": "float",
                                "initial-value": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              },
                              "rhs": {
                                "kind": "float-literal",
                                "literal": 500.0
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:246:5, col:45>",
                      "kind": "assignment",
                      "variable": "pose::roll",
                      "unqualified_variable": "roll",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::roll",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "previous_gnss_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_gnss",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "init_pos_set",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": ">=",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "fitness_score",
                                "type": "float",
                                "initial-value": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              },
                              "rhs": {
                                "kind": "float-literal",
                                "literal": 500.0
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:247:5, col:46>",
                      "kind": "assignment",
                      "variable": "pose::pitch",
                      "unqualified_variable": "pitch",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::pitch",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "previous_gnss_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_gnss",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "init_pos_set",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": ">=",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "fitness_score",
                                "type": "float",
                                "initial-value": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              },
                              "rhs": {
                                "kind": "float-literal",
                                "literal": 500.0
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:248:5, col:44>",
                      "kind": "assignment",
                      "variable": "pose::yaw",
                      "unqualified_variable": "yaw",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::yaw",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "previous_gnss_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_gnss",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "init_pos_set",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": ">=",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "fitness_score",
                                "type": "float",
                                "initial-value": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              },
                              "rhs": {
                                "kind": "float-literal",
                                "literal": 500.0
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:250:5, col:40>",
                      "kind": "assignment",
                      "variable": "pose::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::x",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "current_gnss_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_gnss",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "init_pos_set",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": ">=",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "fitness_score",
                                "type": "float",
                                "initial-value": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              },
                              "rhs": {
                                "kind": "float-literal",
                                "literal": 500.0
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:251:5, col:40>",
                      "kind": "assignment",
                      "variable": "pose::y",
                      "unqualified_variable": "y",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::y",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "current_gnss_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_gnss",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "init_pos_set",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": ">=",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "fitness_score",
                                "type": "float",
                                "initial-value": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              },
                              "rhs": {
                                "kind": "float-literal",
                                "literal": 500.0
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:252:5, col:40>",
                      "kind": "assignment",
                      "variable": "pose::z",
                      "unqualified_variable": "z",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::z",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "current_gnss_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_gnss",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "init_pos_set",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": ">=",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "fitness_score",
                                "type": "float",
                                "initial-value": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              },
                              "rhs": {
                                "kind": "float-literal",
                                "literal": 500.0
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:253:5, col:43>",
                      "kind": "assignment",
                      "variable": "pose::roll",
                      "unqualified_variable": "roll",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::roll",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "current_gnss_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_gnss",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "init_pos_set",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": ">=",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "fitness_score",
                                "type": "float",
                                "initial-value": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              },
                              "rhs": {
                                "kind": "float-literal",
                                "literal": 500.0
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:254:5, col:44>",
                      "kind": "assignment",
                      "variable": "pose::pitch",
                      "unqualified_variable": "pitch",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::pitch",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "current_gnss_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_gnss",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "init_pos_set",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": ">=",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "fitness_score",
                                "type": "float",
                                "initial-value": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              },
                              "rhs": {
                                "kind": "float-literal",
                                "literal": 500.0
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:255:5, col:42>",
                      "kind": "assignment",
                      "variable": "pose::yaw",
                      "unqualified_variable": "yaw",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::yaw",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "current_gnss_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_gnss",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "init_pos_set",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": ">=",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "fitness_score",
                                "type": "float",
                                "initial-value": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              },
                              "rhs": {
                                "kind": "float-literal",
                                "literal": 500.0
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:257:5, col:47>",
                      "kind": "assignment",
                      "variable": "offset_x",
                      "unqualified_variable": "offset_x",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "-",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "pose::x",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "current_pose",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "pose::x",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "previous_pose",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_gnss",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "init_pos_set",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": ">=",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "fitness_score",
                                "type": "float",
                                "initial-value": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              },
                              "rhs": {
                                "kind": "float-literal",
                                "literal": 500.0
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:258:5, col:47>",
                      "kind": "assignment",
                      "variable": "offset_y",
                      "unqualified_variable": "offset_y",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "-",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "pose::y",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "current_pose",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "pose::y",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "previous_pose",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_gnss",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "init_pos_set",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": ">=",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "fitness_score",
                                "type": "float",
                                "initial-value": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              },
                              "rhs": {
                                "kind": "float-literal",
                                "literal": 500.0
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:259:5, col:47>",
                      "kind": "assignment",
                      "variable": "offset_z",
                      "unqualified_variable": "offset_z",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "-",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "pose::z",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "current_pose",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "pose::z",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "previous_pose",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_gnss",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "init_pos_set",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": ">=",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "fitness_score",
                                "type": "float",
                                "initial-value": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              },
                              "rhs": {
                                "kind": "float-literal",
                                "literal": 500.0
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:260:5, col:51>",
                      "kind": "assignment",
                      "variable": "offset_yaw",
                      "unqualified_variable": "offset_yaw",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "-",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "pose::yaw",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "current_pose",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "pose::yaw",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "previous_pose",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_gnss",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "init_pos_set",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": ">=",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "fitness_score",
                                "type": "float",
                                "initial-value": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              },
                              "rhs": {
                                "kind": "float-literal",
                                "literal": 500.0
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:262:5, col:20>",
                      "kind": "assignment",
                      "variable": "init_pos_set",
                      "unqualified_variable": "init_pos_set",
                      "value": {
                        "kind": "int-literal",
                        "literal": 1
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_gnss",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 1
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "init_pos_set",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_gnss",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "init_pos_set",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": ">=",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "fitness_score",
                                "type": "float",
                                "initial-value": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              },
                              "rhs": {
                                "kind": "float-literal",
                                "literal": 500.0
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_gnss",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_gnss",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 1
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "init_pos_set",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:265:3, col:44>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::x",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_gnss_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:266:3, col:44>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::y",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_gnss_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:267:3, col:44>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::z",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_gnss_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:268:3, col:47>",
                "kind": "assignment",
                "variable": "pose::roll",
                "unqualified_variable": "roll",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::roll",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_gnss_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:269:3, col:48>",
                "kind": "assignment",
                "variable": "pose::pitch",
                "unqualified_variable": "pitch",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::pitch",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_gnss_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:270:3, col:46>",
                "kind": "assignment",
                "variable": "pose::yaw",
                "unqualified_variable": "yaw",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::yaw",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_gnss_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        },
        {
          "name": "map_callback",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:227:5, col:18>",
                "kind": "assignment",
                "variable": "map_loaded",
                "unqualified_variable": "map_loaded",
                "value": {
                  "kind": "int-literal",
                  "literal": 1
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "==",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "map_loaded",
                    "type": "integer",
                    "initial-value": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  },
                  "rhs": {
                    "kind": "int-literal",
                    "literal": 0
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:217:3, line:228:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:227:5, col:18>",
                      "kind": "assignment",
                      "variable": "map_loaded",
                      "unqualified_variable": "map_loaded",
                      "value": {
                        "kind": "int-literal",
                        "literal": 1
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "map_loaded",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:227:5, col:18>",
                      "kind": "assignment",
                      "variable": "map_loaded",
                      "unqualified_variable": "map_loaded",
                      "value": {
                        "kind": "int-literal",
                        "literal": 1
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "map_loaded",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              }
            ]
          }
        },
        {
          "name": "main",
          "parameters": [
            {
              "index": 0,
              "name": "argc",
              "type": "integer"
            }
          ],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:627:3, col:39>",
                "kind": "ros-init",
                "name": {
                  "kind": "string-literal",
                  "literal": "icp_matching"
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:637:3, col:54>",
                "kind": "assignment",
                "variable": "filename",
                "unqualified_variable": "filename",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:641:3, col:44>",
                "kind": "assignment",
                "variable": "v0",
                "unqualified_variable": "v0",
                "value": {
                  "source-location": "",
                  "kind": "reads-param",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "use_gnss"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:642:3, col:48>",
                "kind": "assignment",
                "variable": "v1",
                "unqualified_variable": "v1",
                "value": {
                  "source-location": "",
                  "kind": "reads-param",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "queue_size"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:643:3, col:40>",
                "kind": "assignment",
                "variable": "v2",
                "unqualified_variable": "v2",
                "value": {
                  "source-location": "",
                  "kind": "reads-param",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "offset"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:645:7, col:42>",
                "kind": "assignment",
                "variable": "v3",
                "unqualified_variable": "v3",
                "value": {
                  "source-location": "",
                  "kind": "reads-param",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": ""
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "localizer"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:651:7, col:32>",
                "kind": "assignment",
                "variable": "v4",
                "unqualified_variable": "v4",
                "value": {
                  "source-location": "",
                  "kind": "reads-param",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": ""
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "tf_x"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:656:7, col:32>",
                "kind": "assignment",
                "variable": "v5",
                "unqualified_variable": "v5",
                "value": {
                  "source-location": "",
                  "kind": "reads-param",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": ""
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "tf_y"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:661:7, col:32>",
                "kind": "assignment",
                "variable": "v6",
                "unqualified_variable": "v6",
                "value": {
                  "source-location": "",
                  "kind": "reads-param",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": ""
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "tf_z"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:666:7, col:38>",
                "kind": "assignment",
                "variable": "v7",
                "unqualified_variable": "v7",
                "value": {
                  "source-location": "",
                  "kind": "reads-param",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": ""
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "tf_roll"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:671:7, col:40>",
                "kind": "assignment",
                "variable": "v8",
                "unqualified_variable": "v8",
                "value": {
                  "source-location": "",
                  "kind": "reads-param",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": ""
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "tf_pitch"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:676:7, col:36>",
                "kind": "assignment",
                "variable": "v9",
                "unqualified_variable": "v9",
                "value": {
                  "source-location": "",
                  "kind": "reads-param",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": ""
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "tf_yaw"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:696:3, col:69>",
                "kind": "assignment",
                "variable": "tf_btol",
                "unqualified_variable": "tf_btol",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "unknown"
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:702:3, col:69>",
                "kind": "assignment",
                "variable": "tf_ltob",
                "unqualified_variable": "tf_ltob",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "unknown"
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:705:3, col:20>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "unknown"
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:706:3, col:20>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "unknown"
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:707:3, col:20>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "unknown"
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:708:3, col:23>",
                "kind": "assignment",
                "variable": "pose::roll",
                "unqualified_variable": "roll",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "unknown"
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:709:3, col:24>",
                "kind": "assignment",
                "variable": "pose::pitch",
                "unqualified_variable": "pitch",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "unknown"
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:710:3, col:22>",
                "kind": "assignment",
                "variable": "pose::yaw",
                "unqualified_variable": "yaw",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "unknown"
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:713:3, col:84>",
                "kind": "assignment",
                "variable": "predict_pose_pub",
                "unqualified_variable": "predict_pose_pub",
                "value": {
                  "kind": "string-literal",
                  "literal": "/predict_pose"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "unknown"
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:713:22, col:84>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/predict_pose"
                  }
                },
                "format": "geometry_msgs/PoseStamped",
                "source_location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:713:22, col:84>"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:714:3, col:76>",
                "kind": "assignment",
                "variable": "icp_pose_pub",
                "unqualified_variable": "icp_pose_pub",
                "value": {
                  "kind": "string-literal",
                  "literal": "/icp_pose"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "unknown"
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:714:18, col:76>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/icp_pose"
                  }
                },
                "format": "geometry_msgs/PoseStamped",
                "source_location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:714:18, col:76>"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:715:3, col:88>",
                "kind": "assignment",
                "variable": "localizer_pose_pub",
                "unqualified_variable": "localizer_pose_pub",
                "value": {
                  "kind": "string-literal",
                  "literal": "/localizer_pose"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "unknown"
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:715:24, col:88>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/localizer_pose"
                  }
                },
                "format": "geometry_msgs/PoseStamped",
                "source_location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:715:24, col:88>"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:716:3, col:89>",
                "kind": "assignment",
                "variable": "estimate_twist_pub",
                "unqualified_variable": "estimate_twist_pub",
                "value": {
                  "kind": "string-literal",
                  "literal": "/estimate_twist"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "unknown"
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:716:24, col:89>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/estimate_twist"
                  }
                },
                "format": "geometry_msgs/TwistStamped",
                "source_location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:716:24, col:89>"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:717:3, col:85>",
                "kind": "assignment",
                "variable": "estimated_vel_mps_pub",
                "unqualified_variable": "estimated_vel_mps_pub",
                "value": {
                  "kind": "string-literal",
                  "literal": "/estimated_vel_mps"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "unknown"
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:717:27, col:85>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/estimated_vel_mps"
                  }
                },
                "format": "std_msgs/Float32",
                "source_location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:717:27, col:85>"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:718:3, col:87>",
                "kind": "assignment",
                "variable": "estimated_vel_kmph_pub",
                "unqualified_variable": "estimated_vel_kmph_pub",
                "value": {
                  "kind": "string-literal",
                  "literal": "/estimated_vel_kmph"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "unknown"
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:718:28, col:87>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/estimated_vel_kmph"
                  }
                },
                "format": "std_msgs/Float32",
                "source_location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:718:28, col:87>"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:719:3, col:89>",
                "kind": "assignment",
                "variable": "estimated_vel_pub",
                "unqualified_variable": "estimated_vel_pub",
                "value": {
                  "kind": "string-literal",
                  "literal": "/estimated_vel"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "unknown"
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:719:23, col:89>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/estimated_vel"
                  }
                },
                "format": "geometry_msgs/Vector3Stamped",
                "source_location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:719:23, col:89>"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:720:3, col:85>",
                "kind": "assignment",
                "variable": "time_icp_matching_pub",
                "unqualified_variable": "time_icp_matching_pub",
                "value": {
                  "kind": "string-literal",
                  "literal": "/time_icp_matching"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "unknown"
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:720:27, col:85>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/time_icp_matching"
                  }
                },
                "format": "std_msgs/Float32",
                "source_location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:720:27, col:85>"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:721:3, col:72>",
                "kind": "assignment",
                "variable": "icp_stat_pub",
                "unqualified_variable": "icp_stat_pub",
                "value": {
                  "kind": "string-literal",
                  "literal": "/icp_stat"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "unknown"
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:721:18, col:72>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/icp_stat"
                  }
                },
                "format": "autoware_msgs/ICPStat",
                "source_location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:721:18, col:72>"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:724:31, col:76>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "config/icp"
                  }
                },
                "format": "autoware_config_msgs/ConfigICP",
                "callback-name": "param_callback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:724:31, col:76>",
                "kind": "call",
                "callee": "param_callback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:725:30, col:73>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "gnss_pose"
                  }
                },
                "format": "geometry_msgs/PoseStamped",
                "callback-name": "gnss_callback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:725:30, col:73>",
                "kind": "call",
                "callee": "gnss_callback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:726:29, col:72>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "points_map"
                  }
                },
                "format": "sensor_msgs/PointCloud2",
                "callback-name": "map_callback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:726:29, col:72>",
                "kind": "call",
                "callee": "map_callback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:727:37, col:91>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "initialpose"
                  }
                },
                "format": "geometry_msgs/PoseWithCovarianceStamped",
                "callback-name": "initialpose_callback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:727:37, col:91>",
                "kind": "call",
                "callee": "initialpose_callback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:728:32, col:92>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "filtered_points"
                  }
                },
                "format": "sensor_msgs/PointCloud2",
                "callback-name": "points_callback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:728:32, col:92>",
                "kind": "call",
                "callee": "points_callback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:627:3, col:39>",
                "kind": "ros-init",
                "name": {
                  "kind": "string-literal",
                  "literal": "icp_matching"
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:637:3, col:54>",
                "kind": "assignment",
                "variable": "filename",
                "unqualified_variable": "filename",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:641:3, col:44>",
                "kind": "assignment",
                "variable": "v10",
                "unqualified_variable": "v10",
                "value": {
                  "source-location": "",
                  "kind": "reads-param",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "use_gnss"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:642:3, col:48>",
                "kind": "assignment",
                "variable": "v11",
                "unqualified_variable": "v11",
                "value": {
                  "source-location": "",
                  "kind": "reads-param",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "queue_size"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:643:3, col:40>",
                "kind": "assignment",
                "variable": "v12",
                "unqualified_variable": "v12",
                "value": {
                  "source-location": "",
                  "kind": "reads-param",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "offset"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:645:3, line:649:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:651:3, line:655:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:656:3, line:660:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:661:3, line:665:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:666:3, line:670:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:671:3, line:675:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:676:3, line:680:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:696:3, col:69>",
                "kind": "assignment",
                "variable": "tf_btol",
                "unqualified_variable": "tf_btol",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "unknown"
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:702:3, col:69>",
                "kind": "assignment",
                "variable": "tf_ltob",
                "unqualified_variable": "tf_ltob",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "unknown"
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:705:3, col:20>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "unknown"
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:706:3, col:20>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "unknown"
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:707:3, col:20>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "unknown"
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:708:3, col:23>",
                "kind": "assignment",
                "variable": "pose::roll",
                "unqualified_variable": "roll",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "unknown"
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:709:3, col:24>",
                "kind": "assignment",
                "variable": "pose::pitch",
                "unqualified_variable": "pitch",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "unknown"
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:710:3, col:22>",
                "kind": "assignment",
                "variable": "pose::yaw",
                "unqualified_variable": "yaw",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "unknown"
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:713:3, col:84>",
                "kind": "assignment",
                "variable": "predict_pose_pub",
                "unqualified_variable": "predict_pose_pub",
                "value": {
                  "kind": "string-literal",
                  "literal": "/predict_pose"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "unknown"
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:713:22, col:84>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/predict_pose"
                  }
                },
                "format": "geometry_msgs/PoseStamped",
                "source_location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:713:22, col:84>"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:714:3, col:76>",
                "kind": "assignment",
                "variable": "icp_pose_pub",
                "unqualified_variable": "icp_pose_pub",
                "value": {
                  "kind": "string-literal",
                  "literal": "/icp_pose"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "unknown"
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:714:18, col:76>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/icp_pose"
                  }
                },
                "format": "geometry_msgs/PoseStamped",
                "source_location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:714:18, col:76>"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:715:3, col:88>",
                "kind": "assignment",
                "variable": "localizer_pose_pub",
                "unqualified_variable": "localizer_pose_pub",
                "value": {
                  "kind": "string-literal",
                  "literal": "/localizer_pose"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "unknown"
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:715:24, col:88>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/localizer_pose"
                  }
                },
                "format": "geometry_msgs/PoseStamped",
                "source_location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:715:24, col:88>"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:716:3, col:89>",
                "kind": "assignment",
                "variable": "estimate_twist_pub",
                "unqualified_variable": "estimate_twist_pub",
                "value": {
                  "kind": "string-literal",
                  "literal": "/estimate_twist"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "unknown"
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:716:24, col:89>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/estimate_twist"
                  }
                },
                "format": "geometry_msgs/TwistStamped",
                "source_location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:716:24, col:89>"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:717:3, col:85>",
                "kind": "assignment",
                "variable": "estimated_vel_mps_pub",
                "unqualified_variable": "estimated_vel_mps_pub",
                "value": {
                  "kind": "string-literal",
                  "literal": "/estimated_vel_mps"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "unknown"
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:717:27, col:85>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/estimated_vel_mps"
                  }
                },
                "format": "std_msgs/Float32",
                "source_location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:717:27, col:85>"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:718:3, col:87>",
                "kind": "assignment",
                "variable": "estimated_vel_kmph_pub",
                "unqualified_variable": "estimated_vel_kmph_pub",
                "value": {
                  "kind": "string-literal",
                  "literal": "/estimated_vel_kmph"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "unknown"
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:718:28, col:87>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/estimated_vel_kmph"
                  }
                },
                "format": "std_msgs/Float32",
                "source_location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:718:28, col:87>"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:719:3, col:89>",
                "kind": "assignment",
                "variable": "estimated_vel_pub",
                "unqualified_variable": "estimated_vel_pub",
                "value": {
                  "kind": "string-literal",
                  "literal": "/estimated_vel"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "unknown"
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:719:23, col:89>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/estimated_vel"
                  }
                },
                "format": "geometry_msgs/Vector3Stamped",
                "source_location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:719:23, col:89>"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:720:3, col:85>",
                "kind": "assignment",
                "variable": "time_icp_matching_pub",
                "unqualified_variable": "time_icp_matching_pub",
                "value": {
                  "kind": "string-literal",
                  "literal": "/time_icp_matching"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "unknown"
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:720:27, col:85>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/time_icp_matching"
                  }
                },
                "format": "std_msgs/Float32",
                "source_location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:720:27, col:85>"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:721:3, col:72>",
                "kind": "assignment",
                "variable": "icp_stat_pub",
                "unqualified_variable": "icp_stat_pub",
                "value": {
                  "kind": "string-literal",
                  "literal": "/icp_stat"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "unknown"
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:721:18, col:72>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/icp_stat"
                  }
                },
                "format": "autoware_msgs/ICPStat",
                "source_location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:721:18, col:72>"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:724:31, col:76>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "config/icp"
                  }
                },
                "format": "autoware_config_msgs/ConfigICP",
                "callback-name": "param_callback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:724:31, col:76>",
                "kind": "call",
                "callee": "param_callback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:725:30, col:73>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "gnss_pose"
                  }
                },
                "format": "geometry_msgs/PoseStamped",
                "callback-name": "gnss_callback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:725:30, col:73>",
                "kind": "call",
                "callee": "gnss_callback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:726:29, col:72>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "points_map"
                  }
                },
                "format": "sensor_msgs/PointCloud2",
                "callback-name": "map_callback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:726:29, col:72>",
                "kind": "call",
                "callee": "map_callback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:727:37, col:91>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "initialpose"
                  }
                },
                "format": "geometry_msgs/PoseWithCovarianceStamped",
                "callback-name": "initialpose_callback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:727:37, col:91>",
                "kind": "call",
                "callee": "initialpose_callback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:728:32, col:92>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "filtered_points"
                  }
                },
                "format": "sensor_msgs/PointCloud2",
                "callback-name": "points_callback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/icp_matching/icp_matching.cpp:728:32, col:92>",
                "kind": "call",
                "callee": "points_callback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        }
      ]
    }
  }
}