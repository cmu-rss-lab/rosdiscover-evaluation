{
  "image": {
    "sha256": "95a3283df69676a0a64484edcf6b09f886abb9ab1dec292863aa0bffd2ce613b"
  },
  "node-name": "obstacle_avoid",
  "package": {
    "name": "astar_planner",
    "path": "/home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner"
  },
  "sources": [
    "/home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp",
    "/home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_util.cpp",
    "/home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp",
    "/home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp"
  ],
  "program": {
    "program": {
      "entrypoint": "main",
      "functions": [
        {
          "name": "astar_planner::SearchInfo::currentVelocityCallback",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:104:3, col:45>",
                "kind": "assignment",
                "variable": "astar_planner::SearchInfo::current_velocity_mps_",
                "unqualified_variable": "current_velocity_mps_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "qualified_name": "geometry_msgs::Twist_<std::allocator<void>>::linear",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "member-var-ref",
                      "qualified_name": "geometry_msgs::TwistStamped_<std::allocator<void>>::twist",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "unknown"
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:104:3, col:45>",
                "kind": "assignment",
                "variable": "astar_planner::SearchInfo::current_velocity_mps_",
                "unqualified_variable": "current_velocity_mps_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "qualified_name": "geometry_msgs::Twist_<std::allocator<void>>::linear",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "member-var-ref",
                      "qualified_name": "geometry_msgs::TwistStamped_<std::allocator<void>>::twist",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "unknown"
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        },
        {
          "name": "astar_planner::SearchInfo::stateCallback",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:276:3, col:17>",
                "kind": "assignment",
                "variable": "astar_planner::SearchInfo::state_",
                "unqualified_variable": "state_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "std_msgs::String_<std::allocator<void>>::data",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:276:3, col:17>",
                "kind": "assignment",
                "variable": "astar_planner::SearchInfo::state_",
                "unqualified_variable": "state_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "std_msgs::String_<std::allocator<void>>::data",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        },
        {
          "name": "astar_planner::AstarSearch::broadcastPathTF",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:874:5, col:107>",
                "kind": "publish",
                "publisher": "tf_broadcaster",
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": ">=",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "i",
                    "type": "integer",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "int-literal",
                    "literal": 0
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:877:5, col:18>",
                "kind": "ratesleep",
                "rate": {
                  "kind": "float-literal",
                  "literal": 10.0
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:874:5, col:107>",
                "kind": "publish",
                "publisher": "tf_broadcaster",
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": ">=",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "i",
                    "type": "integer",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "int-literal",
                    "literal": 0
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:877:5, col:18>",
                "kind": "ratesleep",
                "rate": {
                  "kind": "float-literal",
                  "literal": 10.0
                }
              }
            ]
          }
        },
        {
          "name": "astar_planner::SearchInfo::SearchInfo",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:34:3, col:64>",
                "kind": "assignment",
                "variable": "v0",
                "unqualified_variable": "v0",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "map_frame"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:35:3, col:77>",
                "kind": "assignment",
                "variable": "v1",
                "unqualified_variable": "v1",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "obstacle_detect_count"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:36:3, col:63>",
                "kind": "assignment",
                "variable": "v2",
                "unqualified_variable": "v2",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "avoid_distance"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:37:3, col:89>",
                "kind": "assignment",
                "variable": "v3",
                "unqualified_variable": "v3",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "avoid_velocity_limit_mps"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:38:3, col:74>",
                "kind": "assignment",
                "variable": "v4",
                "unqualified_variable": "v4",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "upper_bound_ratio"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:39:3, col:57>",
                "kind": "assignment",
                "variable": "v5",
                "unqualified_variable": "v5",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "avoidance"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:40:3, col:60>",
                "kind": "assignment",
                "variable": "v6",
                "unqualified_variable": "v6",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "change_path"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:34:3, col:64>",
                "kind": "assignment",
                "variable": "v7",
                "unqualified_variable": "v7",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "map_frame"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:35:3, col:77>",
                "kind": "assignment",
                "variable": "v8",
                "unqualified_variable": "v8",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "obstacle_detect_count"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:36:3, col:63>",
                "kind": "assignment",
                "variable": "v9",
                "unqualified_variable": "v9",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "avoid_distance"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:37:3, col:89>",
                "kind": "assignment",
                "variable": "v10",
                "unqualified_variable": "v10",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "avoid_velocity_limit_mps"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:38:3, col:74>",
                "kind": "assignment",
                "variable": "v11",
                "unqualified_variable": "v11",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "upper_bound_ratio"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:39:3, col:57>",
                "kind": "assignment",
                "variable": "v12",
                "unqualified_variable": "v12",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "avoidance"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:40:3, col:60>",
                "kind": "assignment",
                "variable": "v13",
                "unqualified_variable": "v13",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "change_path"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        },
        {
          "name": "astar_planner::SearchInfo::currentPoseCallback",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:97:3, col:20>",
                "kind": "assignment",
                "variable": "astar_planner::SearchInfo::current_pose_",
                "unqualified_variable": "current_pose_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:97:3, col:20>",
                "kind": "assignment",
                "variable": "astar_planner::SearchInfo::current_pose_",
                "unqualified_variable": "current_pose_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        },
        {
          "name": "astar_planner::SearchInfo::mapCallback",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:69:3, col:11>",
                "kind": "assignment",
                "variable": "astar_planner::SearchInfo::map_",
                "unqualified_variable": "map_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:90:3, col:30>",
                "kind": "assignment",
                "variable": "astar_planner::SearchInfo::ogm2map_",
                "unqualified_variable": "ogm2map_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:92:3, col:14>",
                "kind": "assignment",
                "variable": "astar_planner::SearchInfo::map_set_",
                "unqualified_variable": "map_set_",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:69:3, col:11>",
                "kind": "assignment",
                "variable": "astar_planner::SearchInfo::map_",
                "unqualified_variable": "map_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:90:3, col:30>",
                "kind": "assignment",
                "variable": "astar_planner::SearchInfo::ogm2map_",
                "unqualified_variable": "ogm2map_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:92:3, col:14>",
                "kind": "assignment",
                "variable": "astar_planner::SearchInfo::map_set_",
                "unqualified_variable": "map_set_",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        },
        {
          "name": "astar_planner::AstarSearch::makePlan",
          "parameters": [
            {
              "index": 3,
              "name": "upper_bound_distance",
              "type": "float"
            }
          ],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:799:3, col:28>",
                "kind": "assignment",
                "variable": "geometry_msgs::PoseStamped_<std::allocator<void>>::pose",
                "unqualified_variable": "pose",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "start_pose",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:800:3, col:27>",
                "kind": "assignment",
                "variable": "geometry_msgs::PoseStamped_<std::allocator<void>>::pose",
                "unqualified_variable": "pose",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "transit_pose",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:814:8, col:20>",
                "kind": "call",
                "callee": "astar_planner::AstarSearch::setGoalNode",
                "arguments": {},
                "path_condition": {
                  "kind": "unknown"
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:824:5, col:41>",
                "kind": "publish",
                "publisher": "debug_pose_pub_",
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "unknown"
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "astar_planner::AstarSearch::publish_marker_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:833:3, col:28>",
                "kind": "assignment",
                "variable": "geometry_msgs::PoseStamped_<std::allocator<void>>::pose",
                "unqualified_variable": "pose",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "transit_pose",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "unknown"
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "result",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": false
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:834:3, col:27>",
                "kind": "assignment",
                "variable": "geometry_msgs::PoseStamped_<std::allocator<void>>::pose",
                "unqualified_variable": "pose",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "goal_pose",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "unknown"
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "result",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": false
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:842:8, col:20>",
                "kind": "call",
                "callee": "astar_planner::AstarSearch::setGoalNode",
                "arguments": {},
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "variable-reference",
                      "qualified_name": "result",
                      "type": "bool",
                      "initial-value": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:849:3, col:19>",
                "kind": "assignment",
                "variable": "result",
                "unqualified_variable": "result",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "variable-reference",
                        "qualified_name": "result",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:856:5, col:41>",
                "kind": "publish",
                "publisher": "debug_pose_pub_",
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "result",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      },
                      "rhs": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "astar_planner::AstarSearch::publish_marker_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:799:3, col:28>",
                "kind": "assignment",
                "variable": "geometry_msgs::PoseStamped_<std::allocator<void>>::pose",
                "unqualified_variable": "pose",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "start_pose",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:800:3, col:27>",
                "kind": "assignment",
                "variable": "geometry_msgs::PoseStamped_<std::allocator<void>>::pose",
                "unqualified_variable": "pose",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "transit_pose",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:814:3, line:818:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:823:3, line:824:41>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:824:5, col:41>",
                      "kind": "publish",
                      "publisher": "debug_pose_pub_",
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "astar_planner::AstarSearch::publish_marker_",
                          "type": "bool",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:824:5, col:41>",
                      "kind": "publish",
                      "publisher": "debug_pose_pub_",
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "astar_planner::AstarSearch::publish_marker_",
                          "type": "bool",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:833:3, col:28>",
                "kind": "assignment",
                "variable": "geometry_msgs::PoseStamped_<std::allocator<void>>::pose",
                "unqualified_variable": "pose",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "transit_pose",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "unknown"
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "result",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": false
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:834:3, col:27>",
                "kind": "assignment",
                "variable": "geometry_msgs::PoseStamped_<std::allocator<void>>::pose",
                "unqualified_variable": "pose",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "goal_pose",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "unknown"
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "result",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": false
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:842:3, line:846:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:849:3, col:19>",
                "kind": "assignment",
                "variable": "result",
                "unqualified_variable": "result",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "variable-reference",
                        "qualified_name": "result",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:855:3, line:856:41>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:856:5, col:41>",
                      "kind": "publish",
                      "publisher": "debug_pose_pub_",
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "variable-reference",
                                "qualified_name": "result",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            },
                            "rhs": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "astar_planner::AstarSearch::publish_marker_",
                          "type": "bool",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:856:5, col:41>",
                      "kind": "publish",
                      "publisher": "debug_pose_pub_",
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "variable-reference",
                                "qualified_name": "result",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            },
                            "rhs": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "astar_planner::AstarSearch::publish_marker_",
                          "type": "bool",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              }
            ]
          }
        },
        {
          "name": "astar_planner::AstarSearch::AstarSearch",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:24:3, col:66>",
                "kind": "assignment",
                "variable": "v0",
                "unqualified_variable": "v0",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "use_2dnav_goal"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:25:3, col:64>",
                "kind": "assignment",
                "variable": "v1",
                "unqualified_variable": "v1",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "map_frame"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:26:3, col:55>",
                "kind": "assignment",
                "variable": "v2",
                "unqualified_variable": "v2",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "angle_size"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:27:3, col:83>",
                "kind": "assignment",
                "variable": "v3",
                "unqualified_variable": "v3",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "minimum_turning_radius"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:28:3, col:71>",
                "kind": "assignment",
                "variable": "v4",
                "unqualified_variable": "v4",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "obstacle_threshold"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:29:3, col:54>",
                "kind": "assignment",
                "variable": "v5",
                "unqualified_variable": "v5",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "use_back"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:30:3, col:63>",
                "kind": "assignment",
                "variable": "v6",
                "unqualified_variable": "v6",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "robot_length"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:31:3, col:62>",
                "kind": "assignment",
                "variable": "v7",
                "unqualified_variable": "v7",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "robot_width"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:32:3, col:57>",
                "kind": "assignment",
                "variable": "v8",
                "unqualified_variable": "v8",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "base2back"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:33:3, col:64>",
                "kind": "assignment",
                "variable": "v9",
                "unqualified_variable": "v9",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "curve_weight"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:34:3, col:68>",
                "kind": "assignment",
                "variable": "v10",
                "unqualified_variable": "v10",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "reverse_weight"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:35:3, col:90>",
                "kind": "assignment",
                "variable": "v11",
                "unqualified_variable": "v11",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "distance_heuristic_weight"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:36:3, col:72>",
                "kind": "assignment",
                "variable": "v12",
                "unqualified_variable": "v12",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "potential_weight"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:37:3, col:85>",
                "kind": "assignment",
                "variable": "v13",
                "unqualified_variable": "v13",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "use_wavefront_heuristic"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:38:3, col:84>",
                "kind": "assignment",
                "variable": "v14",
                "unqualified_variable": "v14",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "use_potential_heuristic"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:39:3, col:60>",
                "kind": "assignment",
                "variable": "v15",
                "unqualified_variable": "v15",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "time_limit"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:40:3, col:75>",
                "kind": "assignment",
                "variable": "v16",
                "unqualified_variable": "v16",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "lateral_goal_range"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:41:3, col:85>",
                "kind": "assignment",
                "variable": "v17",
                "unqualified_variable": "v17",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "longitudinal_goal_range"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:42:3, col:72>",
                "kind": "assignment",
                "variable": "v18",
                "unqualified_variable": "v18",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "goal_angle_range"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:43:3, col:67>",
                "kind": "assignment",
                "variable": "v19",
                "unqualified_variable": "v19",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "publish_marker"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:24:3, col:66>",
                "kind": "assignment",
                "variable": "v20",
                "unqualified_variable": "v20",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "use_2dnav_goal"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:25:3, col:64>",
                "kind": "assignment",
                "variable": "v21",
                "unqualified_variable": "v21",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "map_frame"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:26:3, col:55>",
                "kind": "assignment",
                "variable": "v22",
                "unqualified_variable": "v22",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "angle_size"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:27:3, col:83>",
                "kind": "assignment",
                "variable": "v23",
                "unqualified_variable": "v23",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "minimum_turning_radius"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:28:3, col:71>",
                "kind": "assignment",
                "variable": "v24",
                "unqualified_variable": "v24",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "obstacle_threshold"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:29:3, col:54>",
                "kind": "assignment",
                "variable": "v25",
                "unqualified_variable": "v25",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "use_back"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:30:3, col:63>",
                "kind": "assignment",
                "variable": "v26",
                "unqualified_variable": "v26",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "robot_length"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:31:3, col:62>",
                "kind": "assignment",
                "variable": "v27",
                "unqualified_variable": "v27",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "robot_width"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:32:3, col:57>",
                "kind": "assignment",
                "variable": "v28",
                "unqualified_variable": "v28",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "base2back"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:33:3, col:64>",
                "kind": "assignment",
                "variable": "v29",
                "unqualified_variable": "v29",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "curve_weight"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:34:3, col:68>",
                "kind": "assignment",
                "variable": "v30",
                "unqualified_variable": "v30",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "reverse_weight"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:35:3, col:90>",
                "kind": "assignment",
                "variable": "v31",
                "unqualified_variable": "v31",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "distance_heuristic_weight"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:36:3, col:72>",
                "kind": "assignment",
                "variable": "v32",
                "unqualified_variable": "v32",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "potential_weight"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:37:3, col:85>",
                "kind": "assignment",
                "variable": "v33",
                "unqualified_variable": "v33",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "use_wavefront_heuristic"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:38:3, col:84>",
                "kind": "assignment",
                "variable": "v34",
                "unqualified_variable": "v34",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "use_potential_heuristic"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:39:3, col:60>",
                "kind": "assignment",
                "variable": "v35",
                "unqualified_variable": "v35",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "time_limit"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:40:3, col:75>",
                "kind": "assignment",
                "variable": "v36",
                "unqualified_variable": "v36",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "lateral_goal_range"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:41:3, col:85>",
                "kind": "assignment",
                "variable": "v37",
                "unqualified_variable": "v37",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "longitudinal_goal_range"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:42:3, col:72>",
                "kind": "assignment",
                "variable": "v38",
                "unqualified_variable": "v38",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "goal_angle_range"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:43:3, col:67>",
                "kind": "assignment",
                "variable": "v39",
                "unqualified_variable": "v39",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "publish_marker"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        },
        {
          "name": "astar_planner::SearchInfo::waypointsCallback",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:163:3, col:28>",
                "kind": "assignment",
                "variable": "astar_planner::SearchInfo::subscribed_waypoints_",
                "unqualified_variable": "subscribed_waypoints_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:167:5, col:27>",
                "kind": "assignment",
                "variable": "astar_planner::SearchInfo::current_waypoints_",
                "unqualified_variable": "current_waypoints_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "astar_planner::SearchInfo::path_set_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": false
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:168:5, col:17>",
                "kind": "assignment",
                "variable": "astar_planner::SearchInfo::path_set_",
                "unqualified_variable": "path_set_",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "astar_planner::SearchInfo::path_set_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": false
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:163:3, col:28>",
                "kind": "assignment",
                "variable": "astar_planner::SearchInfo::subscribed_waypoints_",
                "unqualified_variable": "subscribed_waypoints_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:165:3, line:169:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:167:5, col:27>",
                      "kind": "assignment",
                      "variable": "astar_planner::SearchInfo::current_waypoints_",
                      "unqualified_variable": "current_waypoints_",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "member-var-ref",
                          "qualified_name": "astar_planner::SearchInfo::path_set_",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:168:5, col:17>",
                      "kind": "assignment",
                      "variable": "astar_planner::SearchInfo::path_set_",
                      "unqualified_variable": "path_set_",
                      "value": {
                        "kind": "bool-literal",
                        "literal": true
                      },
                      "path_condition": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "member-var-ref",
                          "qualified_name": "astar_planner::SearchInfo::path_set_",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:167:5, col:27>",
                      "kind": "assignment",
                      "variable": "astar_planner::SearchInfo::current_waypoints_",
                      "unqualified_variable": "current_waypoints_",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "member-var-ref",
                          "qualified_name": "astar_planner::SearchInfo::path_set_",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:168:5, col:17>",
                      "kind": "assignment",
                      "variable": "astar_planner::SearchInfo::path_set_",
                      "unqualified_variable": "path_set_",
                      "value": {
                        "kind": "bool-literal",
                        "literal": true
                      },
                      "path_condition": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "member-var-ref",
                          "qualified_name": "astar_planner::SearchInfo::path_set_",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              }
            ]
          }
        },
        {
          "name": "astar_planner::AstarSearch::setGoalNode",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:577:3, col:87>",
                "kind": "assignment",
                "variable": "astar_planner::AstarSearch::goal_yaw_",
                "unqualified_variable": "goal_yaw_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:585:3, col:34>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "astar_planner::AstarSearch::map_frame_",
                  "type": "string",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "this-expr"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:587:3, col:39>",
                "kind": "publish",
                "publisher": "debug_pose_pub_",
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:577:3, col:87>",
                "kind": "assignment",
                "variable": "astar_planner::AstarSearch::goal_yaw_",
                "unqualified_variable": "goal_yaw_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:585:3, col:34>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "astar_planner::AstarSearch::map_frame_",
                  "type": "string",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "this-expr"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:587:3, col:39>",
                "kind": "publish",
                "publisher": "debug_pose_pub_",
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        },
        {
          "name": "main",
          "parameters": [
            {
              "index": 0,
              "name": "argc",
              "type": "integer"
            }
          ],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:94:3, col:41>",
                "kind": "ros-init",
                "name": {
                  "kind": "string-literal",
                  "literal": "obstacle_avoid"
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:97:30>",
                "kind": "call",
                "callee": "astar_planner::AstarSearch::AstarSearch",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:98:29>",
                "kind": "call",
                "callee": "astar_planner::SearchInfo::SearchInfo",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:101:29, line:102:94>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "grid_map_visualization/distance_transform"
                  }
                },
                "format": "nav_msgs/OccupancyGrid",
                "callback-name": "astar_planner::SearchInfo::mapCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:101:29, line:102:94>",
                "kind": "call",
                "callee": "astar_planner::SearchInfo::mapCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:104:7, col:99>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "current_pose"
                  }
                },
                "format": "geometry_msgs/PoseStamped",
                "callback-name": "astar_planner::SearchInfo::currentPoseCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:104:7, col:99>",
                "kind": "call",
                "callee": "astar_planner::SearchInfo::currentPoseCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:106:7, col:99>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "base_waypoints"
                  }
                },
                "format": "autoware_msgs/Lane",
                "callback-name": "astar_planner::SearchInfo::waypointsCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:106:7, col:99>",
                "kind": "call",
                "callee": "astar_planner::SearchInfo::waypointsCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:108:7, col:109>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "obstacle_waypoint"
                  }
                },
                "format": "std_msgs/Int32",
                "callback-name": "astar_planner::SearchInfo::obstacleWaypointCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:108:7, col:109>",
                "kind": "call",
                "callee": "astar_planner::SearchInfo::obstacleWaypointCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:110:7, col:107>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "closest_waypoint"
                  }
                },
                "format": "std_msgs/Int32",
                "callback-name": "astar_planner::SearchInfo::closestWaypointCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:110:7, col:107>",
                "kind": "call",
                "callee": "astar_planner::SearchInfo::closestWaypointCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:115:7, col:107>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "current_velocity"
                  }
                },
                "format": "geometry_msgs/TwistStamped",
                "callback-name": "astar_planner::SearchInfo::currentVelocityCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:115:7, col:107>",
                "kind": "call",
                "callee": "astar_planner::SearchInfo::currentVelocityCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:116:31, col:110>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "state"
                  }
                },
                "format": "std_msgs/String",
                "callback-name": "astar_planner::SearchInfo::stateCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:116:31, col:110>",
                "kind": "call",
                "callee": "astar_planner::SearchInfo::stateCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:119:29, col:78>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "astar_path"
                  }
                },
                "format": "nav_msgs/Path",
                "source_location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:119:29, col:78>"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:120:34, col:94>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "safety_waypoints"
                  }
                },
                "format": "autoware_msgs/Lane",
                "source_location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:120:34, col:94>"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:136:7, col:90>",
                "kind": "assignment",
                "variable": "closest_waypoint",
                "unqualified_variable": "closest_waypoint",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "variable-reference",
                  "qualified_name": "avoidance",
                  "type": "bool",
                  "initial-value": {
                    "kind": "bool-literal",
                    "literal": false
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:138:7, col:62>",
                "kind": "assignment",
                "variable": "closest_waypoint",
                "unqualified_variable": "closest_waypoint",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "variable-reference",
                    "qualified_name": "avoidance",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": false
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:143:7, col:23>",
                "kind": "ratesleep",
                "rate": {
                  "kind": "float-literal",
                  "literal": 10.0
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:151:7, col:104>",
                "kind": "assignment",
                "variable": "publish_lane",
                "unqualified_variable": "publish_lane",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "<",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "closest_waypoint",
                          "type": "integer",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "closest_waypoint",
                            "type": "integer",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "unknown"
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "variable-reference",
                      "qualified_name": "avoidance",
                      "type": "bool",
                      "initial-value": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:152:7, col:41>",
                "kind": "publish",
                "publisher": "waypoints_pub",
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "<",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "closest_waypoint",
                          "type": "integer",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "closest_waypoint",
                            "type": "integer",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "unknown"
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "variable-reference",
                      "qualified_name": "avoidance",
                      "type": "bool",
                      "initial-value": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:159:7, col:78>",
                "kind": "assignment",
                "variable": "publish_lane",
                "unqualified_variable": "publish_lane",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "<",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "closest_waypoint",
                          "type": "integer",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "closest_waypoint",
                            "type": "integer",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "unknown"
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "avoidance",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": false
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:160:7, col:41>",
                "kind": "publish",
                "publisher": "waypoints_pub",
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "<",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "closest_waypoint",
                          "type": "integer",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "closest_waypoint",
                            "type": "integer",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "unknown"
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "avoidance",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": false
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:165:9, col:21>",
                "kind": "assignment",
                "variable": "avoidance",
                "unqualified_variable": "avoidance",
                "value": {
                  "kind": "bool-literal",
                  "literal": false
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "closest_waypoint",
                            "type": "integer",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "closest_waypoint",
                              "type": "integer",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "unknown"
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "variable-reference",
                      "qualified_name": "avoidance",
                      "type": "bool",
                      "initial-value": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": ">",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "closest_waypoint",
                      "type": "integer",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "variable-reference",
                      "qualified_name": "end_of_avoid_index",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": -1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:170:9, col:25>",
                "kind": "ratesleep",
                "rate": {
                  "kind": "float-literal",
                  "literal": 10.0
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:183:7, col:23>",
                "kind": "ratesleep",
                "rate": {
                  "kind": "float-literal",
                  "literal": 10.0
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:190:19, line:191:69>",
                "kind": "call",
                "callee": "astar_planner::AstarSearch::makePlan",
                "arguments": {},
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "<",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "closest_waypoint",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "||",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "closest_waypoint",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "unknown"
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "variable-reference",
                              "qualified_name": "avoidance",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": ">",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "closest_waypoint",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "variable-reference",
                                "qualified_name": "end_of_avoid_index",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": -1
                                }
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "closest_waypoint",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "<",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "closest_waypoint",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "unknown"
                                  }
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "variable-reference",
                              "qualified_name": "avoidance",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "unknown"
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:203:7, col:19>",
                "kind": "assignment",
                "variable": "msec_sum",
                "unqualified_variable": "msec_sum",
                "value": {
                  "kind": "binary-expr",
                  "operator": "+",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "msec_sum",
                    "type": "float",
                    "initial-value": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "time_ms",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "closest_waypoint",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "<",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "closest_waypoint",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "unknown"
                                      }
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "variable-reference",
                                "qualified_name": "avoidance",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": ">",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "closest_waypoint",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "end_of_avoid_index",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  }
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "<",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "closest_waypoint",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "||",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "closest_waypoint",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "unknown"
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "variable-reference",
                                "qualified_name": "avoidance",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "unknown"
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "unknown"
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "unknown"
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:210:7, col:39>",
                "kind": "publish",
                "publisher": "path_pub",
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "closest_waypoint",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "<",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "closest_waypoint",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "unknown"
                                      }
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "variable-reference",
                                "qualified_name": "avoidance",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": ">",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "closest_waypoint",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "end_of_avoid_index",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  }
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "<",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "closest_waypoint",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "||",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "closest_waypoint",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "unknown"
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "variable-reference",
                                "qualified_name": "avoidance",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "unknown"
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "unknown"
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "result",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": false
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:215:9, col:21>",
                "kind": "assignment",
                "variable": "avoidance",
                "unqualified_variable": "avoidance",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "<",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "closest_waypoint",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "||",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "<",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "closest_waypoint",
                                          "type": "integer",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "unknown"
                                        }
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "avoidance",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": ">",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "closest_waypoint",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "end_of_avoid_index",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": -1
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "closest_waypoint",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "<",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "closest_waypoint",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "unknown"
                                      }
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "variable-reference",
                                  "qualified_name": "avoidance",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "unknown"
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "unknown"
                              }
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "unknown"
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "unknown"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "unknown"
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "variable-reference",
                      "qualified_name": "result",
                      "type": "bool",
                      "initial-value": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:226:5, col:21>",
                "kind": "ratesleep",
                "rate": {
                  "kind": "float-literal",
                  "literal": 10.0
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:94:3, col:41>",
                "kind": "ros-init",
                "name": {
                  "kind": "string-literal",
                  "literal": "obstacle_avoid"
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:97:30>",
                "kind": "call",
                "callee": "astar_planner::AstarSearch::AstarSearch",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:98:29>",
                "kind": "call",
                "callee": "astar_planner::SearchInfo::SearchInfo",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:101:29, line:102:94>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "grid_map_visualization/distance_transform"
                  }
                },
                "format": "nav_msgs/OccupancyGrid",
                "callback-name": "astar_planner::SearchInfo::mapCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:101:29, line:102:94>",
                "kind": "call",
                "callee": "astar_planner::SearchInfo::mapCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:104:7, col:99>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "current_pose"
                  }
                },
                "format": "geometry_msgs/PoseStamped",
                "callback-name": "astar_planner::SearchInfo::currentPoseCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:104:7, col:99>",
                "kind": "call",
                "callee": "astar_planner::SearchInfo::currentPoseCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:106:7, col:99>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "base_waypoints"
                  }
                },
                "format": "autoware_msgs/Lane",
                "callback-name": "astar_planner::SearchInfo::waypointsCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:106:7, col:99>",
                "kind": "call",
                "callee": "astar_planner::SearchInfo::waypointsCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:108:7, col:109>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "obstacle_waypoint"
                  }
                },
                "format": "std_msgs/Int32",
                "callback-name": "astar_planner::SearchInfo::obstacleWaypointCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:108:7, col:109>",
                "kind": "call",
                "callee": "astar_planner::SearchInfo::obstacleWaypointCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:110:7, col:107>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "closest_waypoint"
                  }
                },
                "format": "std_msgs/Int32",
                "callback-name": "astar_planner::SearchInfo::closestWaypointCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:110:7, col:107>",
                "kind": "call",
                "callee": "astar_planner::SearchInfo::closestWaypointCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:115:7, col:107>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "current_velocity"
                  }
                },
                "format": "geometry_msgs/TwistStamped",
                "callback-name": "astar_planner::SearchInfo::currentVelocityCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:115:7, col:107>",
                "kind": "call",
                "callee": "astar_planner::SearchInfo::currentVelocityCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:116:31, col:110>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "state"
                  }
                },
                "format": "std_msgs/String",
                "callback-name": "astar_planner::SearchInfo::stateCallback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:116:31, col:110>",
                "kind": "call",
                "callee": "astar_planner::SearchInfo::stateCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:119:29, col:78>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "astar_path"
                  }
                },
                "format": "nav_msgs/Path",
                "source_location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:119:29, col:78>"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:120:34, col:94>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "safety_waypoints"
                  }
                },
                "format": "autoware_msgs/Lane",
                "source_location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:120:34, col:94>"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:128:3, line:227:3>",
                "kind": "while",
                "body": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:135:5, line:138:62>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:136:7, col:90>",
                            "kind": "assignment",
                            "variable": "closest_waypoint",
                            "unqualified_variable": "closest_waypoint",
                            "value": {
                              "kind": "unknown"
                            },
                            "path_condition": {
                              "kind": "variable-reference",
                              "qualified_name": "avoidance",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:136:7, col:90>",
                            "kind": "assignment",
                            "variable": "closest_waypoint",
                            "unqualified_variable": "closest_waypoint",
                            "value": {
                              "kind": "unknown"
                            },
                            "path_condition": {
                              "kind": "variable-reference",
                              "qualified_name": "avoidance",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:138:7, col:62>",
                            "kind": "assignment",
                            "variable": "closest_waypoint",
                            "unqualified_variable": "closest_waypoint",
                            "value": {
                              "kind": "unknown"
                            },
                            "path_condition": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "variable-reference",
                                "qualified_name": "avoidance",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:138:7, col:62>",
                            "kind": "assignment",
                            "variable": "closest_waypoint",
                            "unqualified_variable": "closest_waypoint",
                            "value": {
                              "kind": "unknown"
                            },
                            "path_condition": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "variable-reference",
                                "qualified_name": "avoidance",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          }
                        ]
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:141:5, line:145:5>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:143:7, col:23>",
                            "kind": "ratesleep",
                            "rate": {
                              "kind": "float-literal",
                              "literal": 10.0
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:143:7, col:23>",
                            "kind": "ratesleep",
                            "rate": {
                              "kind": "float-literal",
                              "literal": 10.0
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": []
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:148:5, line:173:5>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:151:7, col:104>",
                            "kind": "assignment",
                            "variable": "publish_lane",
                            "unqualified_variable": "publish_lane",
                            "value": {
                              "kind": "unknown"
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "closest_waypoint",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "<",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "closest_waypoint",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "unknown"
                                      }
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "variable-reference",
                                  "qualified_name": "avoidance",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:152:7, col:41>",
                            "kind": "publish",
                            "publisher": "waypoints_pub",
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "closest_waypoint",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "<",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "closest_waypoint",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "unknown"
                                      }
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "variable-reference",
                                  "qualified_name": "avoidance",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:151:7, col:104>",
                            "kind": "assignment",
                            "variable": "publish_lane",
                            "unqualified_variable": "publish_lane",
                            "value": {
                              "kind": "unknown"
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "closest_waypoint",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "<",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "closest_waypoint",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "unknown"
                                      }
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "variable-reference",
                                  "qualified_name": "avoidance",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:152:7, col:41>",
                            "kind": "publish",
                            "publisher": "waypoints_pub",
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "closest_waypoint",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "<",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "closest_waypoint",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "unknown"
                                      }
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "variable-reference",
                                  "qualified_name": "avoidance",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                }
                              }
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:159:7, col:78>",
                            "kind": "assignment",
                            "variable": "publish_lane",
                            "unqualified_variable": "publish_lane",
                            "value": {
                              "kind": "unknown"
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "closest_waypoint",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "<",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "closest_waypoint",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "unknown"
                                      }
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "variable-reference",
                                "qualified_name": "avoidance",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:160:7, col:41>",
                            "kind": "publish",
                            "publisher": "waypoints_pub",
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "closest_waypoint",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "<",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "closest_waypoint",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "unknown"
                                      }
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "variable-reference",
                                "qualified_name": "avoidance",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:163:7, line:172:7>",
                            "kind": "if",
                            "trueBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": [
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:165:9, col:21>",
                                  "kind": "assignment",
                                  "variable": "avoidance",
                                  "unqualified_variable": "avoidance",
                                  "value": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "<",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "closest_waypoint",
                                              "type": "integer",
                                              "initial-value": {
                                                "kind": "unknown"
                                              }
                                            },
                                            "rhs": {
                                              "kind": "int-literal",
                                              "literal": 0
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "<",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "closest_waypoint",
                                                "type": "integer",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              },
                                              "rhs": {
                                                "kind": "int-literal",
                                                "literal": 0
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "unknown"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "avoidance",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": ">",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "closest_waypoint",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "end_of_avoid_index",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": -1
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:170:9, col:25>",
                                  "kind": "ratesleep",
                                  "rate": {
                                    "kind": "float-literal",
                                    "literal": 10.0
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:165:9, col:21>",
                                  "kind": "assignment",
                                  "variable": "avoidance",
                                  "unqualified_variable": "avoidance",
                                  "value": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "<",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "closest_waypoint",
                                              "type": "integer",
                                              "initial-value": {
                                                "kind": "unknown"
                                              }
                                            },
                                            "rhs": {
                                              "kind": "int-literal",
                                              "literal": 0
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "<",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "closest_waypoint",
                                                "type": "integer",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              },
                                              "rhs": {
                                                "kind": "int-literal",
                                                "literal": 0
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "unknown"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "avoidance",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": ">",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "closest_waypoint",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "end_of_avoid_index",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": -1
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:170:9, col:25>",
                                  "kind": "ratesleep",
                                  "rate": {
                                    "kind": "float-literal",
                                    "literal": 10.0
                                  }
                                }
                              ]
                            },
                            "falseBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": []
                            },
                            "condition": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:159:7, col:78>",
                            "kind": "assignment",
                            "variable": "publish_lane",
                            "unqualified_variable": "publish_lane",
                            "value": {
                              "kind": "unknown"
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "closest_waypoint",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "<",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "closest_waypoint",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "unknown"
                                      }
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "variable-reference",
                                "qualified_name": "avoidance",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:160:7, col:41>",
                            "kind": "publish",
                            "publisher": "waypoints_pub",
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "closest_waypoint",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "<",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "closest_waypoint",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "unknown"
                                      }
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "variable-reference",
                                "qualified_name": "avoidance",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          }
                        ]
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:180:5, line:185:5>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:183:7, col:23>",
                            "kind": "ratesleep",
                            "rate": {
                              "kind": "float-literal",
                              "literal": 10.0
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:183:7, col:23>",
                            "kind": "ratesleep",
                            "rate": {
                              "kind": "float-literal",
                              "literal": 10.0
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": []
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:190:19, line:191:69>",
                      "kind": "call",
                      "callee": "astar_planner::AstarSearch::makePlan",
                      "arguments": {},
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "<",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "closest_waypoint",
                                          "type": "integer",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "||",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "<",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "closest_waypoint",
                                            "type": "integer",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "int-literal",
                                            "literal": 0
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "unknown"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "avoidance",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": ">",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "closest_waypoint",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "end_of_avoid_index",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": -1
                                      }
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "<",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "closest_waypoint",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "||",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "<",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "closest_waypoint",
                                          "type": "integer",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "unknown"
                                        }
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "variable-reference",
                                    "qualified_name": "avoidance",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "unknown"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "unknown"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:198:5, line:205:5>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:203:7, col:19>",
                            "kind": "assignment",
                            "variable": "msec_sum",
                            "unqualified_variable": "msec_sum",
                            "value": {
                              "kind": "binary-expr",
                              "operator": "+",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "msec_sum",
                                "type": "float",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "variable-reference",
                                "qualified_name": "time_ms",
                                "type": "float",
                                "initial-value": {
                                  "kind": "unknown"
                                }
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "||",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "<",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "closest_waypoint",
                                                  "type": "integer",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "int-literal",
                                                  "literal": 0
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "||",
                                                "lhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "<",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "closest_waypoint",
                                                    "type": "integer",
                                                    "initial-value": {
                                                      "kind": "unknown"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "int-literal",
                                                    "literal": 0
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "negate-expr",
                                                  "subExpr": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "avoidance",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": ">",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "closest_waypoint",
                                              "type": "integer",
                                              "initial-value": {
                                                "kind": "unknown"
                                              }
                                            },
                                            "rhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "end_of_avoid_index",
                                              "type": "integer",
                                              "initial-value": {
                                                "kind": "int-literal",
                                                "literal": -1
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "<",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "closest_waypoint",
                                                "type": "integer",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              },
                                              "rhs": {
                                                "kind": "int-literal",
                                                "literal": 0
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "||",
                                              "lhs": {
                                                "kind": "binary-expr",
                                                "operator": "<",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "closest_waypoint",
                                                  "type": "integer",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "int-literal",
                                                  "literal": 0
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "variable-reference",
                                            "qualified_name": "avoidance",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "||",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "unknown"
                                        }
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "||",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "unknown"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "unknown"
                                      }
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:203:7, col:19>",
                            "kind": "assignment",
                            "variable": "msec_sum",
                            "unqualified_variable": "msec_sum",
                            "value": {
                              "kind": "binary-expr",
                              "operator": "+",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "msec_sum",
                                "type": "float",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "variable-reference",
                                "qualified_name": "time_ms",
                                "type": "float",
                                "initial-value": {
                                  "kind": "unknown"
                                }
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "||",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "<",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "closest_waypoint",
                                                  "type": "integer",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "int-literal",
                                                  "literal": 0
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "||",
                                                "lhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "<",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "closest_waypoint",
                                                    "type": "integer",
                                                    "initial-value": {
                                                      "kind": "unknown"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "int-literal",
                                                    "literal": 0
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "negate-expr",
                                                  "subExpr": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "avoidance",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": ">",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "closest_waypoint",
                                              "type": "integer",
                                              "initial-value": {
                                                "kind": "unknown"
                                              }
                                            },
                                            "rhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "end_of_avoid_index",
                                              "type": "integer",
                                              "initial-value": {
                                                "kind": "int-literal",
                                                "literal": -1
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "<",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "closest_waypoint",
                                                "type": "integer",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              },
                                              "rhs": {
                                                "kind": "int-literal",
                                                "literal": 0
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "||",
                                              "lhs": {
                                                "kind": "binary-expr",
                                                "operator": "<",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "closest_waypoint",
                                                  "type": "integer",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "int-literal",
                                                  "literal": 0
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "variable-reference",
                                            "qualified_name": "avoidance",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "||",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "unknown"
                                        }
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "||",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "unknown"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "unknown"
                                      }
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": []
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:207:5, line:220:5>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:210:7, col:39>",
                            "kind": "publish",
                            "publisher": "path_pub",
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "||",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "<",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "closest_waypoint",
                                                  "type": "integer",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "int-literal",
                                                  "literal": 0
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "||",
                                                "lhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "<",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "closest_waypoint",
                                                    "type": "integer",
                                                    "initial-value": {
                                                      "kind": "unknown"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "int-literal",
                                                    "literal": 0
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "negate-expr",
                                                  "subExpr": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "avoidance",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": ">",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "closest_waypoint",
                                              "type": "integer",
                                              "initial-value": {
                                                "kind": "unknown"
                                              }
                                            },
                                            "rhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "end_of_avoid_index",
                                              "type": "integer",
                                              "initial-value": {
                                                "kind": "int-literal",
                                                "literal": -1
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "<",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "closest_waypoint",
                                                "type": "integer",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              },
                                              "rhs": {
                                                "kind": "int-literal",
                                                "literal": 0
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "||",
                                              "lhs": {
                                                "kind": "binary-expr",
                                                "operator": "<",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "closest_waypoint",
                                                  "type": "integer",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "int-literal",
                                                  "literal": 0
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "variable-reference",
                                            "qualified_name": "avoidance",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "||",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "unknown"
                                        }
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "||",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "unknown"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "unknown"
                                      }
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "variable-reference",
                                "qualified_name": "result",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:214:7, line:215:21>",
                            "kind": "if",
                            "trueBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": [
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:215:9, col:21>",
                                  "kind": "assignment",
                                  "variable": "avoidance",
                                  "unqualified_variable": "avoidance",
                                  "value": {
                                    "kind": "bool-literal",
                                    "literal": true
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "||",
                                              "lhs": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "&&",
                                                  "lhs": {
                                                    "kind": "binary-expr",
                                                    "operator": "&&",
                                                    "lhs": {
                                                      "kind": "negate-expr",
                                                      "subExpr": {
                                                        "kind": "binary-expr",
                                                        "operator": "<",
                                                        "lhs": {
                                                          "kind": "variable-reference",
                                                          "qualified_name": "closest_waypoint",
                                                          "type": "integer",
                                                          "initial-value": {
                                                            "kind": "unknown"
                                                          }
                                                        },
                                                        "rhs": {
                                                          "kind": "int-literal",
                                                          "literal": 0
                                                        }
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "negate-expr",
                                                      "subExpr": {
                                                        "kind": "binary-expr",
                                                        "operator": "||",
                                                        "lhs": {
                                                          "kind": "binary-expr",
                                                          "operator": "<",
                                                          "lhs": {
                                                            "kind": "variable-reference",
                                                            "qualified_name": "closest_waypoint",
                                                            "type": "integer",
                                                            "initial-value": {
                                                              "kind": "unknown"
                                                            }
                                                          },
                                                          "rhs": {
                                                            "kind": "int-literal",
                                                            "literal": 0
                                                          }
                                                        },
                                                        "rhs": {
                                                          "kind": "negate-expr",
                                                          "subExpr": {
                                                            "kind": "unknown"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "avoidance",
                                                    "type": "bool",
                                                    "initial-value": {
                                                      "kind": "bool-literal",
                                                      "literal": false
                                                    }
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "negate-expr",
                                                  "subExpr": {
                                                    "kind": "binary-expr",
                                                    "operator": ">",
                                                    "lhs": {
                                                      "kind": "variable-reference",
                                                      "qualified_name": "closest_waypoint",
                                                      "type": "integer",
                                                      "initial-value": {
                                                        "kind": "unknown"
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "variable-reference",
                                                      "qualified_name": "end_of_avoid_index",
                                                      "type": "integer",
                                                      "initial-value": {
                                                        "kind": "int-literal",
                                                        "literal": -1
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "&&",
                                                  "lhs": {
                                                    "kind": "negate-expr",
                                                    "subExpr": {
                                                      "kind": "binary-expr",
                                                      "operator": "<",
                                                      "lhs": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "closest_waypoint",
                                                        "type": "integer",
                                                        "initial-value": {
                                                          "kind": "unknown"
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "int-literal",
                                                        "literal": 0
                                                      }
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "negate-expr",
                                                    "subExpr": {
                                                      "kind": "binary-expr",
                                                      "operator": "||",
                                                      "lhs": {
                                                        "kind": "binary-expr",
                                                        "operator": "<",
                                                        "lhs": {
                                                          "kind": "variable-reference",
                                                          "qualified_name": "closest_waypoint",
                                                          "type": "integer",
                                                          "initial-value": {
                                                            "kind": "unknown"
                                                          }
                                                        },
                                                        "rhs": {
                                                          "kind": "int-literal",
                                                          "literal": 0
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "negate-expr",
                                                        "subExpr": {
                                                          "kind": "unknown"
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "negate-expr",
                                                  "subExpr": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "avoidance",
                                                    "type": "bool",
                                                    "initial-value": {
                                                      "kind": "bool-literal",
                                                      "literal": false
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "||",
                                              "lhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "unknown"
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "||",
                                              "lhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "unknown"
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "unknown"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "result",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "unknown"
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:215:9, col:21>",
                                  "kind": "assignment",
                                  "variable": "avoidance",
                                  "unqualified_variable": "avoidance",
                                  "value": {
                                    "kind": "bool-literal",
                                    "literal": true
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "||",
                                              "lhs": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "&&",
                                                  "lhs": {
                                                    "kind": "binary-expr",
                                                    "operator": "&&",
                                                    "lhs": {
                                                      "kind": "negate-expr",
                                                      "subExpr": {
                                                        "kind": "binary-expr",
                                                        "operator": "<",
                                                        "lhs": {
                                                          "kind": "variable-reference",
                                                          "qualified_name": "closest_waypoint",
                                                          "type": "integer",
                                                          "initial-value": {
                                                            "kind": "unknown"
                                                          }
                                                        },
                                                        "rhs": {
                                                          "kind": "int-literal",
                                                          "literal": 0
                                                        }
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "negate-expr",
                                                      "subExpr": {
                                                        "kind": "binary-expr",
                                                        "operator": "||",
                                                        "lhs": {
                                                          "kind": "binary-expr",
                                                          "operator": "<",
                                                          "lhs": {
                                                            "kind": "variable-reference",
                                                            "qualified_name": "closest_waypoint",
                                                            "type": "integer",
                                                            "initial-value": {
                                                              "kind": "unknown"
                                                            }
                                                          },
                                                          "rhs": {
                                                            "kind": "int-literal",
                                                            "literal": 0
                                                          }
                                                        },
                                                        "rhs": {
                                                          "kind": "negate-expr",
                                                          "subExpr": {
                                                            "kind": "unknown"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "avoidance",
                                                    "type": "bool",
                                                    "initial-value": {
                                                      "kind": "bool-literal",
                                                      "literal": false
                                                    }
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "negate-expr",
                                                  "subExpr": {
                                                    "kind": "binary-expr",
                                                    "operator": ">",
                                                    "lhs": {
                                                      "kind": "variable-reference",
                                                      "qualified_name": "closest_waypoint",
                                                      "type": "integer",
                                                      "initial-value": {
                                                        "kind": "unknown"
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "variable-reference",
                                                      "qualified_name": "end_of_avoid_index",
                                                      "type": "integer",
                                                      "initial-value": {
                                                        "kind": "int-literal",
                                                        "literal": -1
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "&&",
                                                  "lhs": {
                                                    "kind": "negate-expr",
                                                    "subExpr": {
                                                      "kind": "binary-expr",
                                                      "operator": "<",
                                                      "lhs": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "closest_waypoint",
                                                        "type": "integer",
                                                        "initial-value": {
                                                          "kind": "unknown"
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "int-literal",
                                                        "literal": 0
                                                      }
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "negate-expr",
                                                    "subExpr": {
                                                      "kind": "binary-expr",
                                                      "operator": "||",
                                                      "lhs": {
                                                        "kind": "binary-expr",
                                                        "operator": "<",
                                                        "lhs": {
                                                          "kind": "variable-reference",
                                                          "qualified_name": "closest_waypoint",
                                                          "type": "integer",
                                                          "initial-value": {
                                                            "kind": "unknown"
                                                          }
                                                        },
                                                        "rhs": {
                                                          "kind": "int-literal",
                                                          "literal": 0
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "negate-expr",
                                                        "subExpr": {
                                                          "kind": "unknown"
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "negate-expr",
                                                  "subExpr": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "avoidance",
                                                    "type": "bool",
                                                    "initial-value": {
                                                      "kind": "bool-literal",
                                                      "literal": false
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "||",
                                              "lhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "unknown"
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "||",
                                              "lhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "unknown"
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "unknown"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "result",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "unknown"
                                    }
                                  }
                                }
                              ]
                            },
                            "falseBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": []
                            },
                            "condition": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:210:7, col:39>",
                            "kind": "publish",
                            "publisher": "path_pub",
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "||",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "<",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "closest_waypoint",
                                                  "type": "integer",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "int-literal",
                                                  "literal": 0
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "||",
                                                "lhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "<",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "closest_waypoint",
                                                    "type": "integer",
                                                    "initial-value": {
                                                      "kind": "unknown"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "int-literal",
                                                    "literal": 0
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "negate-expr",
                                                  "subExpr": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "avoidance",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": ">",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "closest_waypoint",
                                              "type": "integer",
                                              "initial-value": {
                                                "kind": "unknown"
                                              }
                                            },
                                            "rhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "end_of_avoid_index",
                                              "type": "integer",
                                              "initial-value": {
                                                "kind": "int-literal",
                                                "literal": -1
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "<",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "closest_waypoint",
                                                "type": "integer",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              },
                                              "rhs": {
                                                "kind": "int-literal",
                                                "literal": 0
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "||",
                                              "lhs": {
                                                "kind": "binary-expr",
                                                "operator": "<",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "closest_waypoint",
                                                  "type": "integer",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "int-literal",
                                                  "literal": 0
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "variable-reference",
                                            "qualified_name": "avoidance",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "||",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "unknown"
                                        }
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "||",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "unknown"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "unknown"
                                      }
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "variable-reference",
                                "qualified_name": "result",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": []
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:226:5, col:21>",
                      "kind": "ratesleep",
                      "rate": {
                        "kind": "float-literal",
                        "literal": 10.0
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:190:19, line:191:69>",
                      "kind": "call",
                      "callee": "astar_planner::AstarSearch::makePlan",
                      "arguments": {},
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "<",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "closest_waypoint",
                                          "type": "integer",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "||",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "<",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "closest_waypoint",
                                            "type": "integer",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "int-literal",
                                            "literal": 0
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "unknown"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "avoidance",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": ">",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "closest_waypoint",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "end_of_avoid_index",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": -1
                                      }
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "<",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "closest_waypoint",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "||",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "<",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "closest_waypoint",
                                          "type": "integer",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "unknown"
                                        }
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "variable-reference",
                                    "qualified_name": "avoidance",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "unknown"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "unknown"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/obstacle_avoid.cpp:226:5, col:21>",
                      "kind": "ratesleep",
                      "rate": {
                        "kind": "float-literal",
                        "literal": 10.0
                      }
                    }
                  ]
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              }
            ]
          }
        },
        {
          "name": "astar_planner::AstarSearch::displayFootprint",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:218:3, col:28>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "/map"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:219:3, col:35>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                "unqualified_variable": "stamp",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:220:3, col:15>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::ns",
                "unqualified_variable": "ns",
                "value": {
                  "kind": "string-literal",
                  "literal": "footprint"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:221:3, col:15>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::id",
                "unqualified_variable": "id",
                "value": {
                  "kind": "int-literal",
                  "literal": 0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:222:3, col:45>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::type",
                "unqualified_variable": "type",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "visualization_msgs::Marker_<std::allocator<void>>::CUBE",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 1
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 1
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:223:3, col:47>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::action",
                "unqualified_variable": "action",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "visualization_msgs::Marker_<std::allocator<void>>::ADD",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 0
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 0
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:225:3, col:20>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "astar_planner::AstarSearch::robot_length_",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "this-expr"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:226:3, col:20>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "astar_planner::AstarSearch::robot_width_",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "this-expr"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:227:3, col:20>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "float-literal",
                  "literal": 2.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:228:3, col:20>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::a",
                "unqualified_variable": "a",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.3
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:229:3, col:20>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::r",
                "unqualified_variable": "r",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:230:3, col:20>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::g",
                "unqualified_variable": "g",
                "value": {
                  "kind": "float-literal",
                  "literal": 1.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:231:3, col:20>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::b",
                "unqualified_variable": "b",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:232:3, col:25>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::frame_locked",
                "unqualified_variable": "frame_locked",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:237:5, col:21>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::pose",
                "unqualified_variable": "pose",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "geometry_msgs::PoseStamped_<std::allocator<void>>::pose",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "p",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "!=",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "__begin1",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "__end1",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:239:5, col:18>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::id",
                "unqualified_variable": "id",
                "value": {
                  "kind": "binary-expr",
                  "operator": "+",
                  "lhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "visualization_msgs::Marker_<std::allocator<void>>::id",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "int-literal",
                      "literal": 0
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "marker",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "int-literal",
                    "literal": 1
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "!=",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "__begin1",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "__end1",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:242:3, col:38>",
                "kind": "publish",
                "publisher": "footprint_pub_",
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:218:3, col:28>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "/map"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:219:3, col:35>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                "unqualified_variable": "stamp",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:220:3, col:15>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::ns",
                "unqualified_variable": "ns",
                "value": {
                  "kind": "string-literal",
                  "literal": "footprint"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:221:3, col:15>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::id",
                "unqualified_variable": "id",
                "value": {
                  "kind": "int-literal",
                  "literal": 0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:222:3, col:45>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::type",
                "unqualified_variable": "type",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "visualization_msgs::Marker_<std::allocator<void>>::CUBE",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 1
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 1
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:223:3, col:47>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::action",
                "unqualified_variable": "action",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "visualization_msgs::Marker_<std::allocator<void>>::ADD",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 0
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 0
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:225:3, col:20>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "astar_planner::AstarSearch::robot_length_",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "this-expr"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:226:3, col:20>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "astar_planner::AstarSearch::robot_width_",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "this-expr"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:227:3, col:20>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "float-literal",
                  "literal": 2.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:228:3, col:20>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::a",
                "unqualified_variable": "a",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.3
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:229:3, col:20>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::r",
                "unqualified_variable": "r",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:230:3, col:20>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::g",
                "unqualified_variable": "g",
                "value": {
                  "kind": "float-literal",
                  "literal": 1.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:231:3, col:20>",
                "kind": "assignment",
                "variable": "std_msgs::ColorRGBA_<std::allocator<void>>::b",
                "unqualified_variable": "b",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:232:3, col:25>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::frame_locked",
                "unqualified_variable": "frame_locked",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:237:5, col:21>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::pose",
                "unqualified_variable": "pose",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "geometry_msgs::PoseStamped_<std::allocator<void>>::pose",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "p",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "!=",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "__begin1",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "__end1",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:239:5, col:18>",
                "kind": "assignment",
                "variable": "visualization_msgs::Marker_<std::allocator<void>>::id",
                "unqualified_variable": "id",
                "value": {
                  "kind": "binary-expr",
                  "operator": "+",
                  "lhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "visualization_msgs::Marker_<std::allocator<void>>::id",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "int-literal",
                      "literal": 0
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "marker",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "int-literal",
                    "literal": 1
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "!=",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "__begin1",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "__end1",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/astar_search.cpp:242:3, col:38>",
                "kind": "publish",
                "publisher": "footprint_pub_",
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        },
        {
          "name": "astar_planner::SearchInfo::closestWaypointCallback",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:174:3, col:34>",
                "kind": "assignment",
                "variable": "astar_planner::SearchInfo::closest_waypoint_index_",
                "unqualified_variable": "closest_waypoint_index_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:174:3, col:34>",
                "kind": "assignment",
                "variable": "astar_planner::SearchInfo::closest_waypoint_index_",
                "unqualified_variable": "closest_waypoint_index_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        },
        {
          "name": "astar_planner::SearchInfo::obstacleWaypointCallback",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:195:3, col:42>",
                "kind": "assignment",
                "variable": "astar_planner::SearchInfo::obstacle_waypoint_index_",
                "unqualified_variable": "obstacle_waypoint_index_",
                "value": {
                  "kind": "binary-expr",
                  "operator": "+",
                  "lhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "int-literal",
                      "literal": 0
                    },
                    "base": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                    "type": "integer",
                    "initial-value": {
                      "kind": "int-literal",
                      "literal": -1
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "member-var-ref",
                              "qualified_name": "astar_planner::SearchInfo::avoidance_",
                              "type": "bool",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "!=",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::state_",
                                  "type": "string",
                                  "initial-value": {
                                    "kind": "string-literal",
                                    "literal": ""
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "string-literal",
                                  "literal": "OBSTACLE_AVOIDANCE"
                                }
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "astar_planner::SearchInfo::avoidance_",
                          "type": "bool",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            },
                            "base": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            },
                            "base": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": -1
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            },
                            "base": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": -1
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      },
                      "rhs": {
                        "kind": "unknown"
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:208:5, col:22>",
                "kind": "assignment",
                "variable": "obstacle_count",
                "unqualified_variable": "obstacle_count",
                "value": {
                  "kind": "int-literal",
                  "literal": 1
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "||",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "!=",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::state_",
                                        "type": "string",
                                        "initial-value": {
                                          "kind": "string-literal",
                                          "literal": ""
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "string-literal",
                                        "literal": "OBSTACLE_AVOIDANCE"
                                      }
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": ">=",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "astar_planner::SearchInfo::obstacle_waypoint_index_",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": -1
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "-",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "prev_obstacle_waypoint_index",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": -1
                            }
                          },
                          "rhs": {
                            "kind": "variable-reference",
                            "qualified_name": "same_obstacle_threshold",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 2
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": ">=",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::obstacle_waypoint_index_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": -1
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "-",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "prev_obstacle_waypoint_index",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": -1
                              }
                            },
                            "rhs": {
                              "kind": "variable-reference",
                              "qualified_name": "same_obstacle_threshold",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 2
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "<=",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::obstacle_waypoint_index_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": -1
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "+",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "prev_obstacle_waypoint_index",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": -1
                              }
                            },
                            "rhs": {
                              "kind": "variable-reference",
                              "qualified_name": "same_obstacle_threshold",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 2
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "unknown"
                                      },
                                      "base": {
                                        "kind": "this-expr"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "!=",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "astar_planner::SearchInfo::state_",
                                      "type": "string",
                                      "initial-value": {
                                        "kind": "string-literal",
                                        "literal": ""
                                      },
                                      "base": {
                                        "kind": "this-expr"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "string-literal",
                                      "literal": "OBSTACLE_AVOIDANCE"
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "astar_planner::SearchInfo::avoidance_",
                              "type": "bool",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "<",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "<",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "<",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": -1
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "<",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "<",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": -1
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": ">=",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "astar_planner::SearchInfo::obstacle_waypoint_index_",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": -1
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "-",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "prev_obstacle_waypoint_index",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": -1
                            }
                          },
                          "rhs": {
                            "kind": "variable-reference",
                            "qualified_name": "same_obstacle_threshold",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 2
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:211:3, col:34>",
                "kind": "assignment",
                "variable": "prev_obstacle_waypoint_index",
                "unqualified_variable": "prev_obstacle_waypoint_index",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "astar_planner::SearchInfo::obstacle_waypoint_index_",
                  "type": "integer",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": -1
                  },
                  "base": {
                    "kind": "this-expr"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "member-var-ref",
                              "qualified_name": "astar_planner::SearchInfo::avoidance_",
                              "type": "bool",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "!=",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::state_",
                                  "type": "string",
                                  "initial-value": {
                                    "kind": "string-literal",
                                    "literal": ""
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "string-literal",
                                  "literal": "OBSTACLE_AVOIDANCE"
                                }
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "astar_planner::SearchInfo::avoidance_",
                          "type": "bool",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            },
                            "base": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            },
                            "base": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": -1
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            },
                            "base": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": -1
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      },
                      "rhs": {
                        "kind": "unknown"
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:218:5, col:22>",
                "kind": "assignment",
                "variable": "obstacle_count",
                "unqualified_variable": "obstacle_count",
                "value": {
                  "kind": "int-literal",
                  "literal": 0
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "unknown"
                                      },
                                      "base": {
                                        "kind": "this-expr"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "!=",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "astar_planner::SearchInfo::state_",
                                      "type": "string",
                                      "initial-value": {
                                        "kind": "string-literal",
                                        "literal": ""
                                      },
                                      "base": {
                                        "kind": "this-expr"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "string-literal",
                                      "literal": "OBSTACLE_AVOIDANCE"
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "astar_planner::SearchInfo::avoidance_",
                              "type": "bool",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "<",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "<",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "<",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": -1
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "<",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "<",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": -1
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "<",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "obstacle_count",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "astar_planner::SearchInfo::obstacle_detect_count_",
                          "type": "integer",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "astar_planner::SearchInfo::change_path_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:221:3, col:54>",
                "kind": "assignment",
                "variable": "astar_planner::SearchInfo::start_waypoint_index_",
                "unqualified_variable": "start_waypoint_index_",
                "value": {
                  "kind": "binary-expr",
                  "operator": "-",
                  "lhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "astar_planner::SearchInfo::obstacle_waypoint_index_",
                    "type": "integer",
                    "initial-value": {
                      "kind": "int-literal",
                      "literal": -1
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  },
                  "rhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "astar_planner::SearchInfo::avoid_distance_",
                    "type": "integer",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "member-var-ref",
                                "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "!=",
                                  "lhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "astar_planner::SearchInfo::state_",
                                    "type": "string",
                                    "initial-value": {
                                      "kind": "string-literal",
                                      "literal": ""
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "string-literal",
                                    "literal": "OBSTACLE_AVOIDANCE"
                                  }
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::avoidance_",
                            "type": "bool",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              },
                              "base": {
                                "kind": "unknown"
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              },
                              "base": {
                                "kind": "unknown"
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": -1
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              },
                              "base": {
                                "kind": "unknown"
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": -1
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "<",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "obstacle_count",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "astar_planner::SearchInfo::obstacle_detect_count_",
                        "type": "integer",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:222:3, col:53>",
                "kind": "assignment",
                "variable": "astar_planner::SearchInfo::goal_waypoint_index_",
                "unqualified_variable": "goal_waypoint_index_",
                "value": {
                  "kind": "binary-expr",
                  "operator": "+",
                  "lhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "astar_planner::SearchInfo::obstacle_waypoint_index_",
                    "type": "integer",
                    "initial-value": {
                      "kind": "int-literal",
                      "literal": -1
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  },
                  "rhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "astar_planner::SearchInfo::avoid_distance_",
                    "type": "integer",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "member-var-ref",
                                "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "!=",
                                  "lhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "astar_planner::SearchInfo::state_",
                                    "type": "string",
                                    "initial-value": {
                                      "kind": "string-literal",
                                      "literal": ""
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "string-literal",
                                    "literal": "OBSTACLE_AVOIDANCE"
                                  }
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::avoidance_",
                            "type": "bool",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              },
                              "base": {
                                "kind": "unknown"
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              },
                              "base": {
                                "kind": "unknown"
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": -1
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              },
                              "base": {
                                "kind": "unknown"
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": -1
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "<",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "obstacle_count",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "astar_planner::SearchInfo::obstacle_detect_count_",
                        "type": "integer",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:226:5, col:29>",
                "kind": "assignment",
                "variable": "astar_planner::SearchInfo::start_waypoint_index_",
                "unqualified_variable": "start_waypoint_index_",
                "value": {
                  "kind": "int-literal",
                  "literal": 0
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "unknown"
                                      },
                                      "base": {
                                        "kind": "this-expr"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "!=",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "astar_planner::SearchInfo::state_",
                                      "type": "string",
                                      "initial-value": {
                                        "kind": "string-literal",
                                        "literal": ""
                                      },
                                      "base": {
                                        "kind": "this-expr"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "string-literal",
                                      "literal": "OBSTACLE_AVOIDANCE"
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "astar_planner::SearchInfo::avoidance_",
                              "type": "bool",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "<",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "<",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "<",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": -1
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "<",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "<",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": -1
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "<",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "obstacle_count",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "astar_planner::SearchInfo::obstacle_detect_count_",
                          "type": "integer",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "<",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "astar_planner::SearchInfo::start_waypoint_index_",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": -1
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:230:5, col:69>",
                "kind": "assignment",
                "variable": "astar_planner::SearchInfo::goal_waypoint_index_",
                "unqualified_variable": "goal_waypoint_index_",
                "value": {
                  "kind": "binary-expr",
                  "operator": "-",
                  "lhs": {
                    "kind": "unknown"
                  },
                  "rhs": {
                    "kind": "int-literal",
                    "literal": 1
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "unknown"
                                      },
                                      "base": {
                                        "kind": "this-expr"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "!=",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "astar_planner::SearchInfo::state_",
                                      "type": "string",
                                      "initial-value": {
                                        "kind": "string-literal",
                                        "literal": ""
                                      },
                                      "base": {
                                        "kind": "this-expr"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "string-literal",
                                      "literal": "OBSTACLE_AVOIDANCE"
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "astar_planner::SearchInfo::avoidance_",
                              "type": "bool",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "<",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "<",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "<",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": -1
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "<",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "<",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": -1
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "<",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "obstacle_count",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "astar_planner::SearchInfo::obstacle_detect_count_",
                          "type": "integer",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": ">=",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "astar_planner::SearchInfo::goal_waypoint_index_",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": -1
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:233:3, col:50>",
                "kind": "assignment",
                "variable": "astar_planner::SearchInfo::upper_bound_distance_",
                "unqualified_variable": "upper_bound_distance_",
                "value": {
                  "kind": "binary-expr",
                  "operator": "*",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "original_path_length",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "astar_planner::SearchInfo::upper_bound_ratio_",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "member-var-ref",
                                "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "!=",
                                  "lhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "astar_planner::SearchInfo::state_",
                                    "type": "string",
                                    "initial-value": {
                                      "kind": "string-literal",
                                      "literal": ""
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "string-literal",
                                    "literal": "OBSTACLE_AVOIDANCE"
                                  }
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::avoidance_",
                            "type": "bool",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              },
                              "base": {
                                "kind": "unknown"
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              },
                              "base": {
                                "kind": "unknown"
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": -1
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              },
                              "base": {
                                "kind": "unknown"
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": -1
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "<",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "obstacle_count",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "astar_planner::SearchInfo::obstacle_detect_count_",
                        "type": "integer",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:250:3, col:76>",
                "kind": "assignment",
                "variable": "astar_planner::SearchInfo::start_pose_global_",
                "unqualified_variable": "start_pose_global_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_msgs::Waypoint_<std::allocator<void>>::pose",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "!=",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::state_",
                                        "type": "string",
                                        "initial-value": {
                                          "kind": "string-literal",
                                          "literal": ""
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "string-literal",
                                        "literal": "OBSTACLE_AVOIDANCE"
                                      }
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "obstacle_count",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::obstacle_detect_count_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": ">",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "+",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": -1
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "astar_planner::SearchInfo::start_waypoint_index_",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": -1
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "astar_planner::SearchInfo::current_velocity_mps_",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      },
                      "rhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "astar_planner::SearchInfo::avoid_velocity_limit_mps_",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:251:3, col:90>",
                "kind": "assignment",
                "variable": "geometry_msgs::PoseStamped_<std::allocator<void>>::pose",
                "unqualified_variable": "pose",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "!=",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::state_",
                                        "type": "string",
                                        "initial-value": {
                                          "kind": "string-literal",
                                          "literal": ""
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "string-literal",
                                        "literal": "OBSTACLE_AVOIDANCE"
                                      }
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "obstacle_count",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::obstacle_detect_count_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": ">",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "+",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": -1
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "astar_planner::SearchInfo::start_waypoint_index_",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": -1
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "astar_planner::SearchInfo::current_velocity_mps_",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      },
                      "rhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "astar_planner::SearchInfo::avoid_velocity_limit_mps_",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:252:3, col:16>",
                "kind": "assignment",
                "variable": "astar_planner::SearchInfo::start_set_",
                "unqualified_variable": "start_set_",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "!=",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::state_",
                                        "type": "string",
                                        "initial-value": {
                                          "kind": "string-literal",
                                          "literal": ""
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "string-literal",
                                        "literal": "OBSTACLE_AVOIDANCE"
                                      }
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "obstacle_count",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::obstacle_detect_count_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": ">",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "+",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": -1
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "astar_planner::SearchInfo::start_waypoint_index_",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": -1
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "astar_planner::SearchInfo::current_velocity_mps_",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      },
                      "rhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "astar_planner::SearchInfo::avoid_velocity_limit_mps_",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:259:3, col:39>",
                "kind": "assignment",
                "variable": "geometry_msgs::Point_<std::allocator<void>>::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "binary-expr",
                  "operator": "-",
                  "lhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "geometry_msgs::Point_<std::allocator<void>>::y",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "float-literal",
                      "literal": 0.0
                    },
                    "base": {
                      "kind": "member-var-ref",
                      "qualified_name": "geometry_msgs::Pose_<std::allocator<void>>::position",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "variable-reference",
                        "qualified_name": "relative_transit_pose",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "actual_car_width",
                    "type": "float",
                    "initial-value": {
                      "kind": "float-literal",
                      "literal": 2.5
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "!=",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::state_",
                                        "type": "string",
                                        "initial-value": {
                                          "kind": "string-literal",
                                          "literal": ""
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "string-literal",
                                        "literal": "OBSTACLE_AVOIDANCE"
                                      }
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "obstacle_count",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::obstacle_detect_count_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": ">",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "+",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": -1
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "astar_planner::SearchInfo::start_waypoint_index_",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": -1
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "astar_planner::SearchInfo::current_velocity_mps_",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      },
                      "rhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "astar_planner::SearchInfo::avoid_velocity_limit_mps_",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:260:3, col:104>",
                "kind": "assignment",
                "variable": "geometry_msgs::Pose_<std::allocator<void>>::orientation",
                "unqualified_variable": "orientation",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "geometry_msgs::Pose_<std::allocator<void>>::orientation",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "qualified_name": "geometry_msgs::PoseStamped_<std::allocator<void>>::pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "member-var-ref",
                      "qualified_name": "autoware_msgs::Waypoint_<std::allocator<void>>::pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "unknown"
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "!=",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::state_",
                                        "type": "string",
                                        "initial-value": {
                                          "kind": "string-literal",
                                          "literal": ""
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "string-literal",
                                        "literal": "OBSTACLE_AVOIDANCE"
                                      }
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "obstacle_count",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::obstacle_detect_count_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": ">",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "+",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": -1
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "astar_planner::SearchInfo::start_waypoint_index_",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": -1
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "astar_planner::SearchInfo::current_velocity_mps_",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      },
                      "rhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "astar_planner::SearchInfo::avoid_velocity_limit_mps_",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:264:3, col:99>",
                "kind": "assignment",
                "variable": "geometry_msgs::PoseStamped_<std::allocator<void>>::pose",
                "unqualified_variable": "pose",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "!=",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::state_",
                                        "type": "string",
                                        "initial-value": {
                                          "kind": "string-literal",
                                          "literal": ""
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "string-literal",
                                        "literal": "OBSTACLE_AVOIDANCE"
                                      }
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "obstacle_count",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::obstacle_detect_count_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": ">",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "+",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": -1
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "astar_planner::SearchInfo::start_waypoint_index_",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": -1
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "astar_planner::SearchInfo::current_velocity_mps_",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      },
                      "rhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "astar_planner::SearchInfo::avoid_velocity_limit_mps_",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:265:3, col:94>",
                "kind": "assignment",
                "variable": "geometry_msgs::PoseStamped_<std::allocator<void>>::pose",
                "unqualified_variable": "pose",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "!=",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::state_",
                                        "type": "string",
                                        "initial-value": {
                                          "kind": "string-literal",
                                          "literal": ""
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "string-literal",
                                        "literal": "OBSTACLE_AVOIDANCE"
                                      }
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "obstacle_count",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::obstacle_detect_count_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": ">",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "+",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": -1
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "astar_planner::SearchInfo::start_waypoint_index_",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": -1
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "astar_planner::SearchInfo::current_velocity_mps_",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      },
                      "rhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "astar_planner::SearchInfo::avoid_velocity_limit_mps_",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:268:3, col:74>",
                "kind": "assignment",
                "variable": "astar_planner::SearchInfo::goal_pose_global_",
                "unqualified_variable": "goal_pose_global_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_msgs::Waypoint_<std::allocator<void>>::pose",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "!=",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::state_",
                                        "type": "string",
                                        "initial-value": {
                                          "kind": "string-literal",
                                          "literal": ""
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "string-literal",
                                        "literal": "OBSTACLE_AVOIDANCE"
                                      }
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "obstacle_count",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::obstacle_detect_count_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": ">",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "+",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": -1
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "astar_planner::SearchInfo::start_waypoint_index_",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": -1
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "astar_planner::SearchInfo::current_velocity_mps_",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      },
                      "rhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "astar_planner::SearchInfo::avoid_velocity_limit_mps_",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:269:3, col:88>",
                "kind": "assignment",
                "variable": "geometry_msgs::PoseStamped_<std::allocator<void>>::pose",
                "unqualified_variable": "pose",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "!=",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::state_",
                                        "type": "string",
                                        "initial-value": {
                                          "kind": "string-literal",
                                          "literal": ""
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "string-literal",
                                        "literal": "OBSTACLE_AVOIDANCE"
                                      }
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "obstacle_count",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::obstacle_detect_count_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": ">",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "+",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": -1
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "astar_planner::SearchInfo::start_waypoint_index_",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": -1
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "astar_planner::SearchInfo::current_velocity_mps_",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      },
                      "rhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "astar_planner::SearchInfo::avoid_velocity_limit_mps_",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:271:3, col:15>",
                "kind": "assignment",
                "variable": "astar_planner::SearchInfo::goal_set_",
                "unqualified_variable": "goal_set_",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "!=",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::state_",
                                        "type": "string",
                                        "initial-value": {
                                          "kind": "string-literal",
                                          "literal": ""
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "string-literal",
                                        "literal": "OBSTACLE_AVOIDANCE"
                                      }
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "obstacle_count",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::obstacle_detect_count_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": ">",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "+",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": -1
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "astar_planner::SearchInfo::start_waypoint_index_",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": -1
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "astar_planner::SearchInfo::current_velocity_mps_",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      },
                      "rhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "astar_planner::SearchInfo::avoid_velocity_limit_mps_",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:195:3, col:42>",
                "kind": "assignment",
                "variable": "astar_planner::SearchInfo::obstacle_waypoint_index_",
                "unqualified_variable": "obstacle_waypoint_index_",
                "value": {
                  "kind": "binary-expr",
                  "operator": "+",
                  "lhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "int-literal",
                      "literal": 0
                    },
                    "base": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                    "type": "integer",
                    "initial-value": {
                      "kind": "int-literal",
                      "literal": -1
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "member-var-ref",
                              "qualified_name": "astar_planner::SearchInfo::avoidance_",
                              "type": "bool",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "!=",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::state_",
                                  "type": "string",
                                  "initial-value": {
                                    "kind": "string-literal",
                                    "literal": ""
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "string-literal",
                                  "literal": "OBSTACLE_AVOIDANCE"
                                }
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "astar_planner::SearchInfo::avoidance_",
                          "type": "bool",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            },
                            "base": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            },
                            "base": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": -1
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            },
                            "base": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": -1
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      },
                      "rhs": {
                        "kind": "unknown"
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:201:3, line:209:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:208:5, col:22>",
                      "kind": "assignment",
                      "variable": "obstacle_count",
                      "unqualified_variable": "obstacle_count",
                      "value": {
                        "kind": "int-literal",
                        "literal": 1
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                          "type": "bool",
                                          "initial-value": {
                                            "kind": "unknown"
                                          },
                                          "base": {
                                            "kind": "this-expr"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "unknown"
                                              },
                                              "base": {
                                                "kind": "this-expr"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "!=",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "astar_planner::SearchInfo::state_",
                                              "type": "string",
                                              "initial-value": {
                                                "kind": "string-literal",
                                                "literal": ""
                                              },
                                              "base": {
                                                "kind": "this-expr"
                                              }
                                            },
                                            "rhs": {
                                              "kind": "string-literal",
                                              "literal": "OBSTACLE_AVOIDANCE"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "unknown"
                                      },
                                      "base": {
                                        "kind": "this-expr"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "<",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        },
                                        "base": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "<",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        },
                                        "base": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "<",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": -1
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "||",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "<",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        },
                                        "base": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "<",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": -1
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "unknown"
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": ">=",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "astar_planner::SearchInfo::obstacle_waypoint_index_",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": -1
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "-",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "prev_obstacle_waypoint_index",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  }
                                },
                                "rhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "same_obstacle_threshold",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 2
                                  }
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": ">=",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::obstacle_waypoint_index_",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "-",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "prev_obstacle_waypoint_index",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": -1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "same_obstacle_threshold",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 2
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<=",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::obstacle_waypoint_index_",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "+",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "prev_obstacle_waypoint_index",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": -1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "same_obstacle_threshold",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 2
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "||",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "unknown"
                                            },
                                            "base": {
                                              "kind": "this-expr"
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "!=",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "astar_planner::SearchInfo::state_",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "string-literal",
                                              "literal": ""
                                            },
                                            "base": {
                                              "kind": "this-expr"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "OBSTACLE_AVOIDANCE"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      },
                                      "base": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "||",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      },
                                      "base": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": -1
                                      },
                                      "base": {
                                        "kind": "this-expr"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "||",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      },
                                      "base": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": -1
                                      },
                                      "base": {
                                        "kind": "this-expr"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": ">=",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "astar_planner::SearchInfo::obstacle_waypoint_index_",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": -1
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "-",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "prev_obstacle_waypoint_index",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  }
                                },
                                "rhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "same_obstacle_threshold",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 2
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:208:5, col:22>",
                      "kind": "assignment",
                      "variable": "obstacle_count",
                      "unqualified_variable": "obstacle_count",
                      "value": {
                        "kind": "int-literal",
                        "literal": 1
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                          "type": "bool",
                                          "initial-value": {
                                            "kind": "unknown"
                                          },
                                          "base": {
                                            "kind": "this-expr"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "unknown"
                                              },
                                              "base": {
                                                "kind": "this-expr"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "!=",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "astar_planner::SearchInfo::state_",
                                              "type": "string",
                                              "initial-value": {
                                                "kind": "string-literal",
                                                "literal": ""
                                              },
                                              "base": {
                                                "kind": "this-expr"
                                              }
                                            },
                                            "rhs": {
                                              "kind": "string-literal",
                                              "literal": "OBSTACLE_AVOIDANCE"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "unknown"
                                      },
                                      "base": {
                                        "kind": "this-expr"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "<",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        },
                                        "base": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "<",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        },
                                        "base": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "<",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": -1
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "||",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "<",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        },
                                        "base": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "<",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": -1
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "unknown"
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": ">=",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "astar_planner::SearchInfo::obstacle_waypoint_index_",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": -1
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "-",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "prev_obstacle_waypoint_index",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  }
                                },
                                "rhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "same_obstacle_threshold",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 2
                                  }
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": ">=",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::obstacle_waypoint_index_",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "-",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "prev_obstacle_waypoint_index",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": -1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "same_obstacle_threshold",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 2
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<=",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::obstacle_waypoint_index_",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "+",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "prev_obstacle_waypoint_index",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": -1
                                    }
                                  },
                                  "rhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "same_obstacle_threshold",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 2
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "||",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "unknown"
                                            },
                                            "base": {
                                              "kind": "this-expr"
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "!=",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "astar_planner::SearchInfo::state_",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "string-literal",
                                              "literal": ""
                                            },
                                            "base": {
                                              "kind": "this-expr"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "OBSTACLE_AVOIDANCE"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      },
                                      "base": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "||",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      },
                                      "base": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": -1
                                      },
                                      "base": {
                                        "kind": "this-expr"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "||",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      },
                                      "base": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": -1
                                      },
                                      "base": {
                                        "kind": "this-expr"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": ">=",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "astar_planner::SearchInfo::obstacle_waypoint_index_",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": -1
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "-",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "prev_obstacle_waypoint_index",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  }
                                },
                                "rhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "same_obstacle_threshold",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 2
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:211:3, col:34>",
                "kind": "assignment",
                "variable": "prev_obstacle_waypoint_index",
                "unqualified_variable": "prev_obstacle_waypoint_index",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "astar_planner::SearchInfo::obstacle_waypoint_index_",
                  "type": "integer",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": -1
                  },
                  "base": {
                    "kind": "this-expr"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "member-var-ref",
                              "qualified_name": "astar_planner::SearchInfo::avoidance_",
                              "type": "bool",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "!=",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::state_",
                                  "type": "string",
                                  "initial-value": {
                                    "kind": "string-literal",
                                    "literal": ""
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "string-literal",
                                  "literal": "OBSTACLE_AVOIDANCE"
                                }
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "astar_planner::SearchInfo::avoidance_",
                          "type": "bool",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            },
                            "base": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            },
                            "base": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": -1
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            },
                            "base": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": -1
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      },
                      "rhs": {
                        "kind": "unknown"
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:217:3, line:218:22>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:218:5, col:22>",
                      "kind": "assignment",
                      "variable": "obstacle_count",
                      "unqualified_variable": "obstacle_count",
                      "value": {
                        "kind": "int-literal",
                        "literal": 0
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "||",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "unknown"
                                            },
                                            "base": {
                                              "kind": "this-expr"
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "!=",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "astar_planner::SearchInfo::state_",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "string-literal",
                                              "literal": ""
                                            },
                                            "base": {
                                              "kind": "this-expr"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "OBSTACLE_AVOIDANCE"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      },
                                      "base": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "||",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      },
                                      "base": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": -1
                                      },
                                      "base": {
                                        "kind": "this-expr"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "||",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      },
                                      "base": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": -1
                                      },
                                      "base": {
                                        "kind": "this-expr"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "<",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "obstacle_count",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "astar_planner::SearchInfo::obstacle_detect_count_",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "astar_planner::SearchInfo::change_path_",
                          "type": "bool",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:218:5, col:22>",
                      "kind": "assignment",
                      "variable": "obstacle_count",
                      "unqualified_variable": "obstacle_count",
                      "value": {
                        "kind": "int-literal",
                        "literal": 0
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "||",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "unknown"
                                            },
                                            "base": {
                                              "kind": "this-expr"
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "!=",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "astar_planner::SearchInfo::state_",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "string-literal",
                                              "literal": ""
                                            },
                                            "base": {
                                              "kind": "this-expr"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "OBSTACLE_AVOIDANCE"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      },
                                      "base": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "||",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      },
                                      "base": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": -1
                                      },
                                      "base": {
                                        "kind": "this-expr"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "||",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      },
                                      "base": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": -1
                                      },
                                      "base": {
                                        "kind": "this-expr"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "<",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "obstacle_count",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "astar_planner::SearchInfo::obstacle_detect_count_",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "astar_planner::SearchInfo::change_path_",
                          "type": "bool",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:221:3, col:54>",
                "kind": "assignment",
                "variable": "astar_planner::SearchInfo::start_waypoint_index_",
                "unqualified_variable": "start_waypoint_index_",
                "value": {
                  "kind": "binary-expr",
                  "operator": "-",
                  "lhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "astar_planner::SearchInfo::obstacle_waypoint_index_",
                    "type": "integer",
                    "initial-value": {
                      "kind": "int-literal",
                      "literal": -1
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  },
                  "rhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "astar_planner::SearchInfo::avoid_distance_",
                    "type": "integer",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "member-var-ref",
                                "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "!=",
                                  "lhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "astar_planner::SearchInfo::state_",
                                    "type": "string",
                                    "initial-value": {
                                      "kind": "string-literal",
                                      "literal": ""
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "string-literal",
                                    "literal": "OBSTACLE_AVOIDANCE"
                                  }
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::avoidance_",
                            "type": "bool",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              },
                              "base": {
                                "kind": "unknown"
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              },
                              "base": {
                                "kind": "unknown"
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": -1
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              },
                              "base": {
                                "kind": "unknown"
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": -1
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "<",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "obstacle_count",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "astar_planner::SearchInfo::obstacle_detect_count_",
                        "type": "integer",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:222:3, col:53>",
                "kind": "assignment",
                "variable": "astar_planner::SearchInfo::goal_waypoint_index_",
                "unqualified_variable": "goal_waypoint_index_",
                "value": {
                  "kind": "binary-expr",
                  "operator": "+",
                  "lhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "astar_planner::SearchInfo::obstacle_waypoint_index_",
                    "type": "integer",
                    "initial-value": {
                      "kind": "int-literal",
                      "literal": -1
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  },
                  "rhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "astar_planner::SearchInfo::avoid_distance_",
                    "type": "integer",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "member-var-ref",
                                "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "!=",
                                  "lhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "astar_planner::SearchInfo::state_",
                                    "type": "string",
                                    "initial-value": {
                                      "kind": "string-literal",
                                      "literal": ""
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "string-literal",
                                    "literal": "OBSTACLE_AVOIDANCE"
                                  }
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::avoidance_",
                            "type": "bool",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              },
                              "base": {
                                "kind": "unknown"
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              },
                              "base": {
                                "kind": "unknown"
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": -1
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              },
                              "base": {
                                "kind": "unknown"
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": -1
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "<",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "obstacle_count",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "astar_planner::SearchInfo::obstacle_detect_count_",
                        "type": "integer",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:225:3, line:226:29>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:226:5, col:29>",
                      "kind": "assignment",
                      "variable": "astar_planner::SearchInfo::start_waypoint_index_",
                      "unqualified_variable": "start_waypoint_index_",
                      "value": {
                        "kind": "int-literal",
                        "literal": 0
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "||",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "unknown"
                                            },
                                            "base": {
                                              "kind": "this-expr"
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "!=",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "astar_planner::SearchInfo::state_",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "string-literal",
                                              "literal": ""
                                            },
                                            "base": {
                                              "kind": "this-expr"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "OBSTACLE_AVOIDANCE"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      },
                                      "base": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "||",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      },
                                      "base": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": -1
                                      },
                                      "base": {
                                        "kind": "this-expr"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "||",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      },
                                      "base": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": -1
                                      },
                                      "base": {
                                        "kind": "this-expr"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "<",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "obstacle_count",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "astar_planner::SearchInfo::obstacle_detect_count_",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::start_waypoint_index_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": -1
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:226:5, col:29>",
                      "kind": "assignment",
                      "variable": "astar_planner::SearchInfo::start_waypoint_index_",
                      "unqualified_variable": "start_waypoint_index_",
                      "value": {
                        "kind": "int-literal",
                        "literal": 0
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "||",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "unknown"
                                            },
                                            "base": {
                                              "kind": "this-expr"
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "!=",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "astar_planner::SearchInfo::state_",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "string-literal",
                                              "literal": ""
                                            },
                                            "base": {
                                              "kind": "this-expr"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "OBSTACLE_AVOIDANCE"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      },
                                      "base": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "||",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      },
                                      "base": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": -1
                                      },
                                      "base": {
                                        "kind": "this-expr"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "||",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      },
                                      "base": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": -1
                                      },
                                      "base": {
                                        "kind": "this-expr"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "<",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "obstacle_count",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "astar_planner::SearchInfo::obstacle_detect_count_",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::start_waypoint_index_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": -1
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:229:3, line:230:69>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:230:5, col:69>",
                      "kind": "assignment",
                      "variable": "astar_planner::SearchInfo::goal_waypoint_index_",
                      "unqualified_variable": "goal_waypoint_index_",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "-",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "||",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "unknown"
                                            },
                                            "base": {
                                              "kind": "this-expr"
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "!=",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "astar_planner::SearchInfo::state_",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "string-literal",
                                              "literal": ""
                                            },
                                            "base": {
                                              "kind": "this-expr"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "OBSTACLE_AVOIDANCE"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      },
                                      "base": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "||",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      },
                                      "base": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": -1
                                      },
                                      "base": {
                                        "kind": "this-expr"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "||",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      },
                                      "base": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": -1
                                      },
                                      "base": {
                                        "kind": "this-expr"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "<",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "obstacle_count",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "astar_planner::SearchInfo::obstacle_detect_count_",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": ">=",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::goal_waypoint_index_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": -1
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:230:5, col:69>",
                      "kind": "assignment",
                      "variable": "astar_planner::SearchInfo::goal_waypoint_index_",
                      "unqualified_variable": "goal_waypoint_index_",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "-",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "||",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "unknown"
                                            },
                                            "base": {
                                              "kind": "this-expr"
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "!=",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "astar_planner::SearchInfo::state_",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "string-literal",
                                              "literal": ""
                                            },
                                            "base": {
                                              "kind": "this-expr"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "OBSTACLE_AVOIDANCE"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      },
                                      "base": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "||",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      },
                                      "base": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": -1
                                      },
                                      "base": {
                                        "kind": "this-expr"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "||",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      },
                                      "base": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": -1
                                      },
                                      "base": {
                                        "kind": "this-expr"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "<",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "obstacle_count",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "astar_planner::SearchInfo::obstacle_detect_count_",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": ">=",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::goal_waypoint_index_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": -1
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:233:3, col:50>",
                "kind": "assignment",
                "variable": "astar_planner::SearchInfo::upper_bound_distance_",
                "unqualified_variable": "upper_bound_distance_",
                "value": {
                  "kind": "binary-expr",
                  "operator": "*",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "original_path_length",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "astar_planner::SearchInfo::upper_bound_ratio_",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "member-var-ref",
                                "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "!=",
                                  "lhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "astar_planner::SearchInfo::state_",
                                    "type": "string",
                                    "initial-value": {
                                      "kind": "string-literal",
                                      "literal": ""
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "string-literal",
                                    "literal": "OBSTACLE_AVOIDANCE"
                                  }
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::avoidance_",
                            "type": "bool",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              },
                              "base": {
                                "kind": "unknown"
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              },
                              "base": {
                                "kind": "unknown"
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": -1
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              },
                              "base": {
                                "kind": "unknown"
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": -1
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "<",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "obstacle_count",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "astar_planner::SearchInfo::obstacle_detect_count_",
                        "type": "integer",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:250:3, col:76>",
                "kind": "assignment",
                "variable": "astar_planner::SearchInfo::start_pose_global_",
                "unqualified_variable": "start_pose_global_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_msgs::Waypoint_<std::allocator<void>>::pose",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "!=",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::state_",
                                        "type": "string",
                                        "initial-value": {
                                          "kind": "string-literal",
                                          "literal": ""
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "string-literal",
                                        "literal": "OBSTACLE_AVOIDANCE"
                                      }
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "obstacle_count",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::obstacle_detect_count_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": ">",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "+",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": -1
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "astar_planner::SearchInfo::start_waypoint_index_",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": -1
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "astar_planner::SearchInfo::current_velocity_mps_",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      },
                      "rhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "astar_planner::SearchInfo::avoid_velocity_limit_mps_",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:251:3, col:90>",
                "kind": "assignment",
                "variable": "geometry_msgs::PoseStamped_<std::allocator<void>>::pose",
                "unqualified_variable": "pose",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "!=",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::state_",
                                        "type": "string",
                                        "initial-value": {
                                          "kind": "string-literal",
                                          "literal": ""
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "string-literal",
                                        "literal": "OBSTACLE_AVOIDANCE"
                                      }
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "obstacle_count",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::obstacle_detect_count_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": ">",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "+",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": -1
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "astar_planner::SearchInfo::start_waypoint_index_",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": -1
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "astar_planner::SearchInfo::current_velocity_mps_",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      },
                      "rhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "astar_planner::SearchInfo::avoid_velocity_limit_mps_",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:252:3, col:16>",
                "kind": "assignment",
                "variable": "astar_planner::SearchInfo::start_set_",
                "unqualified_variable": "start_set_",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "!=",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::state_",
                                        "type": "string",
                                        "initial-value": {
                                          "kind": "string-literal",
                                          "literal": ""
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "string-literal",
                                        "literal": "OBSTACLE_AVOIDANCE"
                                      }
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "obstacle_count",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::obstacle_detect_count_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": ">",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "+",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": -1
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "astar_planner::SearchInfo::start_waypoint_index_",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": -1
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "astar_planner::SearchInfo::current_velocity_mps_",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      },
                      "rhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "astar_planner::SearchInfo::avoid_velocity_limit_mps_",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:259:3, col:39>",
                "kind": "assignment",
                "variable": "geometry_msgs::Point_<std::allocator<void>>::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "binary-expr",
                  "operator": "-",
                  "lhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "geometry_msgs::Point_<std::allocator<void>>::y",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "float-literal",
                      "literal": 0.0
                    },
                    "base": {
                      "kind": "member-var-ref",
                      "qualified_name": "geometry_msgs::Pose_<std::allocator<void>>::position",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "variable-reference",
                        "qualified_name": "relative_transit_pose",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "actual_car_width",
                    "type": "float",
                    "initial-value": {
                      "kind": "float-literal",
                      "literal": 2.5
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "!=",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::state_",
                                        "type": "string",
                                        "initial-value": {
                                          "kind": "string-literal",
                                          "literal": ""
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "string-literal",
                                        "literal": "OBSTACLE_AVOIDANCE"
                                      }
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "obstacle_count",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::obstacle_detect_count_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": ">",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "+",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": -1
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "astar_planner::SearchInfo::start_waypoint_index_",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": -1
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "astar_planner::SearchInfo::current_velocity_mps_",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      },
                      "rhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "astar_planner::SearchInfo::avoid_velocity_limit_mps_",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:260:3, col:104>",
                "kind": "assignment",
                "variable": "geometry_msgs::Pose_<std::allocator<void>>::orientation",
                "unqualified_variable": "orientation",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "geometry_msgs::Pose_<std::allocator<void>>::orientation",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "qualified_name": "geometry_msgs::PoseStamped_<std::allocator<void>>::pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "member-var-ref",
                      "qualified_name": "autoware_msgs::Waypoint_<std::allocator<void>>::pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "unknown"
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "!=",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::state_",
                                        "type": "string",
                                        "initial-value": {
                                          "kind": "string-literal",
                                          "literal": ""
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "string-literal",
                                        "literal": "OBSTACLE_AVOIDANCE"
                                      }
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "obstacle_count",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::obstacle_detect_count_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": ">",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "+",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": -1
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "astar_planner::SearchInfo::start_waypoint_index_",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": -1
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "astar_planner::SearchInfo::current_velocity_mps_",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      },
                      "rhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "astar_planner::SearchInfo::avoid_velocity_limit_mps_",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:264:3, col:99>",
                "kind": "assignment",
                "variable": "geometry_msgs::PoseStamped_<std::allocator<void>>::pose",
                "unqualified_variable": "pose",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "!=",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::state_",
                                        "type": "string",
                                        "initial-value": {
                                          "kind": "string-literal",
                                          "literal": ""
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "string-literal",
                                        "literal": "OBSTACLE_AVOIDANCE"
                                      }
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "obstacle_count",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::obstacle_detect_count_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": ">",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "+",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": -1
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "astar_planner::SearchInfo::start_waypoint_index_",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": -1
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "astar_planner::SearchInfo::current_velocity_mps_",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      },
                      "rhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "astar_planner::SearchInfo::avoid_velocity_limit_mps_",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:265:3, col:94>",
                "kind": "assignment",
                "variable": "geometry_msgs::PoseStamped_<std::allocator<void>>::pose",
                "unqualified_variable": "pose",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "!=",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::state_",
                                        "type": "string",
                                        "initial-value": {
                                          "kind": "string-literal",
                                          "literal": ""
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "string-literal",
                                        "literal": "OBSTACLE_AVOIDANCE"
                                      }
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "obstacle_count",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::obstacle_detect_count_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": ">",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "+",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": -1
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "astar_planner::SearchInfo::start_waypoint_index_",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": -1
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "astar_planner::SearchInfo::current_velocity_mps_",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      },
                      "rhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "astar_planner::SearchInfo::avoid_velocity_limit_mps_",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:268:3, col:74>",
                "kind": "assignment",
                "variable": "astar_planner::SearchInfo::goal_pose_global_",
                "unqualified_variable": "goal_pose_global_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_msgs::Waypoint_<std::allocator<void>>::pose",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "!=",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::state_",
                                        "type": "string",
                                        "initial-value": {
                                          "kind": "string-literal",
                                          "literal": ""
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "string-literal",
                                        "literal": "OBSTACLE_AVOIDANCE"
                                      }
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "obstacle_count",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::obstacle_detect_count_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": ">",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "+",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": -1
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "astar_planner::SearchInfo::start_waypoint_index_",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": -1
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "astar_planner::SearchInfo::current_velocity_mps_",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      },
                      "rhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "astar_planner::SearchInfo::avoid_velocity_limit_mps_",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:269:3, col:88>",
                "kind": "assignment",
                "variable": "geometry_msgs::PoseStamped_<std::allocator<void>>::pose",
                "unqualified_variable": "pose",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "!=",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::state_",
                                        "type": "string",
                                        "initial-value": {
                                          "kind": "string-literal",
                                          "literal": ""
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "string-literal",
                                        "literal": "OBSTACLE_AVOIDANCE"
                                      }
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "obstacle_count",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::obstacle_detect_count_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": ">",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "+",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": -1
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "astar_planner::SearchInfo::start_waypoint_index_",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": -1
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "astar_planner::SearchInfo::current_velocity_mps_",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      },
                      "rhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "astar_planner::SearchInfo::avoid_velocity_limit_mps_",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/planning/motion/packages/astar_planner/nodes/obstacle_avoid/search_info_ros.cpp:271:3, col:15>",
                "kind": "assignment",
                "variable": "astar_planner::SearchInfo::goal_set_",
                "unqualified_variable": "goal_set_",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "!=",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "astar_planner::SearchInfo::state_",
                                        "type": "string",
                                        "initial-value": {
                                          "kind": "string-literal",
                                          "literal": ""
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "string-literal",
                                        "literal": "OBSTACLE_AVOIDANCE"
                                      }
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "astar_planner::SearchInfo::avoidance_",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": -1
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "int-literal",
                                  "literal": 0
                                }
                              }
                            },
                            "rhs": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "<",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "obstacle_count",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          },
                          "rhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::obstacle_detect_count_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": ">",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "+",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "astar_planner::SearchInfo::closest_waypoint_index_",
                            "type": "integer",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": -1
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "astar_planner::SearchInfo::start_waypoint_index_",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": -1
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "astar_planner::SearchInfo::current_velocity_mps_",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      },
                      "rhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "astar_planner::SearchInfo::avoid_velocity_limit_mps_",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      ]
    }
  }
}