{
  "image": {
    "sha256": "66d3186041a66d858724cf5f48d49ffb170dbb061b60afbad2f689521c32be3e"
  },
  "node-name": "vehicle_sender",
  "package": {
    "name": "vehicle_socket",
    "path": "/home/autoware/Autoware/ros/src/socket/packages/vehicle_socket"
  },
  "sources": [
    "/home/autoware/Autoware/ros/src/socket/packages/vehicle_socket/nodes/vehicle_sender/vehicle_sender.cpp"
  ],
  "program": {
    "program": {
      "entrypoint": "main",
      "functions": [
        {
          "name": "main",
          "parameters": [
            {
              "index": 0,
              "name": "argc",
              "type": "integer"
            }
          ],
          "body": {
            "kind": "compound",
            "statements": [
              {
                "kind": "ros-init",
                "name": {
                  "kind": "string-literal",
                  "literal": "vehicle_sender"
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/vehicle_cmd"
                  }
                },
                "format": "autoware_msgs/VehicleCmd",
                "callback-name": "vehicleCmdCallback"
              },
              {
                "kind": "call",
                "callee": "vehicleCmdCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "kind": "ros-init",
                "name": {
                  "kind": "string-literal",
                  "literal": "vehicle_sender"
                }
              },
              {
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/vehicle_cmd"
                  }
                },
                "format": "autoware_msgs/VehicleCmd",
                "callback-name": "vehicleCmdCallback"
              },
              {
                "kind": "call",
                "callee": "vehicleCmdCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        },
        {
          "name": "vehicleCmdCallback",
          "parameters": [],
          "body": {
            "kind": "compound",
            "statements": [
              {
                "kind": "assignment",
                "variable": "CommandData::linear_x",
                "value": {
                  "kind": "member-var-ref",
                  "variable": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                  "type": "unsupported",
                  "initialValue": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "variable": "geometry_msgs::Twist_<std::allocator<void>>::linear",
                    "type": "unsupported",
                    "initialValue": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "member-var-ref",
                      "variable": "geometry_msgs::TwistStamped_<std::allocator<void>>::twist",
                      "type": "unsupported",
                      "initialValue": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "member-var-ref",
                        "variable": "autoware_msgs::VehicleCmd_<std::allocator<void>>::twist_cmd",
                        "type": "unsupported",
                        "initialValue": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "variable": "msg",
                          "type": "unsupported",
                          "initialValue": {
                            "kind": "unknown"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "CommandData::angular_z",
                "value": {
                  "kind": "member-var-ref",
                  "variable": "geometry_msgs::Vector3_<std::allocator<void>>::z",
                  "type": "unsupported",
                  "initialValue": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "variable": "geometry_msgs::Twist_<std::allocator<void>>::angular",
                    "type": "unsupported",
                    "initialValue": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "member-var-ref",
                      "variable": "geometry_msgs::TwistStamped_<std::allocator<void>>::twist",
                      "type": "unsupported",
                      "initialValue": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "member-var-ref",
                        "variable": "autoware_msgs::VehicleCmd_<std::allocator<void>>::twist_cmd",
                        "type": "unsupported",
                        "initialValue": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "variable": "msg",
                          "type": "unsupported",
                          "initialValue": {
                            "kind": "unknown"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "CommandData::modeValue",
                "value": {
                  "kind": "member-var-ref",
                  "variable": "autoware_msgs::VehicleCmd_<std::allocator<void>>::mode",
                  "type": "unsupported",
                  "initialValue": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "variable": "msg",
                    "type": "unsupported",
                    "initialValue": {
                      "kind": "unknown"
                    }
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "CommandData::gearValue",
                "value": {
                  "kind": "member-var-ref",
                  "variable": "autoware_msgs::VehicleCmd_<std::allocator<void>>::gear",
                  "type": "unsupported",
                  "initialValue": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "variable": "msg",
                    "type": "unsupported",
                    "initialValue": {
                      "kind": "unknown"
                    }
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "CommandData::lampValue",
                "value": {
                  "kind": "int-literal",
                  "literal": 0
                }
              },
              {
                "kind": "assignment",
                "variable": "CommandData::lampValue",
                "value": {
                  "kind": "int-literal",
                  "literal": 1
                }
              },
              {
                "kind": "assignment",
                "variable": "CommandData::lampValue",
                "value": {
                  "kind": "int-literal",
                  "literal": 2
                }
              },
              {
                "kind": "assignment",
                "variable": "CommandData::lampValue",
                "value": {
                  "kind": "int-literal",
                  "literal": 3
                }
              },
              {
                "kind": "assignment",
                "variable": "CommandData::accellValue",
                "value": {
                  "kind": "member-var-ref",
                  "variable": "autoware_msgs::AccelCmd_<std::allocator<void>>::accel",
                  "type": "unsupported",
                  "initialValue": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "variable": "autoware_msgs::VehicleCmd_<std::allocator<void>>::accel_cmd",
                    "type": "unsupported",
                    "initialValue": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "variable": "msg",
                      "type": "unsupported",
                      "initialValue": {
                        "kind": "unknown"
                      }
                    }
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "CommandData::steerValue",
                "value": {
                  "kind": "member-var-ref",
                  "variable": "autoware_msgs::SteerCmd_<std::allocator<void>>::steer",
                  "type": "unsupported",
                  "initialValue": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "variable": "autoware_msgs::VehicleCmd_<std::allocator<void>>::steer_cmd",
                    "type": "unsupported",
                    "initialValue": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "variable": "msg",
                      "type": "unsupported",
                      "initialValue": {
                        "kind": "unknown"
                      }
                    }
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "CommandData::brakeValue",
                "value": {
                  "kind": "member-var-ref",
                  "variable": "autoware_msgs::BrakeCmd_<std::allocator<void>>::brake",
                  "type": "unsupported",
                  "initialValue": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "variable": "autoware_msgs::VehicleCmd_<std::allocator<void>>::brake_cmd",
                    "type": "unsupported",
                    "initialValue": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "variable": "msg",
                      "type": "unsupported",
                      "initialValue": {
                        "kind": "unknown"
                      }
                    }
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "CommandData::linear_velocity",
                "value": {
                  "kind": "member-var-ref",
                  "variable": "autoware_msgs::ControlCommand_<std::allocator<void>>::linear_velocity",
                  "type": "unsupported",
                  "initialValue": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "variable": "autoware_msgs::VehicleCmd_<std::allocator<void>>::ctrl_cmd",
                    "type": "unsupported",
                    "initialValue": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "variable": "msg",
                      "type": "unsupported",
                      "initialValue": {
                        "kind": "unknown"
                      }
                    }
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "CommandData::steering_angle",
                "value": {
                  "kind": "member-var-ref",
                  "variable": "autoware_msgs::ControlCommand_<std::allocator<void>>::steering_angle",
                  "type": "unsupported",
                  "initialValue": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "variable": "autoware_msgs::VehicleCmd_<std::allocator<void>>::ctrl_cmd",
                    "type": "unsupported",
                    "initialValue": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "variable": "msg",
                      "type": "unsupported",
                      "initialValue": {
                        "kind": "unknown"
                      }
                    }
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "CommandData::linear_x",
                "value": {
                  "kind": "member-var-ref",
                  "variable": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                  "type": "unsupported",
                  "initialValue": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "variable": "geometry_msgs::Twist_<std::allocator<void>>::linear",
                    "type": "unsupported",
                    "initialValue": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "member-var-ref",
                      "variable": "geometry_msgs::TwistStamped_<std::allocator<void>>::twist",
                      "type": "unsupported",
                      "initialValue": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "member-var-ref",
                        "variable": "autoware_msgs::VehicleCmd_<std::allocator<void>>::twist_cmd",
                        "type": "unsupported",
                        "initialValue": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "variable": "msg",
                          "type": "unsupported",
                          "initialValue": {
                            "kind": "unknown"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "CommandData::angular_z",
                "value": {
                  "kind": "member-var-ref",
                  "variable": "geometry_msgs::Vector3_<std::allocator<void>>::z",
                  "type": "unsupported",
                  "initialValue": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "variable": "geometry_msgs::Twist_<std::allocator<void>>::angular",
                    "type": "unsupported",
                    "initialValue": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "member-var-ref",
                      "variable": "geometry_msgs::TwistStamped_<std::allocator<void>>::twist",
                      "type": "unsupported",
                      "initialValue": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "member-var-ref",
                        "variable": "autoware_msgs::VehicleCmd_<std::allocator<void>>::twist_cmd",
                        "type": "unsupported",
                        "initialValue": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "variable": "msg",
                          "type": "unsupported",
                          "initialValue": {
                            "kind": "unknown"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "CommandData::modeValue",
                "value": {
                  "kind": "member-var-ref",
                  "variable": "autoware_msgs::VehicleCmd_<std::allocator<void>>::mode",
                  "type": "unsupported",
                  "initialValue": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "variable": "msg",
                    "type": "unsupported",
                    "initialValue": {
                      "kind": "unknown"
                    }
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "CommandData::gearValue",
                "value": {
                  "kind": "member-var-ref",
                  "variable": "autoware_msgs::VehicleCmd_<std::allocator<void>>::gear",
                  "type": "unsupported",
                  "initialValue": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "variable": "msg",
                    "type": "unsupported",
                    "initialValue": {
                      "kind": "unknown"
                    }
                  }
                }
              },
              {
                "kind": "if",
                "trueBranchBody": {
                  "kind": "compound",
                  "statements": [
                    {
                      "kind": "assignment",
                      "variable": "CommandData::lampValue",
                      "value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "kind": "compound",
                  "statements": [
                    {
                      "kind": "if",
                      "trueBranchBody": {
                        "kind": "compound",
                        "statements": [
                          {
                            "kind": "assignment",
                            "variable": "CommandData::lampValue",
                            "value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "kind": "compound",
                        "statements": [
                          {
                            "kind": "if",
                            "trueBranchBody": {
                              "kind": "compound",
                              "statements": [
                                {
                                  "kind": "assignment",
                                  "variable": "CommandData::lampValue",
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": 2
                                  }
                                }
                              ]
                            },
                            "falseBranchBody": {
                              "kind": "compound",
                              "statements": [
                                {
                                  "kind": "if",
                                  "trueBranchBody": {
                                    "kind": "compound",
                                    "statements": [
                                      {
                                        "kind": "assignment",
                                        "variable": "CommandData::lampValue",
                                        "value": {
                                          "kind": "int-literal",
                                          "literal": 3
                                        }
                                      }
                                    ]
                                  },
                                  "falseBranchBody": {
                                    "kind": "compound",
                                    "statements": []
                                  },
                                  "condition": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                }
                              ]
                            },
                            "condition": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          {
                            "kind": "if",
                            "trueBranchBody": {
                              "kind": "compound",
                              "statements": [
                                {
                                  "kind": "assignment",
                                  "variable": "CommandData::lampValue",
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": 2
                                  }
                                }
                              ]
                            },
                            "falseBranchBody": {
                              "kind": "compound",
                              "statements": [
                                {
                                  "kind": "if",
                                  "trueBranchBody": {
                                    "kind": "compound",
                                    "statements": [
                                      {
                                        "kind": "assignment",
                                        "variable": "CommandData::lampValue",
                                        "value": {
                                          "kind": "int-literal",
                                          "literal": 3
                                        }
                                      }
                                    ]
                                  },
                                  "falseBranchBody": {
                                    "kind": "compound",
                                    "statements": []
                                  },
                                  "condition": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                }
                              ]
                            },
                            "condition": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        ]
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    },
                    {
                      "kind": "if",
                      "trueBranchBody": {
                        "kind": "compound",
                        "statements": [
                          {
                            "kind": "assignment",
                            "variable": "CommandData::lampValue",
                            "value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "kind": "compound",
                        "statements": [
                          {
                            "kind": "if",
                            "trueBranchBody": {
                              "kind": "compound",
                              "statements": [
                                {
                                  "kind": "assignment",
                                  "variable": "CommandData::lampValue",
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": 2
                                  }
                                }
                              ]
                            },
                            "falseBranchBody": {
                              "kind": "compound",
                              "statements": [
                                {
                                  "kind": "if",
                                  "trueBranchBody": {
                                    "kind": "compound",
                                    "statements": [
                                      {
                                        "kind": "assignment",
                                        "variable": "CommandData::lampValue",
                                        "value": {
                                          "kind": "int-literal",
                                          "literal": 3
                                        }
                                      }
                                    ]
                                  },
                                  "falseBranchBody": {
                                    "kind": "compound",
                                    "statements": []
                                  },
                                  "condition": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                }
                              ]
                            },
                            "condition": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          {
                            "kind": "if",
                            "trueBranchBody": {
                              "kind": "compound",
                              "statements": [
                                {
                                  "kind": "assignment",
                                  "variable": "CommandData::lampValue",
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": 2
                                  }
                                }
                              ]
                            },
                            "falseBranchBody": {
                              "kind": "compound",
                              "statements": [
                                {
                                  "kind": "if",
                                  "trueBranchBody": {
                                    "kind": "compound",
                                    "statements": [
                                      {
                                        "kind": "assignment",
                                        "variable": "CommandData::lampValue",
                                        "value": {
                                          "kind": "int-literal",
                                          "literal": 3
                                        }
                                      }
                                    ]
                                  },
                                  "falseBranchBody": {
                                    "kind": "compound",
                                    "statements": []
                                  },
                                  "condition": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                }
                              ]
                            },
                            "condition": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        ]
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    },
                    {
                      "kind": "if",
                      "trueBranchBody": {
                        "kind": "compound",
                        "statements": [
                          {
                            "kind": "assignment",
                            "variable": "CommandData::lampValue",
                            "value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "kind": "compound",
                        "statements": [
                          {
                            "kind": "if",
                            "trueBranchBody": {
                              "kind": "compound",
                              "statements": [
                                {
                                  "kind": "assignment",
                                  "variable": "CommandData::lampValue",
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": 2
                                  }
                                }
                              ]
                            },
                            "falseBranchBody": {
                              "kind": "compound",
                              "statements": [
                                {
                                  "kind": "if",
                                  "trueBranchBody": {
                                    "kind": "compound",
                                    "statements": [
                                      {
                                        "kind": "assignment",
                                        "variable": "CommandData::lampValue",
                                        "value": {
                                          "kind": "int-literal",
                                          "literal": 3
                                        }
                                      }
                                    ]
                                  },
                                  "falseBranchBody": {
                                    "kind": "compound",
                                    "statements": []
                                  },
                                  "condition": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                }
                              ]
                            },
                            "condition": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          {
                            "kind": "if",
                            "trueBranchBody": {
                              "kind": "compound",
                              "statements": [
                                {
                                  "kind": "assignment",
                                  "variable": "CommandData::lampValue",
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": 2
                                  }
                                }
                              ]
                            },
                            "falseBranchBody": {
                              "kind": "compound",
                              "statements": [
                                {
                                  "kind": "if",
                                  "trueBranchBody": {
                                    "kind": "compound",
                                    "statements": [
                                      {
                                        "kind": "assignment",
                                        "variable": "CommandData::lampValue",
                                        "value": {
                                          "kind": "int-literal",
                                          "literal": 3
                                        }
                                      }
                                    ]
                                  },
                                  "falseBranchBody": {
                                    "kind": "compound",
                                    "statements": []
                                  },
                                  "condition": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                }
                              ]
                            },
                            "condition": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        ]
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  ]
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "kind": "assignment",
                "variable": "CommandData::accellValue",
                "value": {
                  "kind": "member-var-ref",
                  "variable": "autoware_msgs::AccelCmd_<std::allocator<void>>::accel",
                  "type": "unsupported",
                  "initialValue": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "variable": "autoware_msgs::VehicleCmd_<std::allocator<void>>::accel_cmd",
                    "type": "unsupported",
                    "initialValue": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "variable": "msg",
                      "type": "unsupported",
                      "initialValue": {
                        "kind": "unknown"
                      }
                    }
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "CommandData::steerValue",
                "value": {
                  "kind": "member-var-ref",
                  "variable": "autoware_msgs::SteerCmd_<std::allocator<void>>::steer",
                  "type": "unsupported",
                  "initialValue": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "variable": "autoware_msgs::VehicleCmd_<std::allocator<void>>::steer_cmd",
                    "type": "unsupported",
                    "initialValue": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "variable": "msg",
                      "type": "unsupported",
                      "initialValue": {
                        "kind": "unknown"
                      }
                    }
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "CommandData::brakeValue",
                "value": {
                  "kind": "member-var-ref",
                  "variable": "autoware_msgs::BrakeCmd_<std::allocator<void>>::brake",
                  "type": "unsupported",
                  "initialValue": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "variable": "autoware_msgs::VehicleCmd_<std::allocator<void>>::brake_cmd",
                    "type": "unsupported",
                    "initialValue": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "variable": "msg",
                      "type": "unsupported",
                      "initialValue": {
                        "kind": "unknown"
                      }
                    }
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "CommandData::linear_velocity",
                "value": {
                  "kind": "member-var-ref",
                  "variable": "autoware_msgs::ControlCommand_<std::allocator<void>>::linear_velocity",
                  "type": "unsupported",
                  "initialValue": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "variable": "autoware_msgs::VehicleCmd_<std::allocator<void>>::ctrl_cmd",
                    "type": "unsupported",
                    "initialValue": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "variable": "msg",
                      "type": "unsupported",
                      "initialValue": {
                        "kind": "unknown"
                      }
                    }
                  }
                }
              },
              {
                "kind": "assignment",
                "variable": "CommandData::steering_angle",
                "value": {
                  "kind": "member-var-ref",
                  "variable": "autoware_msgs::ControlCommand_<std::allocator<void>>::steering_angle",
                  "type": "unsupported",
                  "initialValue": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "variable": "autoware_msgs::VehicleCmd_<std::allocator<void>>::ctrl_cmd",
                    "type": "unsupported",
                    "initialValue": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "variable": "msg",
                      "type": "unsupported",
                      "initialValue": {
                        "kind": "unknown"
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      ]
    }
  }
}