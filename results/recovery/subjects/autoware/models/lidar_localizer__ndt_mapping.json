{
  "image": {
    "sha256": "95a3283df69676a0a64484edcf6b09f886abb9ab1dec292863aa0bffd2ce613b"
  },
  "node-name": "ndt_mapping",
  "package": {
    "name": "lidar_localizer",
    "path": "/home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer"
  },
  "sources": [
    "/home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp"
  ],
  "program": {
    "program": {
      "entrypoint": "main",
      "functions": [
        {
          "name": "param_callback",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:167:3, col:20>",
                "kind": "assignment",
                "variable": "ndt_res",
                "unqualified_variable": "ndt_res",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigNDTMapping_<std::allocator<void>>::resolution",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:168:3, col:22>",
                "kind": "assignment",
                "variable": "step_size",
                "unqualified_variable": "step_size",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigNDTMapping_<std::allocator<void>>::step_size",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:169:3, col:22>",
                "kind": "assignment",
                "variable": "trans_eps",
                "unqualified_variable": "trans_eps",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigNDTMapping_<std::allocator<void>>::trans_epsilon",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:170:3, col:21>",
                "kind": "assignment",
                "variable": "max_iter",
                "unqualified_variable": "max_iter",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigNDTMapping_<std::allocator<void>>::max_iterations",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:171:3, col:28>",
                "kind": "assignment",
                "variable": "voxel_leaf_size",
                "unqualified_variable": "voxel_leaf_size",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigNDTMapping_<std::allocator<void>>::leaf_size",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:172:3, col:27>",
                "kind": "assignment",
                "variable": "min_scan_range",
                "unqualified_variable": "min_scan_range",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigNDTMapping_<std::allocator<void>>::min_scan_range",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:173:3, col:27>",
                "kind": "assignment",
                "variable": "max_scan_range",
                "unqualified_variable": "max_scan_range",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigNDTMapping_<std::allocator<void>>::max_scan_range",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:174:3, col:31>",
                "kind": "assignment",
                "variable": "min_add_scan_shift",
                "unqualified_variable": "min_add_scan_shift",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigNDTMapping_<std::allocator<void>>::min_add_scan_shift",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:167:3, col:20>",
                "kind": "assignment",
                "variable": "ndt_res",
                "unqualified_variable": "ndt_res",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigNDTMapping_<std::allocator<void>>::resolution",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:168:3, col:22>",
                "kind": "assignment",
                "variable": "step_size",
                "unqualified_variable": "step_size",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigNDTMapping_<std::allocator<void>>::step_size",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:169:3, col:22>",
                "kind": "assignment",
                "variable": "trans_eps",
                "unqualified_variable": "trans_eps",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigNDTMapping_<std::allocator<void>>::trans_epsilon",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:170:3, col:21>",
                "kind": "assignment",
                "variable": "max_iter",
                "unqualified_variable": "max_iter",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigNDTMapping_<std::allocator<void>>::max_iterations",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:171:3, col:28>",
                "kind": "assignment",
                "variable": "voxel_leaf_size",
                "unqualified_variable": "voxel_leaf_size",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigNDTMapping_<std::allocator<void>>::leaf_size",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:172:3, col:27>",
                "kind": "assignment",
                "variable": "min_scan_range",
                "unqualified_variable": "min_scan_range",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigNDTMapping_<std::allocator<void>>::min_scan_range",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:173:3, col:27>",
                "kind": "assignment",
                "variable": "max_scan_range",
                "unqualified_variable": "max_scan_range",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigNDTMapping_<std::allocator<void>>::max_scan_range",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:174:3, col:31>",
                "kind": "assignment",
                "variable": "min_add_scan_shift",
                "unqualified_variable": "min_add_scan_shift",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "autoware_config_msgs::ConfigNDTMapping_<std::allocator<void>>::min_add_scan_shift",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        },
        {
          "name": "output_callback",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:197:3, col:30>",
                "kind": "assignment",
                "variable": "pcl::PCLHeader::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:198:3, col:35>",
                "kind": "assignment",
                "variable": "pcl::PCLHeader::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:218:3, col:35>",
                "kind": "publish",
                "publisher": "ndt_map_pub",
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:197:3, col:30>",
                "kind": "assignment",
                "variable": "pcl::PCLHeader::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:198:3, col:35>",
                "kind": "assignment",
                "variable": "pcl::PCLHeader::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:218:3, col:35>",
                "kind": "publish",
                "publisher": "ndt_map_pub",
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        },
        {
          "name": "odom_callback",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:373:3, col:11>",
                "kind": "assignment",
                "variable": "odom",
                "unqualified_variable": "odom",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:373:3, col:11>",
                "kind": "assignment",
                "variable": "odom",
                "unqualified_variable": "odom",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        },
        {
          "name": "points_callback",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:467:3, col:37>",
                "kind": "assignment",
                "variable": "current_scan_time",
                "unqualified_variable": "current_scan_time",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "std_msgs::Header_<std::allocator<void>>::stamp",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "qualified_name": "sensor_msgs::PointCloud2_<std::allocator<void>>::header",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:473:5, col:25>",
                "kind": "assignment",
                "variable": "pcl::_PointXYZI::(anonymous union)::(anonymous struct)::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pcl::_PointXYZI::(anonymous union)::(anonymous struct)::x",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "qualified_name": "pcl::_PointXYZI::(anonymous union)::(anonymous)",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "member-var-ref",
                      "qualified_name": "pcl::_PointXYZI::(anonymous)",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "unknown"
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "!=",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "item",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:474:5, col:25>",
                "kind": "assignment",
                "variable": "pcl::_PointXYZI::(anonymous union)::(anonymous struct)::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pcl::_PointXYZI::(anonymous union)::(anonymous struct)::y",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "qualified_name": "pcl::_PointXYZI::(anonymous union)::(anonymous)",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "member-var-ref",
                      "qualified_name": "pcl::_PointXYZI::(anonymous)",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "unknown"
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "!=",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "item",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:475:5, col:25>",
                "kind": "assignment",
                "variable": "pcl::_PointXYZI::(anonymous union)::(anonymous struct)::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pcl::_PointXYZI::(anonymous union)::(anonymous struct)::z",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "qualified_name": "pcl::_PointXYZI::(anonymous union)::(anonymous)",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "member-var-ref",
                      "qualified_name": "pcl::_PointXYZI::(anonymous)",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "unknown"
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "!=",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "item",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:476:5, col:33>",
                "kind": "assignment",
                "variable": "pcl::_PointXYZI::(anonymous union)::(anonymous struct)::intensity",
                "unqualified_variable": "intensity",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pcl::_PointXYZI::(anonymous union)::(anonymous struct)::intensity",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "qualified_name": "pcl::_PointXYZI::(anonymous union)::(anonymous)",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "member-var-ref",
                      "qualified_name": "pcl::_PointXYZI::(anonymous)",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "unknown"
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "!=",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "item",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:478:5, col:43>",
                "kind": "assignment",
                "variable": "r",
                "unqualified_variable": "r",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "!=",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "item",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:491:5, col:13>",
                "kind": "assignment",
                "variable": "map",
                "unqualified_variable": "map",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "==",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "initial_scan_loaded",
                    "type": "integer",
                    "initial-value": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  },
                  "rhs": {
                    "kind": "int-literal",
                    "literal": 0
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:492:5, col:27>",
                "kind": "assignment",
                "variable": "initial_scan_loaded",
                "unqualified_variable": "initial_scan_loaded",
                "value": {
                  "kind": "int-literal",
                  "literal": 1
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "==",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "initial_scan_loaded",
                    "type": "integer",
                    "initial-value": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  },
                  "rhs": {
                    "kind": "int-literal",
                    "literal": 0
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:555:5, col:20>",
                "kind": "assignment",
                "variable": "is_first_map",
                "unqualified_variable": "is_first_map",
                "value": {
                  "kind": "bool-literal",
                  "literal": false
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "==",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "is_first_map",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    }
                  },
                  "rhs": {
                    "kind": "bool-literal",
                    "literal": true
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:558:3, col:36>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "binary-expr",
                  "operator": "+",
                  "lhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "pose::x",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "previous_pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "diff_x",
                    "type": "float",
                    "initial-value": {
                      "kind": "float-literal",
                      "literal": 0.0
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:559:3, col:36>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "binary-expr",
                  "operator": "+",
                  "lhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "pose::y",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "previous_pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "diff_y",
                    "type": "float",
                    "initial-value": {
                      "kind": "float-literal",
                      "literal": 0.0
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:560:3, col:36>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "binary-expr",
                  "operator": "+",
                  "lhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "pose::z",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "previous_pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "diff_z",
                    "type": "float",
                    "initial-value": {
                      "kind": "float-literal",
                      "literal": 0.0
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:561:3, col:35>",
                "kind": "assignment",
                "variable": "pose::roll",
                "unqualified_variable": "roll",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::roll",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "previous_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:562:3, col:36>",
                "kind": "assignment",
                "variable": "pose::pitch",
                "unqualified_variable": "pitch",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::pitch",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "previous_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:563:3, col:40>",
                "kind": "assignment",
                "variable": "pose::yaw",
                "unqualified_variable": "yaw",
                "value": {
                  "kind": "binary-expr",
                  "operator": "+",
                  "lhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "pose::yaw",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "previous_pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "diff_yaw",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:574:5, col:26>",
                "kind": "assignment",
                "variable": "guess_pose_for_ndt",
                "unqualified_variable": "guess_pose_for_ndt",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "guess_pose_imu_odom",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_use_imu",
                      "type": "bool",
                      "initial-value": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    },
                    "rhs": {
                      "kind": "bool-literal",
                      "literal": true
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_imu",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": true
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_odom",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": true
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:576:5, col:26>",
                "kind": "assignment",
                "variable": "guess_pose_for_ndt",
                "unqualified_variable": "guess_pose_for_ndt",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "guess_pose_imu",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_imu",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": true
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_imu",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": true
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_odom",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": true
                              }
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_imu",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": true
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_imu",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": true
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_imu",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": true
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_odom",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:578:5, col:26>",
                "kind": "assignment",
                "variable": "guess_pose_for_ndt",
                "unqualified_variable": "guess_pose_for_ndt",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "guess_pose_odom",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_imu",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": true
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_imu",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    },
                                    "rhs": {
                                      "kind": "bool-literal",
                                      "literal": true
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_odom",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    },
                                    "rhs": {
                                      "kind": "bool-literal",
                                      "literal": true
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_imu",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": true
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_imu",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": true
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_imu",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": true
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_odom",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_imu",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": true
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "_use_imu",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  },
                                  "rhs": {
                                    "kind": "bool-literal",
                                    "literal": true
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "_use_odom",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  },
                                  "rhs": {
                                    "kind": "bool-literal",
                                    "literal": true
                                  }
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_imu",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": true
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_imu",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": true
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_imu",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_imu",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_use_odom",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": true
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:580:5, col:26>",
                "kind": "assignment",
                "variable": "guess_pose_for_ndt",
                "unqualified_variable": "guess_pose_for_ndt",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "guess_pose",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "||",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "||",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "_use_imu",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  },
                                  "rhs": {
                                    "kind": "bool-literal",
                                    "literal": true
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "_use_imu",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      },
                                      "rhs": {
                                        "kind": "bool-literal",
                                        "literal": true
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "_use_odom",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      },
                                      "rhs": {
                                        "kind": "bool-literal",
                                        "literal": true
                                      }
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "_use_imu",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  },
                                  "rhs": {
                                    "kind": "bool-literal",
                                    "literal": true
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_imu",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": true
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_imu",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": true
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_odom",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_imu",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": true
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_imu",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    },
                                    "rhs": {
                                      "kind": "bool-literal",
                                      "literal": true
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_odom",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    },
                                    "rhs": {
                                      "kind": "bool-literal",
                                      "literal": true
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_imu",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": true
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_imu",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": true
                              }
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_use_imu",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_imu",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_odom",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": true
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_imu",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": true
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_imu",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    },
                                    "rhs": {
                                      "kind": "bool-literal",
                                      "literal": true
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "_use_odom",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    },
                                    "rhs": {
                                      "kind": "bool-literal",
                                      "literal": true
                                    }
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_use_imu",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": true
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_imu",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": true
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_imu",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": true
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_odom",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_imu",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": true
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "_use_imu",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  },
                                  "rhs": {
                                    "kind": "bool-literal",
                                    "literal": true
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "_use_odom",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  },
                                  "rhs": {
                                    "kind": "bool-literal",
                                    "literal": true
                                  }
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "_use_imu",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": true
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_imu",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": true
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_use_imu",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:591:3, col:27>",
                "kind": "assignment",
                "variable": "t3_end",
                "unqualified_variable": "t3_end",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:592:3, col:17>",
                "kind": "assignment",
                "variable": "d3",
                "unqualified_variable": "d3",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:594:3, col:29>",
                "kind": "assignment",
                "variable": "t4_start",
                "unqualified_variable": "t4_start",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:601:5, col:41>",
                "kind": "assignment",
                "variable": "fitness_score",
                "unqualified_variable": "fitness_score",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "==",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "_method_type",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "int-literal",
                      "literal": "0"
                    }
                  },
                  "rhs": {
                    "kind": "enum-ref",
                    "qualified_name": "MethodType::PCL_GENERIC",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "int-literal",
                      "literal": 0
                    },
                    "value": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:602:5, col:46>",
                "kind": "assignment",
                "variable": "t_localizer",
                "unqualified_variable": "t_localizer",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "==",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "_method_type",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "int-literal",
                      "literal": "0"
                    }
                  },
                  "rhs": {
                    "kind": "enum-ref",
                    "qualified_name": "MethodType::PCL_GENERIC",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "int-literal",
                      "literal": 0
                    },
                    "value": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:603:5, col:38>",
                "kind": "assignment",
                "variable": "has_converged",
                "unqualified_variable": "has_converged",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "==",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "_method_type",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "int-literal",
                      "literal": "0"
                    }
                  },
                  "rhs": {
                    "kind": "enum-ref",
                    "qualified_name": "MethodType::PCL_GENERIC",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "int-literal",
                      "literal": 0
                    },
                    "value": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:604:5, col:52>",
                "kind": "assignment",
                "variable": "final_num_iteration",
                "unqualified_variable": "final_num_iteration",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "==",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "_method_type",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "int-literal",
                      "literal": "0"
                    }
                  },
                  "rhs": {
                    "kind": "enum-ref",
                    "qualified_name": "MethodType::PCL_GENERIC",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "int-literal",
                      "literal": 0
                    },
                    "value": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:605:5, col:67>",
                "kind": "assignment",
                "variable": "transformation_probability",
                "unqualified_variable": "transformation_probability",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "==",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "_method_type",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "int-literal",
                      "literal": "0"
                    }
                  },
                  "rhs": {
                    "kind": "enum-ref",
                    "qualified_name": "MethodType::PCL_GENERIC",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "int-literal",
                      "literal": 0
                    },
                    "value": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:610:5, col:45>",
                "kind": "assignment",
                "variable": "fitness_score",
                "unqualified_variable": "fitness_score",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_method_type",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": "0"
                        }
                      },
                      "rhs": {
                        "kind": "enum-ref",
                        "qualified_name": "MethodType::PCL_GENERIC",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        },
                        "value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_method_type",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": "0"
                      }
                    },
                    "rhs": {
                      "kind": "enum-ref",
                      "qualified_name": "MethodType::PCL_ANH",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 1
                      },
                      "value": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:611:5, col:50>",
                "kind": "assignment",
                "variable": "t_localizer",
                "unqualified_variable": "t_localizer",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_method_type",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": "0"
                        }
                      },
                      "rhs": {
                        "kind": "enum-ref",
                        "qualified_name": "MethodType::PCL_GENERIC",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        },
                        "value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_method_type",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": "0"
                      }
                    },
                    "rhs": {
                      "kind": "enum-ref",
                      "qualified_name": "MethodType::PCL_ANH",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 1
                      },
                      "value": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:612:5, col:42>",
                "kind": "assignment",
                "variable": "has_converged",
                "unqualified_variable": "has_converged",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_method_type",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": "0"
                        }
                      },
                      "rhs": {
                        "kind": "enum-ref",
                        "qualified_name": "MethodType::PCL_GENERIC",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        },
                        "value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_method_type",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": "0"
                      }
                    },
                    "rhs": {
                      "kind": "enum-ref",
                      "qualified_name": "MethodType::PCL_ANH",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 1
                      },
                      "value": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:613:5, col:56>",
                "kind": "assignment",
                "variable": "final_num_iteration",
                "unqualified_variable": "final_num_iteration",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "_method_type",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": "0"
                        }
                      },
                      "rhs": {
                        "kind": "enum-ref",
                        "qualified_name": "MethodType::PCL_GENERIC",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        },
                        "value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_method_type",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": "0"
                      }
                    },
                    "rhs": {
                      "kind": "enum-ref",
                      "qualified_name": "MethodType::PCL_ANH",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 1
                      },
                      "value": {
                        "kind": "int-literal",
                        "literal": 1
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:619:5, col:49>",
                "kind": "assignment",
                "variable": "fitness_score",
                "unqualified_variable": "fitness_score",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_method_type",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": "0"
                          }
                        },
                        "rhs": {
                          "kind": "enum-ref",
                          "qualified_name": "MethodType::PCL_GENERIC",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          },
                          "value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_method_type",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": "0"
                          }
                        },
                        "rhs": {
                          "kind": "enum-ref",
                          "qualified_name": "MethodType::PCL_ANH",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 1
                          },
                          "value": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_method_type",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": "0"
                      }
                    },
                    "rhs": {
                      "kind": "enum-ref",
                      "qualified_name": "MethodType::PCL_ANH_GPU",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 2
                      },
                      "value": {
                        "kind": "int-literal",
                        "literal": 2
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:620:5, col:54>",
                "kind": "assignment",
                "variable": "t_localizer",
                "unqualified_variable": "t_localizer",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_method_type",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": "0"
                          }
                        },
                        "rhs": {
                          "kind": "enum-ref",
                          "qualified_name": "MethodType::PCL_GENERIC",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          },
                          "value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_method_type",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": "0"
                          }
                        },
                        "rhs": {
                          "kind": "enum-ref",
                          "qualified_name": "MethodType::PCL_ANH",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 1
                          },
                          "value": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_method_type",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": "0"
                      }
                    },
                    "rhs": {
                      "kind": "enum-ref",
                      "qualified_name": "MethodType::PCL_ANH_GPU",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 2
                      },
                      "value": {
                        "kind": "int-literal",
                        "literal": 2
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:621:5, col:46>",
                "kind": "assignment",
                "variable": "has_converged",
                "unqualified_variable": "has_converged",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_method_type",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": "0"
                          }
                        },
                        "rhs": {
                          "kind": "enum-ref",
                          "qualified_name": "MethodType::PCL_GENERIC",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          },
                          "value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_method_type",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": "0"
                          }
                        },
                        "rhs": {
                          "kind": "enum-ref",
                          "qualified_name": "MethodType::PCL_ANH",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 1
                          },
                          "value": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_method_type",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": "0"
                      }
                    },
                    "rhs": {
                      "kind": "enum-ref",
                      "qualified_name": "MethodType::PCL_ANH_GPU",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 2
                      },
                      "value": {
                        "kind": "int-literal",
                        "literal": 2
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:622:5, col:60>",
                "kind": "assignment",
                "variable": "final_num_iteration",
                "unqualified_variable": "final_num_iteration",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_method_type",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": "0"
                          }
                        },
                        "rhs": {
                          "kind": "enum-ref",
                          "qualified_name": "MethodType::PCL_GENERIC",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          },
                          "value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_method_type",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": "0"
                          }
                        },
                        "rhs": {
                          "kind": "enum-ref",
                          "qualified_name": "MethodType::PCL_ANH",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 1
                          },
                          "value": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_method_type",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": "0"
                      }
                    },
                    "rhs": {
                      "kind": "enum-ref",
                      "qualified_name": "MethodType::PCL_ANH_GPU",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 2
                      },
                      "value": {
                        "kind": "int-literal",
                        "literal": 2
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:629:5, col:45>",
                "kind": "assignment",
                "variable": "fitness_score",
                "unqualified_variable": "fitness_score",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_method_type",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": "0"
                            }
                          },
                          "rhs": {
                            "kind": "enum-ref",
                            "qualified_name": "MethodType::PCL_GENERIC",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            },
                            "value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_method_type",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": "0"
                            }
                          },
                          "rhs": {
                            "kind": "enum-ref",
                            "qualified_name": "MethodType::PCL_ANH",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            },
                            "value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_method_type",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": "0"
                          }
                        },
                        "rhs": {
                          "kind": "enum-ref",
                          "qualified_name": "MethodType::PCL_ANH_GPU",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 2
                          },
                          "value": {
                            "kind": "int-literal",
                            "literal": 2
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_method_type",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": "0"
                      }
                    },
                    "rhs": {
                      "kind": "enum-ref",
                      "qualified_name": "MethodType::PCL_OPENMP",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 3
                      },
                      "value": {
                        "kind": "int-literal",
                        "literal": 3
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:630:5, col:50>",
                "kind": "assignment",
                "variable": "t_localizer",
                "unqualified_variable": "t_localizer",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_method_type",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": "0"
                            }
                          },
                          "rhs": {
                            "kind": "enum-ref",
                            "qualified_name": "MethodType::PCL_GENERIC",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            },
                            "value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_method_type",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": "0"
                            }
                          },
                          "rhs": {
                            "kind": "enum-ref",
                            "qualified_name": "MethodType::PCL_ANH",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            },
                            "value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_method_type",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": "0"
                          }
                        },
                        "rhs": {
                          "kind": "enum-ref",
                          "qualified_name": "MethodType::PCL_ANH_GPU",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 2
                          },
                          "value": {
                            "kind": "int-literal",
                            "literal": 2
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_method_type",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": "0"
                      }
                    },
                    "rhs": {
                      "kind": "enum-ref",
                      "qualified_name": "MethodType::PCL_OPENMP",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 3
                      },
                      "value": {
                        "kind": "int-literal",
                        "literal": 3
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:631:5, col:42>",
                "kind": "assignment",
                "variable": "has_converged",
                "unqualified_variable": "has_converged",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_method_type",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": "0"
                            }
                          },
                          "rhs": {
                            "kind": "enum-ref",
                            "qualified_name": "MethodType::PCL_GENERIC",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            },
                            "value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_method_type",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": "0"
                            }
                          },
                          "rhs": {
                            "kind": "enum-ref",
                            "qualified_name": "MethodType::PCL_ANH",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            },
                            "value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_method_type",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": "0"
                          }
                        },
                        "rhs": {
                          "kind": "enum-ref",
                          "qualified_name": "MethodType::PCL_ANH_GPU",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 2
                          },
                          "value": {
                            "kind": "int-literal",
                            "literal": 2
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_method_type",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": "0"
                      }
                    },
                    "rhs": {
                      "kind": "enum-ref",
                      "qualified_name": "MethodType::PCL_OPENMP",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 3
                      },
                      "value": {
                        "kind": "int-literal",
                        "literal": 3
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:632:5, col:56>",
                "kind": "assignment",
                "variable": "final_num_iteration",
                "unqualified_variable": "final_num_iteration",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_method_type",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": "0"
                            }
                          },
                          "rhs": {
                            "kind": "enum-ref",
                            "qualified_name": "MethodType::PCL_GENERIC",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            },
                            "value": {
                              "kind": "int-literal",
                              "literal": 0
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_method_type",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": "0"
                            }
                          },
                          "rhs": {
                            "kind": "enum-ref",
                            "qualified_name": "MethodType::PCL_ANH",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 1
                            },
                            "value": {
                              "kind": "int-literal",
                              "literal": 1
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_method_type",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": "0"
                          }
                        },
                        "rhs": {
                          "kind": "enum-ref",
                          "qualified_name": "MethodType::PCL_ANH_GPU",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 2
                          },
                          "value": {
                            "kind": "int-literal",
                            "literal": 2
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "_method_type",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": "0"
                      }
                    },
                    "rhs": {
                      "kind": "enum-ref",
                      "qualified_name": "MethodType::PCL_OPENMP",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 3
                      },
                      "value": {
                        "kind": "int-literal",
                        "literal": 3
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:636:3, col:31>",
                "kind": "assignment",
                "variable": "t_base_link",
                "unqualified_variable": "t_base_link",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:655:3, col:38>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:656:3, col:38>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:657:3, col:38>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:661:3, col:32>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:662:3, col:32>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:663:3, col:32>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:666:3, col:29>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::x",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "ndt_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:667:3, col:29>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::y",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "ndt_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:668:3, col:29>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::z",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "ndt_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:669:3, col:32>",
                "kind": "assignment",
                "variable": "pose::roll",
                "unqualified_variable": "roll",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::roll",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "ndt_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:670:3, col:33>",
                "kind": "assignment",
                "variable": "pose::pitch",
                "unqualified_variable": "pitch",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::pitch",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "ndt_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:671:3, col:31>",
                "kind": "assignment",
                "variable": "pose::yaw",
                "unqualified_variable": "yaw",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::yaw",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "ndt_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:677:3, col:90>",
                "kind": "publish",
                "publisher": "tf_broadcaster",
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:679:3, col:39>",
                "kind": "assignment",
                "variable": "scan_duration",
                "unqualified_variable": "scan_duration",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:683:3, col:43>",
                "kind": "assignment",
                "variable": "diff_x",
                "unqualified_variable": "diff_x",
                "value": {
                  "kind": "binary-expr",
                  "operator": "-",
                  "lhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "pose::x",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "current_pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "pose::x",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "previous_pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:684:3, col:43>",
                "kind": "assignment",
                "variable": "diff_y",
                "unqualified_variable": "diff_y",
                "value": {
                  "kind": "binary-expr",
                  "operator": "-",
                  "lhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "pose::y",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "current_pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "pose::y",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "previous_pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:685:3, col:43>",
                "kind": "assignment",
                "variable": "diff_z",
                "unqualified_variable": "diff_z",
                "value": {
                  "kind": "binary-expr",
                  "operator": "-",
                  "lhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "pose::z",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "current_pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "pose::z",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "previous_pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:686:3, col:67>",
                "kind": "assignment",
                "variable": "diff_yaw",
                "unqualified_variable": "diff_yaw",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:687:3, col:66>",
                "kind": "assignment",
                "variable": "diff",
                "unqualified_variable": "diff",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:689:3, col:33>",
                "kind": "assignment",
                "variable": "current_velocity_x",
                "unqualified_variable": "current_velocity_x",
                "value": {
                  "kind": "binary-expr",
                  "operator": "/",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "diff_x",
                    "type": "float",
                    "initial-value": {
                      "kind": "float-literal",
                      "literal": 0.0
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "secs",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:690:3, col:33>",
                "kind": "assignment",
                "variable": "current_velocity_y",
                "unqualified_variable": "current_velocity_y",
                "value": {
                  "kind": "binary-expr",
                  "operator": "/",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "diff_y",
                    "type": "float",
                    "initial-value": {
                      "kind": "float-literal",
                      "literal": 0.0
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "secs",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:691:3, col:33>",
                "kind": "assignment",
                "variable": "current_velocity_z",
                "unqualified_variable": "current_velocity_z",
                "value": {
                  "kind": "binary-expr",
                  "operator": "/",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "diff_z",
                    "type": "float",
                    "initial-value": {
                      "kind": "float-literal",
                      "literal": 0.0
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "secs",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:693:3, col:37>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::x",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:694:3, col:37>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::y",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:695:3, col:37>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::z",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:696:3, col:40>",
                "kind": "assignment",
                "variable": "pose::roll",
                "unqualified_variable": "roll",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::roll",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:697:3, col:41>",
                "kind": "assignment",
                "variable": "pose::pitch",
                "unqualified_variable": "pitch",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::pitch",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:698:3, col:39>",
                "kind": "assignment",
                "variable": "pose::yaw",
                "unqualified_variable": "yaw",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::yaw",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:700:3, col:38>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::x",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:701:3, col:38>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::y",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:702:3, col:38>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::z",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:703:3, col:41>",
                "kind": "assignment",
                "variable": "pose::roll",
                "unqualified_variable": "roll",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::roll",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:704:3, col:42>",
                "kind": "assignment",
                "variable": "pose::pitch",
                "unqualified_variable": "pitch",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::pitch",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:705:3, col:40>",
                "kind": "assignment",
                "variable": "pose::yaw",
                "unqualified_variable": "yaw",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::yaw",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:707:3, col:42>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::x",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:708:3, col:42>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::y",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:709:3, col:42>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::z",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:710:3, col:45>",
                "kind": "assignment",
                "variable": "pose::roll",
                "unqualified_variable": "roll",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::roll",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:711:3, col:46>",
                "kind": "assignment",
                "variable": "pose::pitch",
                "unqualified_variable": "pitch",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::pitch",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:712:3, col:44>",
                "kind": "assignment",
                "variable": "pose::yaw",
                "unqualified_variable": "yaw",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::yaw",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:714:3, col:28>",
                "kind": "assignment",
                "variable": "current_velocity_imu_x",
                "unqualified_variable": "current_velocity_imu_x",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "current_velocity_x",
                  "type": "float",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:715:3, col:28>",
                "kind": "assignment",
                "variable": "current_velocity_imu_y",
                "unqualified_variable": "current_velocity_imu_y",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "current_velocity_y",
                  "type": "float",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:716:3, col:28>",
                "kind": "assignment",
                "variable": "current_velocity_imu_z",
                "unqualified_variable": "current_velocity_imu_z",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "current_velocity_z",
                  "type": "float",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:719:3, col:34>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::x",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:720:3, col:34>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::y",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:721:3, col:34>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::z",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:722:3, col:37>",
                "kind": "assignment",
                "variable": "pose::roll",
                "unqualified_variable": "roll",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::roll",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:723:3, col:38>",
                "kind": "assignment",
                "variable": "pose::pitch",
                "unqualified_variable": "pitch",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::pitch",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:724:3, col:36>",
                "kind": "assignment",
                "variable": "pose::yaw",
                "unqualified_variable": "yaw",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::yaw",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:726:3, col:46>",
                "kind": "assignment",
                "variable": "ros::TimeBase<ros::Time, ros::Duration>::sec",
                "unqualified_variable": "sec",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "ros::TimeBase<ros::Time, ros::Duration>::sec",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 0
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_scan_time",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:727:3, col:47>",
                "kind": "assignment",
                "variable": "ros::TimeBase<ros::Time, ros::Duration>::nsec",
                "unqualified_variable": "nsec",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "ros::TimeBase<ros::Time, ros::Duration>::nsec",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 0
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_scan_time",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:729:3, col:18>",
                "kind": "assignment",
                "variable": "offset_imu_x",
                "unqualified_variable": "offset_imu_x",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:730:3, col:18>",
                "kind": "assignment",
                "variable": "offset_imu_y",
                "unqualified_variable": "offset_imu_y",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:731:3, col:18>",
                "kind": "assignment",
                "variable": "offset_imu_z",
                "unqualified_variable": "offset_imu_z",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:732:3, col:21>",
                "kind": "assignment",
                "variable": "offset_imu_roll",
                "unqualified_variable": "offset_imu_roll",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:733:3, col:22>",
                "kind": "assignment",
                "variable": "offset_imu_pitch",
                "unqualified_variable": "offset_imu_pitch",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:734:3, col:20>",
                "kind": "assignment",
                "variable": "offset_imu_yaw",
                "unqualified_variable": "offset_imu_yaw",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:736:3, col:19>",
                "kind": "assignment",
                "variable": "offset_odom_x",
                "unqualified_variable": "offset_odom_x",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:737:3, col:19>",
                "kind": "assignment",
                "variable": "offset_odom_y",
                "unqualified_variable": "offset_odom_y",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:738:3, col:19>",
                "kind": "assignment",
                "variable": "offset_odom_z",
                "unqualified_variable": "offset_odom_z",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:739:3, col:22>",
                "kind": "assignment",
                "variable": "offset_odom_roll",
                "unqualified_variable": "offset_odom_roll",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:740:3, col:23>",
                "kind": "assignment",
                "variable": "offset_odom_pitch",
                "unqualified_variable": "offset_odom_pitch",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:741:3, col:21>",
                "kind": "assignment",
                "variable": "offset_odom_yaw",
                "unqualified_variable": "offset_odom_yaw",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:743:3, col:23>",
                "kind": "assignment",
                "variable": "offset_imu_odom_x",
                "unqualified_variable": "offset_imu_odom_x",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:744:3, col:23>",
                "kind": "assignment",
                "variable": "offset_imu_odom_y",
                "unqualified_variable": "offset_imu_odom_y",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:745:3, col:23>",
                "kind": "assignment",
                "variable": "offset_imu_odom_z",
                "unqualified_variable": "offset_imu_odom_z",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:746:3, col:26>",
                "kind": "assignment",
                "variable": "offset_imu_odom_roll",
                "unqualified_variable": "offset_imu_odom_roll",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:747:3, col:27>",
                "kind": "assignment",
                "variable": "offset_imu_odom_pitch",
                "unqualified_variable": "offset_imu_odom_pitch",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:748:3, col:25>",
                "kind": "assignment",
                "variable": "offset_imu_odom_yaw",
                "unqualified_variable": "offset_imu_odom_yaw",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:754:5, col:13>",
                "kind": "assignment",
                "variable": "map",
                "unqualified_variable": "map",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": ">=",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "shift",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "min_add_scan_shift",
                    "type": "float",
                    "initial-value": {
                      "kind": "float-literal",
                      "literal": 1.0
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:755:5, col:33>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::x",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": ">=",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "shift",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "min_add_scan_shift",
                    "type": "float",
                    "initial-value": {
                      "kind": "float-literal",
                      "literal": 1.0
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:756:5, col:33>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::y",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": ">=",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "shift",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "min_add_scan_shift",
                    "type": "float",
                    "initial-value": {
                      "kind": "float-literal",
                      "literal": 1.0
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:757:5, col:33>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::z",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": ">=",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "shift",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "min_add_scan_shift",
                    "type": "float",
                    "initial-value": {
                      "kind": "float-literal",
                      "literal": 1.0
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:758:5, col:36>",
                "kind": "assignment",
                "variable": "pose::roll",
                "unqualified_variable": "roll",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::roll",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": ">=",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "shift",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "min_add_scan_shift",
                    "type": "float",
                    "initial-value": {
                      "kind": "float-literal",
                      "literal": 1.0
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:759:5, col:37>",
                "kind": "assignment",
                "variable": "pose::pitch",
                "unqualified_variable": "pitch",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::pitch",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": ">=",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "shift",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "min_add_scan_shift",
                    "type": "float",
                    "initial-value": {
                      "kind": "float-literal",
                      "literal": 1.0
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:760:5, col:35>",
                "kind": "assignment",
                "variable": "pose::yaw",
                "unqualified_variable": "yaw",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::yaw",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": ">=",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "shift",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "min_add_scan_shift",
                    "type": "float",
                    "initial-value": {
                      "kind": "float-literal",
                      "literal": 1.0
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:783:3, col:35>",
                "kind": "publish",
                "publisher": "ndt_map_pub",
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:786:3, col:38>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:787:3, col:35>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                "unqualified_variable": "stamp",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "current_scan_time",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:788:3, col:51>",
                "kind": "assignment",
                "variable": "geometry_msgs::Point_<std::allocator<void>>::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::x",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:789:3, col:51>",
                "kind": "assignment",
                "variable": "geometry_msgs::Point_<std::allocator<void>>::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::y",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:790:3, col:51>",
                "kind": "assignment",
                "variable": "geometry_msgs::Point_<std::allocator<void>>::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::z",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:791:3, col:45>",
                "kind": "assignment",
                "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:792:3, col:45>",
                "kind": "assignment",
                "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:793:3, col:45>",
                "kind": "assignment",
                "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:794:3, col:45>",
                "kind": "assignment",
                "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::w",
                "unqualified_variable": "w",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:796:3, col:44>",
                "kind": "publish",
                "publisher": "current_pose_pub",
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:467:3, col:37>",
                "kind": "assignment",
                "variable": "current_scan_time",
                "unqualified_variable": "current_scan_time",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "std_msgs::Header_<std::allocator<void>>::stamp",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "qualified_name": "sensor_msgs::PointCloud2_<std::allocator<void>>::header",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:473:5, col:25>",
                "kind": "assignment",
                "variable": "pcl::_PointXYZI::(anonymous union)::(anonymous struct)::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pcl::_PointXYZI::(anonymous union)::(anonymous struct)::x",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "qualified_name": "pcl::_PointXYZI::(anonymous union)::(anonymous)",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "member-var-ref",
                      "qualified_name": "pcl::_PointXYZI::(anonymous)",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "unknown"
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "!=",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "item",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:474:5, col:25>",
                "kind": "assignment",
                "variable": "pcl::_PointXYZI::(anonymous union)::(anonymous struct)::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pcl::_PointXYZI::(anonymous union)::(anonymous struct)::y",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "qualified_name": "pcl::_PointXYZI::(anonymous union)::(anonymous)",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "member-var-ref",
                      "qualified_name": "pcl::_PointXYZI::(anonymous)",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "unknown"
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "!=",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "item",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:475:5, col:25>",
                "kind": "assignment",
                "variable": "pcl::_PointXYZI::(anonymous union)::(anonymous struct)::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pcl::_PointXYZI::(anonymous union)::(anonymous struct)::z",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "qualified_name": "pcl::_PointXYZI::(anonymous union)::(anonymous)",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "member-var-ref",
                      "qualified_name": "pcl::_PointXYZI::(anonymous)",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "unknown"
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "!=",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "item",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:476:5, col:33>",
                "kind": "assignment",
                "variable": "pcl::_PointXYZI::(anonymous union)::(anonymous struct)::intensity",
                "unqualified_variable": "intensity",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pcl::_PointXYZI::(anonymous union)::(anonymous struct)::intensity",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "qualified_name": "pcl::_PointXYZI::(anonymous union)::(anonymous)",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "member-var-ref",
                      "qualified_name": "pcl::_PointXYZI::(anonymous)",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "unknown"
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "!=",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "item",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:478:5, col:43>",
                "kind": "assignment",
                "variable": "r",
                "unqualified_variable": "r",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "!=",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "item",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:488:3, line:493:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:491:5, col:13>",
                      "kind": "assignment",
                      "variable": "map",
                      "unqualified_variable": "map",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "initial_scan_loaded",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:492:5, col:27>",
                      "kind": "assignment",
                      "variable": "initial_scan_loaded",
                      "unqualified_variable": "initial_scan_loaded",
                      "value": {
                        "kind": "int-literal",
                        "literal": 1
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "initial_scan_loaded",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:491:5, col:13>",
                      "kind": "assignment",
                      "variable": "map",
                      "unqualified_variable": "map",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "initial_scan_loaded",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:492:5, col:27>",
                      "kind": "assignment",
                      "variable": "initial_scan_loaded",
                      "unqualified_variable": "initial_scan_loaded",
                      "value": {
                        "kind": "int-literal",
                        "literal": 1
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "initial_scan_loaded",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:541:3, line:556:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:555:5, col:20>",
                      "kind": "assignment",
                      "variable": "is_first_map",
                      "unqualified_variable": "is_first_map",
                      "value": {
                        "kind": "bool-literal",
                        "literal": false
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "is_first_map",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": true
                          }
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": true
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:555:5, col:20>",
                      "kind": "assignment",
                      "variable": "is_first_map",
                      "unqualified_variable": "is_first_map",
                      "value": {
                        "kind": "bool-literal",
                        "literal": false
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "is_first_map",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": true
                          }
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": true
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:558:3, col:36>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "binary-expr",
                  "operator": "+",
                  "lhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "pose::x",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "previous_pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "diff_x",
                    "type": "float",
                    "initial-value": {
                      "kind": "float-literal",
                      "literal": 0.0
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:559:3, col:36>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "binary-expr",
                  "operator": "+",
                  "lhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "pose::y",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "previous_pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "diff_y",
                    "type": "float",
                    "initial-value": {
                      "kind": "float-literal",
                      "literal": 0.0
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:560:3, col:36>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "binary-expr",
                  "operator": "+",
                  "lhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "pose::z",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "previous_pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "diff_z",
                    "type": "float",
                    "initial-value": {
                      "kind": "float-literal",
                      "literal": 0.0
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:561:3, col:35>",
                "kind": "assignment",
                "variable": "pose::roll",
                "unqualified_variable": "roll",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::roll",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "previous_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:562:3, col:36>",
                "kind": "assignment",
                "variable": "pose::pitch",
                "unqualified_variable": "pitch",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::pitch",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "previous_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:563:3, col:40>",
                "kind": "assignment",
                "variable": "pose::yaw",
                "unqualified_variable": "yaw",
                "value": {
                  "kind": "binary-expr",
                  "operator": "+",
                  "lhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "pose::yaw",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "previous_pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "diff_yaw",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:573:3, line:580:26>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:574:5, col:26>",
                      "kind": "assignment",
                      "variable": "guess_pose_for_ndt",
                      "unqualified_variable": "guess_pose_for_ndt",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "guess_pose_imu_odom",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_imu",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": true
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_imu",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": true
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_odom",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:574:5, col:26>",
                      "kind": "assignment",
                      "variable": "guess_pose_for_ndt",
                      "unqualified_variable": "guess_pose_for_ndt",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "guess_pose_imu_odom",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_use_imu",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": true
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_imu",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": true
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_use_odom",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": true
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:575:8, line:580:26>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:576:5, col:26>",
                            "kind": "assignment",
                            "variable": "guess_pose_for_ndt",
                            "unqualified_variable": "guess_pose_for_ndt",
                            "value": {
                              "kind": "variable-reference",
                              "qualified_name": "guess_pose_imu",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "||",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "_use_imu",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      },
                                      "rhs": {
                                        "kind": "bool-literal",
                                        "literal": true
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "_use_imu",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          },
                                          "rhs": {
                                            "kind": "bool-literal",
                                            "literal": true
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "_use_odom",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          },
                                          "rhs": {
                                            "kind": "bool-literal",
                                            "literal": true
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "_use_imu",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      },
                                      "rhs": {
                                        "kind": "bool-literal",
                                        "literal": true
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "_use_imu",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  },
                                  "rhs": {
                                    "kind": "bool-literal",
                                    "literal": true
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "_use_imu",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  },
                                  "rhs": {
                                    "kind": "bool-literal",
                                    "literal": true
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "_use_odom",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  },
                                  "rhs": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:576:5, col:26>",
                            "kind": "assignment",
                            "variable": "guess_pose_for_ndt",
                            "unqualified_variable": "guess_pose_for_ndt",
                            "value": {
                              "kind": "variable-reference",
                              "qualified_name": "guess_pose_imu",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "||",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "_use_imu",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      },
                                      "rhs": {
                                        "kind": "bool-literal",
                                        "literal": true
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "_use_imu",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          },
                                          "rhs": {
                                            "kind": "bool-literal",
                                            "literal": true
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "_use_odom",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          },
                                          "rhs": {
                                            "kind": "bool-literal",
                                            "literal": true
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "_use_imu",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      },
                                      "rhs": {
                                        "kind": "bool-literal",
                                        "literal": true
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "_use_imu",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  },
                                  "rhs": {
                                    "kind": "bool-literal",
                                    "literal": true
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "_use_imu",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  },
                                  "rhs": {
                                    "kind": "bool-literal",
                                    "literal": true
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "_use_odom",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  },
                                  "rhs": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                }
                              }
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:577:8, line:580:26>",
                            "kind": "if",
                            "trueBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": [
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:578:5, col:26>",
                                  "kind": "assignment",
                                  "variable": "guess_pose_for_ndt",
                                  "unqualified_variable": "guess_pose_for_ndt",
                                  "value": {
                                    "kind": "variable-reference",
                                    "qualified_name": "guess_pose_odom",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "||",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "||",
                                              "lhs": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "_use_imu",
                                                    "type": "bool",
                                                    "initial-value": {
                                                      "kind": "bool-literal",
                                                      "literal": false
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "bool-literal",
                                                    "literal": true
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "negate-expr",
                                                  "subExpr": {
                                                    "kind": "binary-expr",
                                                    "operator": "&&",
                                                    "lhs": {
                                                      "kind": "binary-expr",
                                                      "operator": "==",
                                                      "lhs": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "_use_imu",
                                                        "type": "bool",
                                                        "initial-value": {
                                                          "kind": "bool-literal",
                                                          "literal": false
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "bool-literal",
                                                        "literal": true
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "binary-expr",
                                                      "operator": "==",
                                                      "lhs": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "_use_odom",
                                                        "type": "bool",
                                                        "initial-value": {
                                                          "kind": "bool-literal",
                                                          "literal": false
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "bool-literal",
                                                        "literal": true
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "_use_imu",
                                                    "type": "bool",
                                                    "initial-value": {
                                                      "kind": "bool-literal",
                                                      "literal": false
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "bool-literal",
                                                    "literal": true
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "_use_imu",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": true
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_use_imu",
                                                  "type": "bool",
                                                  "initial-value": {
                                                    "kind": "bool-literal",
                                                    "literal": false
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "bool-literal",
                                                  "literal": true
                                                }
                                              },
                                              "rhs": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_use_odom",
                                                  "type": "bool",
                                                  "initial-value": {
                                                    "kind": "bool-literal",
                                                    "literal": false
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_use_imu",
                                                  "type": "bool",
                                                  "initial-value": {
                                                    "kind": "bool-literal",
                                                    "literal": false
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "bool-literal",
                                                  "literal": true
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "&&",
                                                  "lhs": {
                                                    "kind": "binary-expr",
                                                    "operator": "==",
                                                    "lhs": {
                                                      "kind": "variable-reference",
                                                      "qualified_name": "_use_imu",
                                                      "type": "bool",
                                                      "initial-value": {
                                                        "kind": "bool-literal",
                                                        "literal": false
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "bool-literal",
                                                      "literal": true
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "binary-expr",
                                                    "operator": "==",
                                                    "lhs": {
                                                      "kind": "variable-reference",
                                                      "qualified_name": "_use_odom",
                                                      "type": "bool",
                                                      "initial-value": {
                                                        "kind": "bool-literal",
                                                        "literal": false
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "bool-literal",
                                                      "literal": true
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_use_imu",
                                                  "type": "bool",
                                                  "initial-value": {
                                                    "kind": "bool-literal",
                                                    "literal": false
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "bool-literal",
                                                  "literal": true
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "_use_imu",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": true
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "==",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "_use_imu",
                                          "type": "bool",
                                          "initial-value": {
                                            "kind": "bool-literal",
                                            "literal": false
                                          }
                                        },
                                        "rhs": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "==",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "_use_imu",
                                          "type": "bool",
                                          "initial-value": {
                                            "kind": "bool-literal",
                                            "literal": false
                                          }
                                        },
                                        "rhs": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "==",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "_use_odom",
                                          "type": "bool",
                                          "initial-value": {
                                            "kind": "bool-literal",
                                            "literal": false
                                          }
                                        },
                                        "rhs": {
                                          "kind": "bool-literal",
                                          "literal": true
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:578:5, col:26>",
                                  "kind": "assignment",
                                  "variable": "guess_pose_for_ndt",
                                  "unqualified_variable": "guess_pose_for_ndt",
                                  "value": {
                                    "kind": "variable-reference",
                                    "qualified_name": "guess_pose_odom",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "||",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "||",
                                              "lhs": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "_use_imu",
                                                    "type": "bool",
                                                    "initial-value": {
                                                      "kind": "bool-literal",
                                                      "literal": false
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "bool-literal",
                                                    "literal": true
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "negate-expr",
                                                  "subExpr": {
                                                    "kind": "binary-expr",
                                                    "operator": "&&",
                                                    "lhs": {
                                                      "kind": "binary-expr",
                                                      "operator": "==",
                                                      "lhs": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "_use_imu",
                                                        "type": "bool",
                                                        "initial-value": {
                                                          "kind": "bool-literal",
                                                          "literal": false
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "bool-literal",
                                                        "literal": true
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "binary-expr",
                                                      "operator": "==",
                                                      "lhs": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "_use_odom",
                                                        "type": "bool",
                                                        "initial-value": {
                                                          "kind": "bool-literal",
                                                          "literal": false
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "bool-literal",
                                                        "literal": true
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "_use_imu",
                                                    "type": "bool",
                                                    "initial-value": {
                                                      "kind": "bool-literal",
                                                      "literal": false
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "bool-literal",
                                                    "literal": true
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "_use_imu",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": true
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_use_imu",
                                                  "type": "bool",
                                                  "initial-value": {
                                                    "kind": "bool-literal",
                                                    "literal": false
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "bool-literal",
                                                  "literal": true
                                                }
                                              },
                                              "rhs": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_use_odom",
                                                  "type": "bool",
                                                  "initial-value": {
                                                    "kind": "bool-literal",
                                                    "literal": false
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_use_imu",
                                                  "type": "bool",
                                                  "initial-value": {
                                                    "kind": "bool-literal",
                                                    "literal": false
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "bool-literal",
                                                  "literal": true
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "&&",
                                                  "lhs": {
                                                    "kind": "binary-expr",
                                                    "operator": "==",
                                                    "lhs": {
                                                      "kind": "variable-reference",
                                                      "qualified_name": "_use_imu",
                                                      "type": "bool",
                                                      "initial-value": {
                                                        "kind": "bool-literal",
                                                        "literal": false
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "bool-literal",
                                                      "literal": true
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "binary-expr",
                                                    "operator": "==",
                                                    "lhs": {
                                                      "kind": "variable-reference",
                                                      "qualified_name": "_use_odom",
                                                      "type": "bool",
                                                      "initial-value": {
                                                        "kind": "bool-literal",
                                                        "literal": false
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "bool-literal",
                                                      "literal": true
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_use_imu",
                                                  "type": "bool",
                                                  "initial-value": {
                                                    "kind": "bool-literal",
                                                    "literal": false
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "bool-literal",
                                                  "literal": true
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "_use_imu",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": true
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "==",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "_use_imu",
                                          "type": "bool",
                                          "initial-value": {
                                            "kind": "bool-literal",
                                            "literal": false
                                          }
                                        },
                                        "rhs": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "==",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "_use_imu",
                                          "type": "bool",
                                          "initial-value": {
                                            "kind": "bool-literal",
                                            "literal": false
                                          }
                                        },
                                        "rhs": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "==",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "_use_odom",
                                          "type": "bool",
                                          "initial-value": {
                                            "kind": "bool-literal",
                                            "literal": false
                                          }
                                        },
                                        "rhs": {
                                          "kind": "bool-literal",
                                          "literal": true
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "falseBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": [
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:580:5, col:26>",
                                  "kind": "assignment",
                                  "variable": "guess_pose_for_ndt",
                                  "unqualified_variable": "guess_pose_for_ndt",
                                  "value": {
                                    "kind": "variable-reference",
                                    "qualified_name": "guess_pose",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "||",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "binary-expr",
                                                "operator": "||",
                                                "lhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "&&",
                                                  "lhs": {
                                                    "kind": "binary-expr",
                                                    "operator": "==",
                                                    "lhs": {
                                                      "kind": "variable-reference",
                                                      "qualified_name": "_use_imu",
                                                      "type": "bool",
                                                      "initial-value": {
                                                        "kind": "bool-literal",
                                                        "literal": false
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "bool-literal",
                                                      "literal": true
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "negate-expr",
                                                    "subExpr": {
                                                      "kind": "binary-expr",
                                                      "operator": "&&",
                                                      "lhs": {
                                                        "kind": "binary-expr",
                                                        "operator": "==",
                                                        "lhs": {
                                                          "kind": "variable-reference",
                                                          "qualified_name": "_use_imu",
                                                          "type": "bool",
                                                          "initial-value": {
                                                            "kind": "bool-literal",
                                                            "literal": false
                                                          }
                                                        },
                                                        "rhs": {
                                                          "kind": "bool-literal",
                                                          "literal": true
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "binary-expr",
                                                        "operator": "==",
                                                        "lhs": {
                                                          "kind": "variable-reference",
                                                          "qualified_name": "_use_odom",
                                                          "type": "bool",
                                                          "initial-value": {
                                                            "kind": "bool-literal",
                                                            "literal": false
                                                          }
                                                        },
                                                        "rhs": {
                                                          "kind": "bool-literal",
                                                          "literal": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "negate-expr",
                                                  "subExpr": {
                                                    "kind": "binary-expr",
                                                    "operator": "==",
                                                    "lhs": {
                                                      "kind": "variable-reference",
                                                      "qualified_name": "_use_imu",
                                                      "type": "bool",
                                                      "initial-value": {
                                                        "kind": "bool-literal",
                                                        "literal": false
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "bool-literal",
                                                      "literal": true
                                                    }
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_use_imu",
                                                  "type": "bool",
                                                  "initial-value": {
                                                    "kind": "bool-literal",
                                                    "literal": false
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "bool-literal",
                                                  "literal": true
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "_use_imu",
                                                    "type": "bool",
                                                    "initial-value": {
                                                      "kind": "bool-literal",
                                                      "literal": false
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "bool-literal",
                                                    "literal": true
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "_use_odom",
                                                    "type": "bool",
                                                    "initial-value": {
                                                      "kind": "bool-literal",
                                                      "literal": false
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "bool-literal",
                                                    "literal": false
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "||",
                                              "lhs": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "_use_imu",
                                                    "type": "bool",
                                                    "initial-value": {
                                                      "kind": "bool-literal",
                                                      "literal": false
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "bool-literal",
                                                    "literal": true
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "negate-expr",
                                                  "subExpr": {
                                                    "kind": "binary-expr",
                                                    "operator": "&&",
                                                    "lhs": {
                                                      "kind": "binary-expr",
                                                      "operator": "==",
                                                      "lhs": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "_use_imu",
                                                        "type": "bool",
                                                        "initial-value": {
                                                          "kind": "bool-literal",
                                                          "literal": false
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "bool-literal",
                                                        "literal": true
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "binary-expr",
                                                      "operator": "==",
                                                      "lhs": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "_use_odom",
                                                        "type": "bool",
                                                        "initial-value": {
                                                          "kind": "bool-literal",
                                                          "literal": false
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "bool-literal",
                                                        "literal": true
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "_use_imu",
                                                    "type": "bool",
                                                    "initial-value": {
                                                      "kind": "bool-literal",
                                                      "literal": false
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "bool-literal",
                                                    "literal": true
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_use_imu",
                                                  "type": "bool",
                                                  "initial-value": {
                                                    "kind": "bool-literal",
                                                    "literal": false
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "bool-literal",
                                                  "literal": true
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "_use_imu",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          },
                                          "rhs": {
                                            "kind": "bool-literal",
                                            "literal": false
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "_use_imu",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "_use_odom",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "bool-literal",
                                              "literal": true
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "||",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "||",
                                              "lhs": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "_use_imu",
                                                    "type": "bool",
                                                    "initial-value": {
                                                      "kind": "bool-literal",
                                                      "literal": false
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "bool-literal",
                                                    "literal": true
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "negate-expr",
                                                  "subExpr": {
                                                    "kind": "binary-expr",
                                                    "operator": "&&",
                                                    "lhs": {
                                                      "kind": "binary-expr",
                                                      "operator": "==",
                                                      "lhs": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "_use_imu",
                                                        "type": "bool",
                                                        "initial-value": {
                                                          "kind": "bool-literal",
                                                          "literal": false
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "bool-literal",
                                                        "literal": true
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "binary-expr",
                                                      "operator": "==",
                                                      "lhs": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "_use_odom",
                                                        "type": "bool",
                                                        "initial-value": {
                                                          "kind": "bool-literal",
                                                          "literal": false
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "bool-literal",
                                                        "literal": true
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "_use_imu",
                                                    "type": "bool",
                                                    "initial-value": {
                                                      "kind": "bool-literal",
                                                      "literal": false
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "bool-literal",
                                                    "literal": true
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "_use_imu",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": true
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_use_imu",
                                                  "type": "bool",
                                                  "initial-value": {
                                                    "kind": "bool-literal",
                                                    "literal": false
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "bool-literal",
                                                  "literal": true
                                                }
                                              },
                                              "rhs": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_use_odom",
                                                  "type": "bool",
                                                  "initial-value": {
                                                    "kind": "bool-literal",
                                                    "literal": false
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_use_imu",
                                                  "type": "bool",
                                                  "initial-value": {
                                                    "kind": "bool-literal",
                                                    "literal": false
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "bool-literal",
                                                  "literal": true
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "&&",
                                                  "lhs": {
                                                    "kind": "binary-expr",
                                                    "operator": "==",
                                                    "lhs": {
                                                      "kind": "variable-reference",
                                                      "qualified_name": "_use_imu",
                                                      "type": "bool",
                                                      "initial-value": {
                                                        "kind": "bool-literal",
                                                        "literal": false
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "bool-literal",
                                                      "literal": true
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "binary-expr",
                                                    "operator": "==",
                                                    "lhs": {
                                                      "kind": "variable-reference",
                                                      "qualified_name": "_use_odom",
                                                      "type": "bool",
                                                      "initial-value": {
                                                        "kind": "bool-literal",
                                                        "literal": false
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "bool-literal",
                                                      "literal": true
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_use_imu",
                                                  "type": "bool",
                                                  "initial-value": {
                                                    "kind": "bool-literal",
                                                    "literal": false
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "bool-literal",
                                                  "literal": true
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "_use_imu",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": true
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "_use_imu",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          },
                                          "rhs": {
                                            "kind": "bool-literal",
                                            "literal": false
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:580:5, col:26>",
                                  "kind": "assignment",
                                  "variable": "guess_pose_for_ndt",
                                  "unqualified_variable": "guess_pose_for_ndt",
                                  "value": {
                                    "kind": "variable-reference",
                                    "qualified_name": "guess_pose",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "||",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "binary-expr",
                                                "operator": "||",
                                                "lhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "&&",
                                                  "lhs": {
                                                    "kind": "binary-expr",
                                                    "operator": "==",
                                                    "lhs": {
                                                      "kind": "variable-reference",
                                                      "qualified_name": "_use_imu",
                                                      "type": "bool",
                                                      "initial-value": {
                                                        "kind": "bool-literal",
                                                        "literal": false
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "bool-literal",
                                                      "literal": true
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "negate-expr",
                                                    "subExpr": {
                                                      "kind": "binary-expr",
                                                      "operator": "&&",
                                                      "lhs": {
                                                        "kind": "binary-expr",
                                                        "operator": "==",
                                                        "lhs": {
                                                          "kind": "variable-reference",
                                                          "qualified_name": "_use_imu",
                                                          "type": "bool",
                                                          "initial-value": {
                                                            "kind": "bool-literal",
                                                            "literal": false
                                                          }
                                                        },
                                                        "rhs": {
                                                          "kind": "bool-literal",
                                                          "literal": true
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "binary-expr",
                                                        "operator": "==",
                                                        "lhs": {
                                                          "kind": "variable-reference",
                                                          "qualified_name": "_use_odom",
                                                          "type": "bool",
                                                          "initial-value": {
                                                            "kind": "bool-literal",
                                                            "literal": false
                                                          }
                                                        },
                                                        "rhs": {
                                                          "kind": "bool-literal",
                                                          "literal": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "negate-expr",
                                                  "subExpr": {
                                                    "kind": "binary-expr",
                                                    "operator": "==",
                                                    "lhs": {
                                                      "kind": "variable-reference",
                                                      "qualified_name": "_use_imu",
                                                      "type": "bool",
                                                      "initial-value": {
                                                        "kind": "bool-literal",
                                                        "literal": false
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "bool-literal",
                                                      "literal": true
                                                    }
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_use_imu",
                                                  "type": "bool",
                                                  "initial-value": {
                                                    "kind": "bool-literal",
                                                    "literal": false
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "bool-literal",
                                                  "literal": true
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "_use_imu",
                                                    "type": "bool",
                                                    "initial-value": {
                                                      "kind": "bool-literal",
                                                      "literal": false
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "bool-literal",
                                                    "literal": true
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "_use_odom",
                                                    "type": "bool",
                                                    "initial-value": {
                                                      "kind": "bool-literal",
                                                      "literal": false
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "bool-literal",
                                                    "literal": false
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "||",
                                              "lhs": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "_use_imu",
                                                    "type": "bool",
                                                    "initial-value": {
                                                      "kind": "bool-literal",
                                                      "literal": false
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "bool-literal",
                                                    "literal": true
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "negate-expr",
                                                  "subExpr": {
                                                    "kind": "binary-expr",
                                                    "operator": "&&",
                                                    "lhs": {
                                                      "kind": "binary-expr",
                                                      "operator": "==",
                                                      "lhs": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "_use_imu",
                                                        "type": "bool",
                                                        "initial-value": {
                                                          "kind": "bool-literal",
                                                          "literal": false
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "bool-literal",
                                                        "literal": true
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "binary-expr",
                                                      "operator": "==",
                                                      "lhs": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "_use_odom",
                                                        "type": "bool",
                                                        "initial-value": {
                                                          "kind": "bool-literal",
                                                          "literal": false
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "bool-literal",
                                                        "literal": true
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "_use_imu",
                                                    "type": "bool",
                                                    "initial-value": {
                                                      "kind": "bool-literal",
                                                      "literal": false
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "bool-literal",
                                                    "literal": true
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_use_imu",
                                                  "type": "bool",
                                                  "initial-value": {
                                                    "kind": "bool-literal",
                                                    "literal": false
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "bool-literal",
                                                  "literal": true
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "_use_imu",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          },
                                          "rhs": {
                                            "kind": "bool-literal",
                                            "literal": false
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "_use_imu",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "_use_odom",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "bool-literal",
                                              "literal": true
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "||",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "||",
                                              "lhs": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "_use_imu",
                                                    "type": "bool",
                                                    "initial-value": {
                                                      "kind": "bool-literal",
                                                      "literal": false
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "bool-literal",
                                                    "literal": true
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "negate-expr",
                                                  "subExpr": {
                                                    "kind": "binary-expr",
                                                    "operator": "&&",
                                                    "lhs": {
                                                      "kind": "binary-expr",
                                                      "operator": "==",
                                                      "lhs": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "_use_imu",
                                                        "type": "bool",
                                                        "initial-value": {
                                                          "kind": "bool-literal",
                                                          "literal": false
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "bool-literal",
                                                        "literal": true
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "binary-expr",
                                                      "operator": "==",
                                                      "lhs": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "_use_odom",
                                                        "type": "bool",
                                                        "initial-value": {
                                                          "kind": "bool-literal",
                                                          "literal": false
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "bool-literal",
                                                        "literal": true
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "_use_imu",
                                                    "type": "bool",
                                                    "initial-value": {
                                                      "kind": "bool-literal",
                                                      "literal": false
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "bool-literal",
                                                    "literal": true
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "_use_imu",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": true
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_use_imu",
                                                  "type": "bool",
                                                  "initial-value": {
                                                    "kind": "bool-literal",
                                                    "literal": false
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "bool-literal",
                                                  "literal": true
                                                }
                                              },
                                              "rhs": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_use_odom",
                                                  "type": "bool",
                                                  "initial-value": {
                                                    "kind": "bool-literal",
                                                    "literal": false
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_use_imu",
                                                  "type": "bool",
                                                  "initial-value": {
                                                    "kind": "bool-literal",
                                                    "literal": false
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "bool-literal",
                                                  "literal": true
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "&&",
                                                  "lhs": {
                                                    "kind": "binary-expr",
                                                    "operator": "==",
                                                    "lhs": {
                                                      "kind": "variable-reference",
                                                      "qualified_name": "_use_imu",
                                                      "type": "bool",
                                                      "initial-value": {
                                                        "kind": "bool-literal",
                                                        "literal": false
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "bool-literal",
                                                      "literal": true
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "binary-expr",
                                                    "operator": "==",
                                                    "lhs": {
                                                      "kind": "variable-reference",
                                                      "qualified_name": "_use_odom",
                                                      "type": "bool",
                                                      "initial-value": {
                                                        "kind": "bool-literal",
                                                        "literal": false
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "bool-literal",
                                                      "literal": true
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_use_imu",
                                                  "type": "bool",
                                                  "initial-value": {
                                                    "kind": "bool-literal",
                                                    "literal": false
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "bool-literal",
                                                  "literal": true
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "_use_imu",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              },
                                              "rhs": {
                                                "kind": "bool-literal",
                                                "literal": true
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "_use_imu",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          },
                                          "rhs": {
                                            "kind": "bool-literal",
                                            "literal": false
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "condition": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        ]
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  ]
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:591:3, col:27>",
                "kind": "assignment",
                "variable": "t3_end",
                "unqualified_variable": "t3_end",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:592:3, col:17>",
                "kind": "assignment",
                "variable": "d3",
                "unqualified_variable": "d3",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:594:3, col:29>",
                "kind": "assignment",
                "variable": "t4_start",
                "unqualified_variable": "t4_start",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:598:3, line:633:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:601:5, col:41>",
                      "kind": "assignment",
                      "variable": "fitness_score",
                      "unqualified_variable": "fitness_score",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_method_type",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": "0"
                          }
                        },
                        "rhs": {
                          "kind": "enum-ref",
                          "qualified_name": "MethodType::PCL_GENERIC",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          },
                          "value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:602:5, col:46>",
                      "kind": "assignment",
                      "variable": "t_localizer",
                      "unqualified_variable": "t_localizer",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_method_type",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": "0"
                          }
                        },
                        "rhs": {
                          "kind": "enum-ref",
                          "qualified_name": "MethodType::PCL_GENERIC",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          },
                          "value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:603:5, col:38>",
                      "kind": "assignment",
                      "variable": "has_converged",
                      "unqualified_variable": "has_converged",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_method_type",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": "0"
                          }
                        },
                        "rhs": {
                          "kind": "enum-ref",
                          "qualified_name": "MethodType::PCL_GENERIC",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          },
                          "value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:604:5, col:52>",
                      "kind": "assignment",
                      "variable": "final_num_iteration",
                      "unqualified_variable": "final_num_iteration",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_method_type",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": "0"
                          }
                        },
                        "rhs": {
                          "kind": "enum-ref",
                          "qualified_name": "MethodType::PCL_GENERIC",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          },
                          "value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:605:5, col:67>",
                      "kind": "assignment",
                      "variable": "transformation_probability",
                      "unqualified_variable": "transformation_probability",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_method_type",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": "0"
                          }
                        },
                        "rhs": {
                          "kind": "enum-ref",
                          "qualified_name": "MethodType::PCL_GENERIC",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          },
                          "value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:601:5, col:41>",
                      "kind": "assignment",
                      "variable": "fitness_score",
                      "unqualified_variable": "fitness_score",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_method_type",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": "0"
                          }
                        },
                        "rhs": {
                          "kind": "enum-ref",
                          "qualified_name": "MethodType::PCL_GENERIC",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          },
                          "value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:602:5, col:46>",
                      "kind": "assignment",
                      "variable": "t_localizer",
                      "unqualified_variable": "t_localizer",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_method_type",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": "0"
                          }
                        },
                        "rhs": {
                          "kind": "enum-ref",
                          "qualified_name": "MethodType::PCL_GENERIC",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          },
                          "value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:603:5, col:38>",
                      "kind": "assignment",
                      "variable": "has_converged",
                      "unqualified_variable": "has_converged",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_method_type",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": "0"
                          }
                        },
                        "rhs": {
                          "kind": "enum-ref",
                          "qualified_name": "MethodType::PCL_GENERIC",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          },
                          "value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:604:5, col:52>",
                      "kind": "assignment",
                      "variable": "final_num_iteration",
                      "unqualified_variable": "final_num_iteration",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_method_type",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": "0"
                          }
                        },
                        "rhs": {
                          "kind": "enum-ref",
                          "qualified_name": "MethodType::PCL_GENERIC",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          },
                          "value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:605:5, col:67>",
                      "kind": "assignment",
                      "variable": "transformation_probability",
                      "unqualified_variable": "transformation_probability",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_method_type",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": "0"
                          }
                        },
                        "rhs": {
                          "kind": "enum-ref",
                          "qualified_name": "MethodType::PCL_GENERIC",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          },
                          "value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:607:8, line:633:3>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:610:5, col:45>",
                            "kind": "assignment",
                            "variable": "fitness_score",
                            "unqualified_variable": "fitness_score",
                            "value": {
                              "kind": "unknown"
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "_method_type",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": "0"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "enum-ref",
                                    "qualified_name": "MethodType::PCL_GENERIC",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    },
                                    "value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_method_type",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": "0"
                                  }
                                },
                                "rhs": {
                                  "kind": "enum-ref",
                                  "qualified_name": "MethodType::PCL_ANH",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  },
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:611:5, col:50>",
                            "kind": "assignment",
                            "variable": "t_localizer",
                            "unqualified_variable": "t_localizer",
                            "value": {
                              "kind": "unknown"
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "_method_type",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": "0"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "enum-ref",
                                    "qualified_name": "MethodType::PCL_GENERIC",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    },
                                    "value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_method_type",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": "0"
                                  }
                                },
                                "rhs": {
                                  "kind": "enum-ref",
                                  "qualified_name": "MethodType::PCL_ANH",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  },
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:612:5, col:42>",
                            "kind": "assignment",
                            "variable": "has_converged",
                            "unqualified_variable": "has_converged",
                            "value": {
                              "kind": "unknown"
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "_method_type",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": "0"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "enum-ref",
                                    "qualified_name": "MethodType::PCL_GENERIC",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    },
                                    "value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_method_type",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": "0"
                                  }
                                },
                                "rhs": {
                                  "kind": "enum-ref",
                                  "qualified_name": "MethodType::PCL_ANH",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  },
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:613:5, col:56>",
                            "kind": "assignment",
                            "variable": "final_num_iteration",
                            "unqualified_variable": "final_num_iteration",
                            "value": {
                              "kind": "unknown"
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "_method_type",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": "0"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "enum-ref",
                                    "qualified_name": "MethodType::PCL_GENERIC",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    },
                                    "value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_method_type",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": "0"
                                  }
                                },
                                "rhs": {
                                  "kind": "enum-ref",
                                  "qualified_name": "MethodType::PCL_ANH",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  },
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:610:5, col:45>",
                            "kind": "assignment",
                            "variable": "fitness_score",
                            "unqualified_variable": "fitness_score",
                            "value": {
                              "kind": "unknown"
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "_method_type",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": "0"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "enum-ref",
                                    "qualified_name": "MethodType::PCL_GENERIC",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    },
                                    "value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_method_type",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": "0"
                                  }
                                },
                                "rhs": {
                                  "kind": "enum-ref",
                                  "qualified_name": "MethodType::PCL_ANH",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  },
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:611:5, col:50>",
                            "kind": "assignment",
                            "variable": "t_localizer",
                            "unqualified_variable": "t_localizer",
                            "value": {
                              "kind": "unknown"
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "_method_type",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": "0"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "enum-ref",
                                    "qualified_name": "MethodType::PCL_GENERIC",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    },
                                    "value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_method_type",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": "0"
                                  }
                                },
                                "rhs": {
                                  "kind": "enum-ref",
                                  "qualified_name": "MethodType::PCL_ANH",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  },
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:612:5, col:42>",
                            "kind": "assignment",
                            "variable": "has_converged",
                            "unqualified_variable": "has_converged",
                            "value": {
                              "kind": "unknown"
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "_method_type",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": "0"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "enum-ref",
                                    "qualified_name": "MethodType::PCL_GENERIC",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    },
                                    "value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_method_type",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": "0"
                                  }
                                },
                                "rhs": {
                                  "kind": "enum-ref",
                                  "qualified_name": "MethodType::PCL_ANH",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  },
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:613:5, col:56>",
                            "kind": "assignment",
                            "variable": "final_num_iteration",
                            "unqualified_variable": "final_num_iteration",
                            "value": {
                              "kind": "unknown"
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "_method_type",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": "0"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "enum-ref",
                                    "qualified_name": "MethodType::PCL_GENERIC",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    },
                                    "value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "_method_type",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": "0"
                                  }
                                },
                                "rhs": {
                                  "kind": "enum-ref",
                                  "qualified_name": "MethodType::PCL_ANH",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  },
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": 1
                                  }
                                }
                              }
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:616:8, line:633:3>",
                            "kind": "if",
                            "trueBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": [
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:619:5, col:49>",
                                  "kind": "assignment",
                                  "variable": "fitness_score",
                                  "unqualified_variable": "fitness_score",
                                  "value": {
                                    "kind": "unknown"
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "_method_type",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": "0"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "enum-ref",
                                            "qualified_name": "MethodType::PCL_GENERIC",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": 0
                                            },
                                            "value": {
                                              "kind": "int-literal",
                                              "literal": 0
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "_method_type",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": "0"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "enum-ref",
                                            "qualified_name": "MethodType::PCL_ANH",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": 1
                                            },
                                            "value": {
                                              "kind": "int-literal",
                                              "literal": 1
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "_method_type",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": "0"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "enum-ref",
                                        "qualified_name": "MethodType::PCL_ANH_GPU",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 2
                                        },
                                        "value": {
                                          "kind": "int-literal",
                                          "literal": 2
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:620:5, col:54>",
                                  "kind": "assignment",
                                  "variable": "t_localizer",
                                  "unqualified_variable": "t_localizer",
                                  "value": {
                                    "kind": "unknown"
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "_method_type",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": "0"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "enum-ref",
                                            "qualified_name": "MethodType::PCL_GENERIC",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": 0
                                            },
                                            "value": {
                                              "kind": "int-literal",
                                              "literal": 0
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "_method_type",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": "0"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "enum-ref",
                                            "qualified_name": "MethodType::PCL_ANH",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": 1
                                            },
                                            "value": {
                                              "kind": "int-literal",
                                              "literal": 1
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "_method_type",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": "0"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "enum-ref",
                                        "qualified_name": "MethodType::PCL_ANH_GPU",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 2
                                        },
                                        "value": {
                                          "kind": "int-literal",
                                          "literal": 2
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:621:5, col:46>",
                                  "kind": "assignment",
                                  "variable": "has_converged",
                                  "unqualified_variable": "has_converged",
                                  "value": {
                                    "kind": "unknown"
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "_method_type",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": "0"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "enum-ref",
                                            "qualified_name": "MethodType::PCL_GENERIC",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": 0
                                            },
                                            "value": {
                                              "kind": "int-literal",
                                              "literal": 0
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "_method_type",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": "0"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "enum-ref",
                                            "qualified_name": "MethodType::PCL_ANH",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": 1
                                            },
                                            "value": {
                                              "kind": "int-literal",
                                              "literal": 1
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "_method_type",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": "0"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "enum-ref",
                                        "qualified_name": "MethodType::PCL_ANH_GPU",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 2
                                        },
                                        "value": {
                                          "kind": "int-literal",
                                          "literal": 2
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:622:5, col:60>",
                                  "kind": "assignment",
                                  "variable": "final_num_iteration",
                                  "unqualified_variable": "final_num_iteration",
                                  "value": {
                                    "kind": "unknown"
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "_method_type",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": "0"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "enum-ref",
                                            "qualified_name": "MethodType::PCL_GENERIC",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": 0
                                            },
                                            "value": {
                                              "kind": "int-literal",
                                              "literal": 0
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "_method_type",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": "0"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "enum-ref",
                                            "qualified_name": "MethodType::PCL_ANH",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": 1
                                            },
                                            "value": {
                                              "kind": "int-literal",
                                              "literal": 1
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "_method_type",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": "0"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "enum-ref",
                                        "qualified_name": "MethodType::PCL_ANH_GPU",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 2
                                        },
                                        "value": {
                                          "kind": "int-literal",
                                          "literal": 2
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:619:5, col:49>",
                                  "kind": "assignment",
                                  "variable": "fitness_score",
                                  "unqualified_variable": "fitness_score",
                                  "value": {
                                    "kind": "unknown"
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "_method_type",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": "0"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "enum-ref",
                                            "qualified_name": "MethodType::PCL_GENERIC",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": 0
                                            },
                                            "value": {
                                              "kind": "int-literal",
                                              "literal": 0
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "_method_type",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": "0"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "enum-ref",
                                            "qualified_name": "MethodType::PCL_ANH",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": 1
                                            },
                                            "value": {
                                              "kind": "int-literal",
                                              "literal": 1
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "_method_type",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": "0"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "enum-ref",
                                        "qualified_name": "MethodType::PCL_ANH_GPU",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 2
                                        },
                                        "value": {
                                          "kind": "int-literal",
                                          "literal": 2
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:620:5, col:54>",
                                  "kind": "assignment",
                                  "variable": "t_localizer",
                                  "unqualified_variable": "t_localizer",
                                  "value": {
                                    "kind": "unknown"
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "_method_type",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": "0"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "enum-ref",
                                            "qualified_name": "MethodType::PCL_GENERIC",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": 0
                                            },
                                            "value": {
                                              "kind": "int-literal",
                                              "literal": 0
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "_method_type",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": "0"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "enum-ref",
                                            "qualified_name": "MethodType::PCL_ANH",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": 1
                                            },
                                            "value": {
                                              "kind": "int-literal",
                                              "literal": 1
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "_method_type",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": "0"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "enum-ref",
                                        "qualified_name": "MethodType::PCL_ANH_GPU",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 2
                                        },
                                        "value": {
                                          "kind": "int-literal",
                                          "literal": 2
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:621:5, col:46>",
                                  "kind": "assignment",
                                  "variable": "has_converged",
                                  "unqualified_variable": "has_converged",
                                  "value": {
                                    "kind": "unknown"
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "_method_type",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": "0"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "enum-ref",
                                            "qualified_name": "MethodType::PCL_GENERIC",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": 0
                                            },
                                            "value": {
                                              "kind": "int-literal",
                                              "literal": 0
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "_method_type",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": "0"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "enum-ref",
                                            "qualified_name": "MethodType::PCL_ANH",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": 1
                                            },
                                            "value": {
                                              "kind": "int-literal",
                                              "literal": 1
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "_method_type",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": "0"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "enum-ref",
                                        "qualified_name": "MethodType::PCL_ANH_GPU",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 2
                                        },
                                        "value": {
                                          "kind": "int-literal",
                                          "literal": 2
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:622:5, col:60>",
                                  "kind": "assignment",
                                  "variable": "final_num_iteration",
                                  "unqualified_variable": "final_num_iteration",
                                  "value": {
                                    "kind": "unknown"
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "_method_type",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": "0"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "enum-ref",
                                            "qualified_name": "MethodType::PCL_GENERIC",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": 0
                                            },
                                            "value": {
                                              "kind": "int-literal",
                                              "literal": 0
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "_method_type",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": "0"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "enum-ref",
                                            "qualified_name": "MethodType::PCL_ANH",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": 1
                                            },
                                            "value": {
                                              "kind": "int-literal",
                                              "literal": 1
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "_method_type",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": "0"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "enum-ref",
                                        "qualified_name": "MethodType::PCL_ANH_GPU",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 2
                                        },
                                        "value": {
                                          "kind": "int-literal",
                                          "literal": 2
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "falseBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": [
                                {
                                  "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:626:8, line:633:3>",
                                  "kind": "if",
                                  "trueBranchBody": {
                                    "source-location": "",
                                    "kind": "compound",
                                    "statements": [
                                      {
                                        "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:629:5, col:45>",
                                        "kind": "assignment",
                                        "variable": "fitness_score",
                                        "unqualified_variable": "fitness_score",
                                        "value": {
                                          "kind": "unknown"
                                        },
                                        "path_condition": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "_method_type",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "int-literal",
                                                      "literal": "0"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "enum-ref",
                                                    "qualified_name": "MethodType::PCL_GENERIC",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "int-literal",
                                                      "literal": 0
                                                    },
                                                    "value": {
                                                      "kind": "int-literal",
                                                      "literal": 0
                                                    }
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "_method_type",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "int-literal",
                                                      "literal": "0"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "enum-ref",
                                                    "qualified_name": "MethodType::PCL_ANH",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "int-literal",
                                                      "literal": 1
                                                    },
                                                    "value": {
                                                      "kind": "int-literal",
                                                      "literal": 1
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_method_type",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": "0"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "enum-ref",
                                                  "qualified_name": "MethodType::PCL_ANH_GPU",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": 2
                                                  },
                                                  "value": {
                                                    "kind": "int-literal",
                                                    "literal": 2
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "_method_type",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "int-literal",
                                                "literal": "0"
                                              }
                                            },
                                            "rhs": {
                                              "kind": "enum-ref",
                                              "qualified_name": "MethodType::PCL_OPENMP",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "int-literal",
                                                "literal": 3
                                              },
                                              "value": {
                                                "kind": "int-literal",
                                                "literal": 3
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:630:5, col:50>",
                                        "kind": "assignment",
                                        "variable": "t_localizer",
                                        "unqualified_variable": "t_localizer",
                                        "value": {
                                          "kind": "unknown"
                                        },
                                        "path_condition": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "_method_type",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "int-literal",
                                                      "literal": "0"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "enum-ref",
                                                    "qualified_name": "MethodType::PCL_GENERIC",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "int-literal",
                                                      "literal": 0
                                                    },
                                                    "value": {
                                                      "kind": "int-literal",
                                                      "literal": 0
                                                    }
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "_method_type",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "int-literal",
                                                      "literal": "0"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "enum-ref",
                                                    "qualified_name": "MethodType::PCL_ANH",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "int-literal",
                                                      "literal": 1
                                                    },
                                                    "value": {
                                                      "kind": "int-literal",
                                                      "literal": 1
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_method_type",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": "0"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "enum-ref",
                                                  "qualified_name": "MethodType::PCL_ANH_GPU",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": 2
                                                  },
                                                  "value": {
                                                    "kind": "int-literal",
                                                    "literal": 2
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "_method_type",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "int-literal",
                                                "literal": "0"
                                              }
                                            },
                                            "rhs": {
                                              "kind": "enum-ref",
                                              "qualified_name": "MethodType::PCL_OPENMP",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "int-literal",
                                                "literal": 3
                                              },
                                              "value": {
                                                "kind": "int-literal",
                                                "literal": 3
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:631:5, col:42>",
                                        "kind": "assignment",
                                        "variable": "has_converged",
                                        "unqualified_variable": "has_converged",
                                        "value": {
                                          "kind": "unknown"
                                        },
                                        "path_condition": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "_method_type",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "int-literal",
                                                      "literal": "0"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "enum-ref",
                                                    "qualified_name": "MethodType::PCL_GENERIC",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "int-literal",
                                                      "literal": 0
                                                    },
                                                    "value": {
                                                      "kind": "int-literal",
                                                      "literal": 0
                                                    }
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "_method_type",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "int-literal",
                                                      "literal": "0"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "enum-ref",
                                                    "qualified_name": "MethodType::PCL_ANH",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "int-literal",
                                                      "literal": 1
                                                    },
                                                    "value": {
                                                      "kind": "int-literal",
                                                      "literal": 1
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_method_type",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": "0"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "enum-ref",
                                                  "qualified_name": "MethodType::PCL_ANH_GPU",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": 2
                                                  },
                                                  "value": {
                                                    "kind": "int-literal",
                                                    "literal": 2
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "_method_type",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "int-literal",
                                                "literal": "0"
                                              }
                                            },
                                            "rhs": {
                                              "kind": "enum-ref",
                                              "qualified_name": "MethodType::PCL_OPENMP",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "int-literal",
                                                "literal": 3
                                              },
                                              "value": {
                                                "kind": "int-literal",
                                                "literal": 3
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:632:5, col:56>",
                                        "kind": "assignment",
                                        "variable": "final_num_iteration",
                                        "unqualified_variable": "final_num_iteration",
                                        "value": {
                                          "kind": "unknown"
                                        },
                                        "path_condition": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "_method_type",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "int-literal",
                                                      "literal": "0"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "enum-ref",
                                                    "qualified_name": "MethodType::PCL_GENERIC",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "int-literal",
                                                      "literal": 0
                                                    },
                                                    "value": {
                                                      "kind": "int-literal",
                                                      "literal": 0
                                                    }
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "_method_type",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "int-literal",
                                                      "literal": "0"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "enum-ref",
                                                    "qualified_name": "MethodType::PCL_ANH",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "int-literal",
                                                      "literal": 1
                                                    },
                                                    "value": {
                                                      "kind": "int-literal",
                                                      "literal": 1
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_method_type",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": "0"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "enum-ref",
                                                  "qualified_name": "MethodType::PCL_ANH_GPU",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": 2
                                                  },
                                                  "value": {
                                                    "kind": "int-literal",
                                                    "literal": 2
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "_method_type",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "int-literal",
                                                "literal": "0"
                                              }
                                            },
                                            "rhs": {
                                              "kind": "enum-ref",
                                              "qualified_name": "MethodType::PCL_OPENMP",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "int-literal",
                                                "literal": 3
                                              },
                                              "value": {
                                                "kind": "int-literal",
                                                "literal": 3
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:629:5, col:45>",
                                        "kind": "assignment",
                                        "variable": "fitness_score",
                                        "unqualified_variable": "fitness_score",
                                        "value": {
                                          "kind": "unknown"
                                        },
                                        "path_condition": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "_method_type",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "int-literal",
                                                      "literal": "0"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "enum-ref",
                                                    "qualified_name": "MethodType::PCL_GENERIC",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "int-literal",
                                                      "literal": 0
                                                    },
                                                    "value": {
                                                      "kind": "int-literal",
                                                      "literal": 0
                                                    }
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "_method_type",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "int-literal",
                                                      "literal": "0"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "enum-ref",
                                                    "qualified_name": "MethodType::PCL_ANH",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "int-literal",
                                                      "literal": 1
                                                    },
                                                    "value": {
                                                      "kind": "int-literal",
                                                      "literal": 1
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_method_type",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": "0"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "enum-ref",
                                                  "qualified_name": "MethodType::PCL_ANH_GPU",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": 2
                                                  },
                                                  "value": {
                                                    "kind": "int-literal",
                                                    "literal": 2
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "_method_type",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "int-literal",
                                                "literal": "0"
                                              }
                                            },
                                            "rhs": {
                                              "kind": "enum-ref",
                                              "qualified_name": "MethodType::PCL_OPENMP",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "int-literal",
                                                "literal": 3
                                              },
                                              "value": {
                                                "kind": "int-literal",
                                                "literal": 3
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:630:5, col:50>",
                                        "kind": "assignment",
                                        "variable": "t_localizer",
                                        "unqualified_variable": "t_localizer",
                                        "value": {
                                          "kind": "unknown"
                                        },
                                        "path_condition": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "_method_type",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "int-literal",
                                                      "literal": "0"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "enum-ref",
                                                    "qualified_name": "MethodType::PCL_GENERIC",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "int-literal",
                                                      "literal": 0
                                                    },
                                                    "value": {
                                                      "kind": "int-literal",
                                                      "literal": 0
                                                    }
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "_method_type",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "int-literal",
                                                      "literal": "0"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "enum-ref",
                                                    "qualified_name": "MethodType::PCL_ANH",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "int-literal",
                                                      "literal": 1
                                                    },
                                                    "value": {
                                                      "kind": "int-literal",
                                                      "literal": 1
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_method_type",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": "0"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "enum-ref",
                                                  "qualified_name": "MethodType::PCL_ANH_GPU",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": 2
                                                  },
                                                  "value": {
                                                    "kind": "int-literal",
                                                    "literal": 2
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "_method_type",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "int-literal",
                                                "literal": "0"
                                              }
                                            },
                                            "rhs": {
                                              "kind": "enum-ref",
                                              "qualified_name": "MethodType::PCL_OPENMP",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "int-literal",
                                                "literal": 3
                                              },
                                              "value": {
                                                "kind": "int-literal",
                                                "literal": 3
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:631:5, col:42>",
                                        "kind": "assignment",
                                        "variable": "has_converged",
                                        "unqualified_variable": "has_converged",
                                        "value": {
                                          "kind": "unknown"
                                        },
                                        "path_condition": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "_method_type",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "int-literal",
                                                      "literal": "0"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "enum-ref",
                                                    "qualified_name": "MethodType::PCL_GENERIC",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "int-literal",
                                                      "literal": 0
                                                    },
                                                    "value": {
                                                      "kind": "int-literal",
                                                      "literal": 0
                                                    }
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "_method_type",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "int-literal",
                                                      "literal": "0"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "enum-ref",
                                                    "qualified_name": "MethodType::PCL_ANH",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "int-literal",
                                                      "literal": 1
                                                    },
                                                    "value": {
                                                      "kind": "int-literal",
                                                      "literal": 1
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_method_type",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": "0"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "enum-ref",
                                                  "qualified_name": "MethodType::PCL_ANH_GPU",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": 2
                                                  },
                                                  "value": {
                                                    "kind": "int-literal",
                                                    "literal": 2
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "_method_type",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "int-literal",
                                                "literal": "0"
                                              }
                                            },
                                            "rhs": {
                                              "kind": "enum-ref",
                                              "qualified_name": "MethodType::PCL_OPENMP",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "int-literal",
                                                "literal": 3
                                              },
                                              "value": {
                                                "kind": "int-literal",
                                                "literal": 3
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:632:5, col:56>",
                                        "kind": "assignment",
                                        "variable": "final_num_iteration",
                                        "unqualified_variable": "final_num_iteration",
                                        "value": {
                                          "kind": "unknown"
                                        },
                                        "path_condition": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "_method_type",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "int-literal",
                                                      "literal": "0"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "enum-ref",
                                                    "qualified_name": "MethodType::PCL_GENERIC",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "int-literal",
                                                      "literal": 0
                                                    },
                                                    "value": {
                                                      "kind": "int-literal",
                                                      "literal": 0
                                                    }
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "_method_type",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "int-literal",
                                                      "literal": "0"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "enum-ref",
                                                    "qualified_name": "MethodType::PCL_ANH",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "int-literal",
                                                      "literal": 1
                                                    },
                                                    "value": {
                                                      "kind": "int-literal",
                                                      "literal": 1
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_method_type",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": "0"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "enum-ref",
                                                  "qualified_name": "MethodType::PCL_ANH_GPU",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": 2
                                                  },
                                                  "value": {
                                                    "kind": "int-literal",
                                                    "literal": 2
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "_method_type",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "int-literal",
                                                "literal": "0"
                                              }
                                            },
                                            "rhs": {
                                              "kind": "enum-ref",
                                              "qualified_name": "MethodType::PCL_OPENMP",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "int-literal",
                                                "literal": 3
                                              },
                                              "value": {
                                                "kind": "int-literal",
                                                "literal": 3
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "falseBranchBody": {
                                    "source-location": "",
                                    "kind": "compound",
                                    "statements": []
                                  },
                                  "condition": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                }
                              ]
                            },
                            "condition": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        ]
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  ]
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:636:3, col:31>",
                "kind": "assignment",
                "variable": "t_base_link",
                "unqualified_variable": "t_base_link",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:655:3, col:38>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:656:3, col:38>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:657:3, col:38>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:661:3, col:32>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:662:3, col:32>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:663:3, col:32>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:666:3, col:29>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::x",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "ndt_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:667:3, col:29>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::y",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "ndt_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:668:3, col:29>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::z",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "ndt_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:669:3, col:32>",
                "kind": "assignment",
                "variable": "pose::roll",
                "unqualified_variable": "roll",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::roll",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "ndt_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:670:3, col:33>",
                "kind": "assignment",
                "variable": "pose::pitch",
                "unqualified_variable": "pitch",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::pitch",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "ndt_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:671:3, col:31>",
                "kind": "assignment",
                "variable": "pose::yaw",
                "unqualified_variable": "yaw",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::yaw",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "ndt_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:677:3, col:90>",
                "kind": "publish",
                "publisher": "tf_broadcaster",
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:679:3, col:39>",
                "kind": "assignment",
                "variable": "scan_duration",
                "unqualified_variable": "scan_duration",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:683:3, col:43>",
                "kind": "assignment",
                "variable": "diff_x",
                "unqualified_variable": "diff_x",
                "value": {
                  "kind": "binary-expr",
                  "operator": "-",
                  "lhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "pose::x",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "current_pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "pose::x",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "previous_pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:684:3, col:43>",
                "kind": "assignment",
                "variable": "diff_y",
                "unqualified_variable": "diff_y",
                "value": {
                  "kind": "binary-expr",
                  "operator": "-",
                  "lhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "pose::y",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "current_pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "pose::y",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "previous_pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:685:3, col:43>",
                "kind": "assignment",
                "variable": "diff_z",
                "unqualified_variable": "diff_z",
                "value": {
                  "kind": "binary-expr",
                  "operator": "-",
                  "lhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "pose::z",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "current_pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "pose::z",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "previous_pose",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:686:3, col:67>",
                "kind": "assignment",
                "variable": "diff_yaw",
                "unqualified_variable": "diff_yaw",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:687:3, col:66>",
                "kind": "assignment",
                "variable": "diff",
                "unqualified_variable": "diff",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:689:3, col:33>",
                "kind": "assignment",
                "variable": "current_velocity_x",
                "unqualified_variable": "current_velocity_x",
                "value": {
                  "kind": "binary-expr",
                  "operator": "/",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "diff_x",
                    "type": "float",
                    "initial-value": {
                      "kind": "float-literal",
                      "literal": 0.0
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "secs",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:690:3, col:33>",
                "kind": "assignment",
                "variable": "current_velocity_y",
                "unqualified_variable": "current_velocity_y",
                "value": {
                  "kind": "binary-expr",
                  "operator": "/",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "diff_y",
                    "type": "float",
                    "initial-value": {
                      "kind": "float-literal",
                      "literal": 0.0
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "secs",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:691:3, col:33>",
                "kind": "assignment",
                "variable": "current_velocity_z",
                "unqualified_variable": "current_velocity_z",
                "value": {
                  "kind": "binary-expr",
                  "operator": "/",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "diff_z",
                    "type": "float",
                    "initial-value": {
                      "kind": "float-literal",
                      "literal": 0.0
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "secs",
                    "type": "float",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:693:3, col:37>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::x",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:694:3, col:37>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::y",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:695:3, col:37>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::z",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:696:3, col:40>",
                "kind": "assignment",
                "variable": "pose::roll",
                "unqualified_variable": "roll",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::roll",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:697:3, col:41>",
                "kind": "assignment",
                "variable": "pose::pitch",
                "unqualified_variable": "pitch",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::pitch",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:698:3, col:39>",
                "kind": "assignment",
                "variable": "pose::yaw",
                "unqualified_variable": "yaw",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::yaw",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:700:3, col:38>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::x",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:701:3, col:38>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::y",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:702:3, col:38>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::z",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:703:3, col:41>",
                "kind": "assignment",
                "variable": "pose::roll",
                "unqualified_variable": "roll",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::roll",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:704:3, col:42>",
                "kind": "assignment",
                "variable": "pose::pitch",
                "unqualified_variable": "pitch",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::pitch",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:705:3, col:40>",
                "kind": "assignment",
                "variable": "pose::yaw",
                "unqualified_variable": "yaw",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::yaw",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:707:3, col:42>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::x",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:708:3, col:42>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::y",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:709:3, col:42>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::z",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:710:3, col:45>",
                "kind": "assignment",
                "variable": "pose::roll",
                "unqualified_variable": "roll",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::roll",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:711:3, col:46>",
                "kind": "assignment",
                "variable": "pose::pitch",
                "unqualified_variable": "pitch",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::pitch",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:712:3, col:44>",
                "kind": "assignment",
                "variable": "pose::yaw",
                "unqualified_variable": "yaw",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::yaw",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:714:3, col:28>",
                "kind": "assignment",
                "variable": "current_velocity_imu_x",
                "unqualified_variable": "current_velocity_imu_x",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "current_velocity_x",
                  "type": "float",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:715:3, col:28>",
                "kind": "assignment",
                "variable": "current_velocity_imu_y",
                "unqualified_variable": "current_velocity_imu_y",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "current_velocity_y",
                  "type": "float",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:716:3, col:28>",
                "kind": "assignment",
                "variable": "current_velocity_imu_z",
                "unqualified_variable": "current_velocity_imu_z",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "current_velocity_z",
                  "type": "float",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:719:3, col:34>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::x",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:720:3, col:34>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::y",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:721:3, col:34>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::z",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:722:3, col:37>",
                "kind": "assignment",
                "variable": "pose::roll",
                "unqualified_variable": "roll",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::roll",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:723:3, col:38>",
                "kind": "assignment",
                "variable": "pose::pitch",
                "unqualified_variable": "pitch",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::pitch",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:724:3, col:36>",
                "kind": "assignment",
                "variable": "pose::yaw",
                "unqualified_variable": "yaw",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::yaw",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:726:3, col:46>",
                "kind": "assignment",
                "variable": "ros::TimeBase<ros::Time, ros::Duration>::sec",
                "unqualified_variable": "sec",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "ros::TimeBase<ros::Time, ros::Duration>::sec",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 0
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_scan_time",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:727:3, col:47>",
                "kind": "assignment",
                "variable": "ros::TimeBase<ros::Time, ros::Duration>::nsec",
                "unqualified_variable": "nsec",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "ros::TimeBase<ros::Time, ros::Duration>::nsec",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 0
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_scan_time",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:729:3, col:18>",
                "kind": "assignment",
                "variable": "offset_imu_x",
                "unqualified_variable": "offset_imu_x",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:730:3, col:18>",
                "kind": "assignment",
                "variable": "offset_imu_y",
                "unqualified_variable": "offset_imu_y",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:731:3, col:18>",
                "kind": "assignment",
                "variable": "offset_imu_z",
                "unqualified_variable": "offset_imu_z",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:732:3, col:21>",
                "kind": "assignment",
                "variable": "offset_imu_roll",
                "unqualified_variable": "offset_imu_roll",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:733:3, col:22>",
                "kind": "assignment",
                "variable": "offset_imu_pitch",
                "unqualified_variable": "offset_imu_pitch",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:734:3, col:20>",
                "kind": "assignment",
                "variable": "offset_imu_yaw",
                "unqualified_variable": "offset_imu_yaw",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:736:3, col:19>",
                "kind": "assignment",
                "variable": "offset_odom_x",
                "unqualified_variable": "offset_odom_x",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:737:3, col:19>",
                "kind": "assignment",
                "variable": "offset_odom_y",
                "unqualified_variable": "offset_odom_y",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:738:3, col:19>",
                "kind": "assignment",
                "variable": "offset_odom_z",
                "unqualified_variable": "offset_odom_z",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:739:3, col:22>",
                "kind": "assignment",
                "variable": "offset_odom_roll",
                "unqualified_variable": "offset_odom_roll",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:740:3, col:23>",
                "kind": "assignment",
                "variable": "offset_odom_pitch",
                "unqualified_variable": "offset_odom_pitch",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:741:3, col:21>",
                "kind": "assignment",
                "variable": "offset_odom_yaw",
                "unqualified_variable": "offset_odom_yaw",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:743:3, col:23>",
                "kind": "assignment",
                "variable": "offset_imu_odom_x",
                "unqualified_variable": "offset_imu_odom_x",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:744:3, col:23>",
                "kind": "assignment",
                "variable": "offset_imu_odom_y",
                "unqualified_variable": "offset_imu_odom_y",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:745:3, col:23>",
                "kind": "assignment",
                "variable": "offset_imu_odom_z",
                "unqualified_variable": "offset_imu_odom_z",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:746:3, col:26>",
                "kind": "assignment",
                "variable": "offset_imu_odom_roll",
                "unqualified_variable": "offset_imu_odom_roll",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:747:3, col:27>",
                "kind": "assignment",
                "variable": "offset_imu_odom_pitch",
                "unqualified_variable": "offset_imu_odom_pitch",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:748:3, col:25>",
                "kind": "assignment",
                "variable": "offset_imu_odom_yaw",
                "unqualified_variable": "offset_imu_odom_yaw",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:752:3, line:779:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:754:5, col:13>",
                      "kind": "assignment",
                      "variable": "map",
                      "unqualified_variable": "map",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": ">=",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "shift",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "min_add_scan_shift",
                          "type": "float",
                          "initial-value": {
                            "kind": "float-literal",
                            "literal": 1.0
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:755:5, col:33>",
                      "kind": "assignment",
                      "variable": "pose::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::x",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "current_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": ">=",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "shift",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "min_add_scan_shift",
                          "type": "float",
                          "initial-value": {
                            "kind": "float-literal",
                            "literal": 1.0
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:756:5, col:33>",
                      "kind": "assignment",
                      "variable": "pose::y",
                      "unqualified_variable": "y",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::y",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "current_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": ">=",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "shift",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "min_add_scan_shift",
                          "type": "float",
                          "initial-value": {
                            "kind": "float-literal",
                            "literal": 1.0
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:757:5, col:33>",
                      "kind": "assignment",
                      "variable": "pose::z",
                      "unqualified_variable": "z",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::z",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "current_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": ">=",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "shift",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "min_add_scan_shift",
                          "type": "float",
                          "initial-value": {
                            "kind": "float-literal",
                            "literal": 1.0
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:758:5, col:36>",
                      "kind": "assignment",
                      "variable": "pose::roll",
                      "unqualified_variable": "roll",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::roll",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "current_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": ">=",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "shift",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "min_add_scan_shift",
                          "type": "float",
                          "initial-value": {
                            "kind": "float-literal",
                            "literal": 1.0
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:759:5, col:37>",
                      "kind": "assignment",
                      "variable": "pose::pitch",
                      "unqualified_variable": "pitch",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::pitch",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "current_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": ">=",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "shift",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "min_add_scan_shift",
                          "type": "float",
                          "initial-value": {
                            "kind": "float-literal",
                            "literal": 1.0
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:760:5, col:35>",
                      "kind": "assignment",
                      "variable": "pose::yaw",
                      "unqualified_variable": "yaw",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::yaw",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "current_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": ">=",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "shift",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "min_add_scan_shift",
                          "type": "float",
                          "initial-value": {
                            "kind": "float-literal",
                            "literal": 1.0
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:754:5, col:13>",
                      "kind": "assignment",
                      "variable": "map",
                      "unqualified_variable": "map",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": ">=",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "shift",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "min_add_scan_shift",
                          "type": "float",
                          "initial-value": {
                            "kind": "float-literal",
                            "literal": 1.0
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:755:5, col:33>",
                      "kind": "assignment",
                      "variable": "pose::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::x",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "current_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": ">=",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "shift",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "min_add_scan_shift",
                          "type": "float",
                          "initial-value": {
                            "kind": "float-literal",
                            "literal": 1.0
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:756:5, col:33>",
                      "kind": "assignment",
                      "variable": "pose::y",
                      "unqualified_variable": "y",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::y",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "current_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": ">=",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "shift",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "min_add_scan_shift",
                          "type": "float",
                          "initial-value": {
                            "kind": "float-literal",
                            "literal": 1.0
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:757:5, col:33>",
                      "kind": "assignment",
                      "variable": "pose::z",
                      "unqualified_variable": "z",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::z",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "current_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": ">=",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "shift",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "min_add_scan_shift",
                          "type": "float",
                          "initial-value": {
                            "kind": "float-literal",
                            "literal": 1.0
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:758:5, col:36>",
                      "kind": "assignment",
                      "variable": "pose::roll",
                      "unqualified_variable": "roll",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::roll",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "current_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": ">=",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "shift",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "min_add_scan_shift",
                          "type": "float",
                          "initial-value": {
                            "kind": "float-literal",
                            "literal": 1.0
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:759:5, col:37>",
                      "kind": "assignment",
                      "variable": "pose::pitch",
                      "unqualified_variable": "pitch",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::pitch",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "current_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": ">=",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "shift",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "min_add_scan_shift",
                          "type": "float",
                          "initial-value": {
                            "kind": "float-literal",
                            "literal": 1.0
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:760:5, col:35>",
                      "kind": "assignment",
                      "variable": "pose::yaw",
                      "unqualified_variable": "yaw",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "pose::yaw",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "current_pose",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": ">=",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "shift",
                          "type": "float",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "min_add_scan_shift",
                          "type": "float",
                          "initial-value": {
                            "kind": "float-literal",
                            "literal": 1.0
                          }
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:783:3, col:35>",
                "kind": "publish",
                "publisher": "ndt_map_pub",
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:786:3, col:38>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:787:3, col:35>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                "unqualified_variable": "stamp",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "current_scan_time",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:788:3, col:51>",
                "kind": "assignment",
                "variable": "geometry_msgs::Point_<std::allocator<void>>::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::x",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:789:3, col:51>",
                "kind": "assignment",
                "variable": "geometry_msgs::Point_<std::allocator<void>>::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::y",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:790:3, col:51>",
                "kind": "assignment",
                "variable": "geometry_msgs::Point_<std::allocator<void>>::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "pose::z",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "current_pose",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:791:3, col:45>",
                "kind": "assignment",
                "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:792:3, col:45>",
                "kind": "assignment",
                "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:793:3, col:45>",
                "kind": "assignment",
                "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:794:3, col:45>",
                "kind": "assignment",
                "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::w",
                "unqualified_variable": "w",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:796:3, col:44>",
                "kind": "publish",
                "publisher": "current_pose_pub",
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        },
        {
          "name": "main",
          "parameters": [
            {
              "index": 0,
              "name": "argc",
              "type": "integer"
            }
          ],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:847:3, col:21>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:848:3, col:21>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:849:3, col:21>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:850:3, col:24>",
                "kind": "assignment",
                "variable": "pose::roll",
                "unqualified_variable": "roll",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:851:3, col:25>",
                "kind": "assignment",
                "variable": "pose::pitch",
                "unqualified_variable": "pitch",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:852:3, col:23>",
                "kind": "assignment",
                "variable": "pose::yaw",
                "unqualified_variable": "yaw",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:854:3, col:16>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:855:3, col:16>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:856:3, col:16>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:857:3, col:19>",
                "kind": "assignment",
                "variable": "pose::roll",
                "unqualified_variable": "roll",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:858:3, col:20>",
                "kind": "assignment",
                "variable": "pose::pitch",
                "unqualified_variable": "pitch",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:859:3, col:18>",
                "kind": "assignment",
                "variable": "pose::yaw",
                "unqualified_variable": "yaw",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:861:3, col:20>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:862:3, col:20>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:863:3, col:20>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:864:3, col:23>",
                "kind": "assignment",
                "variable": "pose::roll",
                "unqualified_variable": "roll",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:865:3, col:24>",
                "kind": "assignment",
                "variable": "pose::pitch",
                "unqualified_variable": "pitch",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:866:3, col:22>",
                "kind": "assignment",
                "variable": "pose::yaw",
                "unqualified_variable": "yaw",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:868:3, col:24>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:869:3, col:24>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:870:3, col:24>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:871:3, col:27>",
                "kind": "assignment",
                "variable": "pose::roll",
                "unqualified_variable": "roll",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:872:3, col:28>",
                "kind": "assignment",
                "variable": "pose::pitch",
                "unqualified_variable": "pitch",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:873:3, col:26>",
                "kind": "assignment",
                "variable": "pose::yaw",
                "unqualified_variable": "yaw",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:875:3, col:18>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:876:3, col:18>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:877:3, col:18>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:878:3, col:21>",
                "kind": "assignment",
                "variable": "pose::roll",
                "unqualified_variable": "roll",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:879:3, col:22>",
                "kind": "assignment",
                "variable": "pose::pitch",
                "unqualified_variable": "pitch",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:880:3, col:20>",
                "kind": "assignment",
                "variable": "pose::yaw",
                "unqualified_variable": "yaw",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:882:3, col:18>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:883:3, col:18>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:884:3, col:18>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:885:3, col:21>",
                "kind": "assignment",
                "variable": "pose::roll",
                "unqualified_variable": "roll",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:886:3, col:22>",
                "kind": "assignment",
                "variable": "pose::pitch",
                "unqualified_variable": "pitch",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:887:3, col:20>",
                "kind": "assignment",
                "variable": "pose::yaw",
                "unqualified_variable": "yaw",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:889:3, col:12>",
                "kind": "assignment",
                "variable": "diff_x",
                "unqualified_variable": "diff_x",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:890:3, col:12>",
                "kind": "assignment",
                "variable": "diff_y",
                "unqualified_variable": "diff_y",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:891:3, col:12>",
                "kind": "assignment",
                "variable": "diff_z",
                "unqualified_variable": "diff_z",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:892:3, col:14>",
                "kind": "assignment",
                "variable": "diff_yaw",
                "unqualified_variable": "diff_yaw",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:894:3, col:18>",
                "kind": "assignment",
                "variable": "offset_imu_x",
                "unqualified_variable": "offset_imu_x",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:895:3, col:18>",
                "kind": "assignment",
                "variable": "offset_imu_y",
                "unqualified_variable": "offset_imu_y",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:896:3, col:18>",
                "kind": "assignment",
                "variable": "offset_imu_z",
                "unqualified_variable": "offset_imu_z",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:897:3, col:21>",
                "kind": "assignment",
                "variable": "offset_imu_roll",
                "unqualified_variable": "offset_imu_roll",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:898:3, col:22>",
                "kind": "assignment",
                "variable": "offset_imu_pitch",
                "unqualified_variable": "offset_imu_pitch",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:899:3, col:20>",
                "kind": "assignment",
                "variable": "offset_imu_yaw",
                "unqualified_variable": "offset_imu_yaw",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:901:3, col:19>",
                "kind": "assignment",
                "variable": "offset_odom_x",
                "unqualified_variable": "offset_odom_x",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:902:3, col:19>",
                "kind": "assignment",
                "variable": "offset_odom_y",
                "unqualified_variable": "offset_odom_y",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:903:3, col:19>",
                "kind": "assignment",
                "variable": "offset_odom_z",
                "unqualified_variable": "offset_odom_z",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:904:3, col:22>",
                "kind": "assignment",
                "variable": "offset_odom_roll",
                "unqualified_variable": "offset_odom_roll",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:905:3, col:23>",
                "kind": "assignment",
                "variable": "offset_odom_pitch",
                "unqualified_variable": "offset_odom_pitch",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:906:3, col:21>",
                "kind": "assignment",
                "variable": "offset_odom_yaw",
                "unqualified_variable": "offset_odom_yaw",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:908:3, col:23>",
                "kind": "assignment",
                "variable": "offset_imu_odom_x",
                "unqualified_variable": "offset_imu_odom_x",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:909:3, col:23>",
                "kind": "assignment",
                "variable": "offset_imu_odom_y",
                "unqualified_variable": "offset_imu_odom_y",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:910:3, col:23>",
                "kind": "assignment",
                "variable": "offset_imu_odom_z",
                "unqualified_variable": "offset_imu_odom_z",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:911:3, col:26>",
                "kind": "assignment",
                "variable": "offset_imu_odom_roll",
                "unqualified_variable": "offset_imu_odom_roll",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:912:3, col:27>",
                "kind": "assignment",
                "variable": "offset_imu_odom_pitch",
                "unqualified_variable": "offset_imu_odom_pitch",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:913:3, col:25>",
                "kind": "assignment",
                "variable": "offset_imu_odom_yaw",
                "unqualified_variable": "offset_imu_odom_yaw",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:915:3, col:38>",
                "kind": "ros-init",
                "name": {
                  "kind": "string-literal",
                  "literal": "ndt_mapping"
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:925:3, col:53>",
                "kind": "assignment",
                "variable": "filename",
                "unqualified_variable": "filename",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:959:3, col:53>",
                "kind": "assignment",
                "variable": "v0",
                "unqualified_variable": "v0",
                "value": {
                  "source-location": "",
                  "kind": "reads-param",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "method_type"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:960:3, col:57>",
                "kind": "assignment",
                "variable": "_method_type",
                "unqualified_variable": "_method_type",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "method_type_tmp",
                  "type": "integer",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 0
                  }
                },
                "path_condition": {
                  "kind": "variable-reference",
                  "qualified_name": "ofs",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:961:3, col:58>",
                "kind": "assignment",
                "variable": "v1",
                "unqualified_variable": "v1",
                "value": {
                  "source-location": "",
                  "kind": "reads-param",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "imu_upside_down"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:962:3, col:46>",
                "kind": "assignment",
                "variable": "v2",
                "unqualified_variable": "v2",
                "value": {
                  "source-location": "",
                  "kind": "reads-param",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "imu_topic"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:963:3, col:76>",
                "kind": "assignment",
                "variable": "v3",
                "unqualified_variable": "v3",
                "value": {
                  "source-location": "",
                  "kind": "reads-param",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "incremental_voxel_update"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:972:7, col:32>",
                "kind": "assignment",
                "variable": "v4",
                "unqualified_variable": "v4",
                "value": {
                  "source-location": "",
                  "kind": "reads-param",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": ""
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "tf_x"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:977:7, col:32>",
                "kind": "assignment",
                "variable": "v5",
                "unqualified_variable": "v5",
                "value": {
                  "source-location": "",
                  "kind": "reads-param",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": ""
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "tf_y"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:982:7, col:32>",
                "kind": "assignment",
                "variable": "v6",
                "unqualified_variable": "v6",
                "value": {
                  "source-location": "",
                  "kind": "reads-param",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": ""
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "tf_z"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:987:7, col:38>",
                "kind": "assignment",
                "variable": "v7",
                "unqualified_variable": "v7",
                "value": {
                  "source-location": "",
                  "kind": "reads-param",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": ""
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "tf_roll"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:992:7, col:40>",
                "kind": "assignment",
                "variable": "v8",
                "unqualified_variable": "v8",
                "value": {
                  "source-location": "",
                  "kind": "reads-param",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": ""
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "tf_pitch"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:997:7, col:36>",
                "kind": "assignment",
                "variable": "v9",
                "unqualified_variable": "v9",
                "value": {
                  "source-location": "",
                  "kind": "reads-param",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": ""
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "tf_yaw"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:1029:3, col:69>",
                "kind": "assignment",
                "variable": "tf_btol",
                "unqualified_variable": "tf_btol",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "ofs",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "unknown"
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:1030:3, col:29>",
                "kind": "assignment",
                "variable": "tf_ltob",
                "unqualified_variable": "tf_ltob",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "ofs",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "unknown"
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:1032:3, col:25>",
                "kind": "assignment",
                "variable": "pcl::PCLHeader::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "ofs",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "unknown"
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:1034:3, col:72>",
                "kind": "assignment",
                "variable": "ndt_map_pub",
                "unqualified_variable": "ndt_map_pub",
                "value": {
                  "kind": "string-literal",
                  "literal": "/ndt_map"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "ofs",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "unknown"
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:1034:17, col:72>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/ndt_map"
                  }
                },
                "format": "sensor_msgs/PointCloud2",
                "source_location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:1034:17, col:72>"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:1035:3, col:84>",
                "kind": "assignment",
                "variable": "current_pose_pub",
                "unqualified_variable": "current_pose_pub",
                "value": {
                  "kind": "string-literal",
                  "literal": "/current_pose"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "ofs",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "unknown"
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:1035:22, col:84>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/current_pose"
                  }
                },
                "format": "geometry_msgs/PoseStamped",
                "source_location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:1035:22, col:84>"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:1037:31, col:84>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "config/ndt_mapping"
                  }
                },
                "format": "autoware_config_msgs/ConfigNDTMapping",
                "callback-name": "param_callback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:1037:31, col:84>",
                "kind": "call",
                "callee": "param_callback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:1038:32, col:93>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "config/ndt_mapping_output"
                  }
                },
                "format": "autoware_config_msgs/ConfigNDTMappingOutput",
                "callback-name": "output_callback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:1038:32, col:93>",
                "kind": "call",
                "callee": "output_callback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:1039:32, col:82>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "points_raw"
                  }
                },
                "format": "sensor_msgs/PointCloud2",
                "callback-name": "points_callback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:1039:32, col:82>",
                "kind": "call",
                "callee": "points_callback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:1040:30, col:81>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/vehicle/odom"
                  }
                },
                "format": "nav_msgs/Odometry",
                "callback-name": "odom_callback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:1040:30, col:81>",
                "kind": "call",
                "callee": "odom_callback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:1041:29, col:74>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/imu_raw"
                  }
                },
                "format": "boost/shared_ptr",
                "callback-name": "imu_callback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:1041:29, col:74>",
                "kind": "call",
                "callee": "imu_callback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:847:3, col:21>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:848:3, col:21>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:849:3, col:21>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:850:3, col:24>",
                "kind": "assignment",
                "variable": "pose::roll",
                "unqualified_variable": "roll",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:851:3, col:25>",
                "kind": "assignment",
                "variable": "pose::pitch",
                "unqualified_variable": "pitch",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:852:3, col:23>",
                "kind": "assignment",
                "variable": "pose::yaw",
                "unqualified_variable": "yaw",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:854:3, col:16>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:855:3, col:16>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:856:3, col:16>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:857:3, col:19>",
                "kind": "assignment",
                "variable": "pose::roll",
                "unqualified_variable": "roll",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:858:3, col:20>",
                "kind": "assignment",
                "variable": "pose::pitch",
                "unqualified_variable": "pitch",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:859:3, col:18>",
                "kind": "assignment",
                "variable": "pose::yaw",
                "unqualified_variable": "yaw",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:861:3, col:20>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:862:3, col:20>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:863:3, col:20>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:864:3, col:23>",
                "kind": "assignment",
                "variable": "pose::roll",
                "unqualified_variable": "roll",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:865:3, col:24>",
                "kind": "assignment",
                "variable": "pose::pitch",
                "unqualified_variable": "pitch",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:866:3, col:22>",
                "kind": "assignment",
                "variable": "pose::yaw",
                "unqualified_variable": "yaw",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:868:3, col:24>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:869:3, col:24>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:870:3, col:24>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:871:3, col:27>",
                "kind": "assignment",
                "variable": "pose::roll",
                "unqualified_variable": "roll",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:872:3, col:28>",
                "kind": "assignment",
                "variable": "pose::pitch",
                "unqualified_variable": "pitch",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:873:3, col:26>",
                "kind": "assignment",
                "variable": "pose::yaw",
                "unqualified_variable": "yaw",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:875:3, col:18>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:876:3, col:18>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:877:3, col:18>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:878:3, col:21>",
                "kind": "assignment",
                "variable": "pose::roll",
                "unqualified_variable": "roll",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:879:3, col:22>",
                "kind": "assignment",
                "variable": "pose::pitch",
                "unqualified_variable": "pitch",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:880:3, col:20>",
                "kind": "assignment",
                "variable": "pose::yaw",
                "unqualified_variable": "yaw",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:882:3, col:18>",
                "kind": "assignment",
                "variable": "pose::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:883:3, col:18>",
                "kind": "assignment",
                "variable": "pose::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:884:3, col:18>",
                "kind": "assignment",
                "variable": "pose::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:885:3, col:21>",
                "kind": "assignment",
                "variable": "pose::roll",
                "unqualified_variable": "roll",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:886:3, col:22>",
                "kind": "assignment",
                "variable": "pose::pitch",
                "unqualified_variable": "pitch",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:887:3, col:20>",
                "kind": "assignment",
                "variable": "pose::yaw",
                "unqualified_variable": "yaw",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:889:3, col:12>",
                "kind": "assignment",
                "variable": "diff_x",
                "unqualified_variable": "diff_x",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:890:3, col:12>",
                "kind": "assignment",
                "variable": "diff_y",
                "unqualified_variable": "diff_y",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:891:3, col:12>",
                "kind": "assignment",
                "variable": "diff_z",
                "unqualified_variable": "diff_z",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:892:3, col:14>",
                "kind": "assignment",
                "variable": "diff_yaw",
                "unqualified_variable": "diff_yaw",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:894:3, col:18>",
                "kind": "assignment",
                "variable": "offset_imu_x",
                "unqualified_variable": "offset_imu_x",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:895:3, col:18>",
                "kind": "assignment",
                "variable": "offset_imu_y",
                "unqualified_variable": "offset_imu_y",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:896:3, col:18>",
                "kind": "assignment",
                "variable": "offset_imu_z",
                "unqualified_variable": "offset_imu_z",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:897:3, col:21>",
                "kind": "assignment",
                "variable": "offset_imu_roll",
                "unqualified_variable": "offset_imu_roll",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:898:3, col:22>",
                "kind": "assignment",
                "variable": "offset_imu_pitch",
                "unqualified_variable": "offset_imu_pitch",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:899:3, col:20>",
                "kind": "assignment",
                "variable": "offset_imu_yaw",
                "unqualified_variable": "offset_imu_yaw",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:901:3, col:19>",
                "kind": "assignment",
                "variable": "offset_odom_x",
                "unqualified_variable": "offset_odom_x",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:902:3, col:19>",
                "kind": "assignment",
                "variable": "offset_odom_y",
                "unqualified_variable": "offset_odom_y",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:903:3, col:19>",
                "kind": "assignment",
                "variable": "offset_odom_z",
                "unqualified_variable": "offset_odom_z",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:904:3, col:22>",
                "kind": "assignment",
                "variable": "offset_odom_roll",
                "unqualified_variable": "offset_odom_roll",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:905:3, col:23>",
                "kind": "assignment",
                "variable": "offset_odom_pitch",
                "unqualified_variable": "offset_odom_pitch",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:906:3, col:21>",
                "kind": "assignment",
                "variable": "offset_odom_yaw",
                "unqualified_variable": "offset_odom_yaw",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:908:3, col:23>",
                "kind": "assignment",
                "variable": "offset_imu_odom_x",
                "unqualified_variable": "offset_imu_odom_x",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:909:3, col:23>",
                "kind": "assignment",
                "variable": "offset_imu_odom_y",
                "unqualified_variable": "offset_imu_odom_y",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:910:3, col:23>",
                "kind": "assignment",
                "variable": "offset_imu_odom_z",
                "unqualified_variable": "offset_imu_odom_z",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:911:3, col:26>",
                "kind": "assignment",
                "variable": "offset_imu_odom_roll",
                "unqualified_variable": "offset_imu_odom_roll",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:912:3, col:27>",
                "kind": "assignment",
                "variable": "offset_imu_odom_pitch",
                "unqualified_variable": "offset_imu_odom_pitch",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:913:3, col:25>",
                "kind": "assignment",
                "variable": "offset_imu_odom_yaw",
                "unqualified_variable": "offset_imu_odom_yaw",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:915:3, col:38>",
                "kind": "ros-init",
                "name": {
                  "kind": "string-literal",
                  "literal": "ndt_mapping"
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:925:3, col:53>",
                "kind": "assignment",
                "variable": "filename",
                "unqualified_variable": "filename",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:959:3, col:53>",
                "kind": "assignment",
                "variable": "v10",
                "unqualified_variable": "v10",
                "value": {
                  "source-location": "",
                  "kind": "reads-param",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "method_type"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:960:3, col:57>",
                "kind": "assignment",
                "variable": "_method_type",
                "unqualified_variable": "_method_type",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "method_type_tmp",
                  "type": "integer",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 0
                  }
                },
                "path_condition": {
                  "kind": "variable-reference",
                  "qualified_name": "ofs",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:961:3, col:58>",
                "kind": "assignment",
                "variable": "v11",
                "unqualified_variable": "v11",
                "value": {
                  "source-location": "",
                  "kind": "reads-param",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "imu_upside_down"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:962:3, col:46>",
                "kind": "assignment",
                "variable": "v12",
                "unqualified_variable": "v12",
                "value": {
                  "source-location": "",
                  "kind": "reads-param",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "imu_topic"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:963:3, col:76>",
                "kind": "assignment",
                "variable": "v13",
                "unqualified_variable": "v13",
                "value": {
                  "source-location": "",
                  "kind": "reads-param",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "incremental_voxel_update"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:972:3, line:976:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:977:3, line:981:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:982:3, line:986:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:987:3, line:991:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:992:3, line:996:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:997:3, line:1001:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:1029:3, col:69>",
                "kind": "assignment",
                "variable": "tf_btol",
                "unqualified_variable": "tf_btol",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "ofs",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "unknown"
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:1030:3, col:29>",
                "kind": "assignment",
                "variable": "tf_ltob",
                "unqualified_variable": "tf_ltob",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "ofs",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "unknown"
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:1032:3, col:25>",
                "kind": "assignment",
                "variable": "pcl::PCLHeader::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "string-literal",
                  "literal": "map"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "ofs",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "unknown"
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:1034:3, col:72>",
                "kind": "assignment",
                "variable": "ndt_map_pub",
                "unqualified_variable": "ndt_map_pub",
                "value": {
                  "kind": "string-literal",
                  "literal": "/ndt_map"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "ofs",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "unknown"
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:1034:17, col:72>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/ndt_map"
                  }
                },
                "format": "sensor_msgs/PointCloud2",
                "source_location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:1034:17, col:72>"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:1035:3, col:84>",
                "kind": "assignment",
                "variable": "current_pose_pub",
                "unqualified_variable": "current_pose_pub",
                "value": {
                  "kind": "string-literal",
                  "literal": "/current_pose"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "ofs",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "unknown"
                                },
                                "rhs": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "unknown"
                              },
                              "rhs": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:1035:22, col:84>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/current_pose"
                  }
                },
                "format": "geometry_msgs/PoseStamped",
                "source_location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:1035:22, col:84>"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:1037:31, col:84>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "config/ndt_mapping"
                  }
                },
                "format": "autoware_config_msgs/ConfigNDTMapping",
                "callback-name": "param_callback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:1037:31, col:84>",
                "kind": "call",
                "callee": "param_callback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:1038:32, col:93>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "config/ndt_mapping_output"
                  }
                },
                "format": "autoware_config_msgs/ConfigNDTMappingOutput",
                "callback-name": "output_callback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:1038:32, col:93>",
                "kind": "call",
                "callee": "output_callback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:1039:32, col:82>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "points_raw"
                  }
                },
                "format": "sensor_msgs/PointCloud2",
                "callback-name": "points_callback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:1039:32, col:82>",
                "kind": "call",
                "callee": "points_callback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:1040:30, col:81>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/vehicle/odom"
                  }
                },
                "format": "nav_msgs/Odometry",
                "callback-name": "odom_callback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:1040:30, col:81>",
                "kind": "call",
                "callee": "odom_callback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:1041:29, col:74>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/imu_raw"
                  }
                },
                "format": "boost/shared_ptr",
                "callback-name": "imu_callback"
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:1041:29, col:74>",
                "kind": "call",
                "callee": "imu_callback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        },
        {
          "name": "imu_callback",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:416:3, col:33>",
                "kind": "assignment",
                "variable": "imu_roll",
                "unqualified_variable": "imu_roll",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:417:3, col:35>",
                "kind": "assignment",
                "variable": "imu_pitch",
                "unqualified_variable": "imu_pitch",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:418:3, col:31>",
                "kind": "assignment",
                "variable": "imu_yaw",
                "unqualified_variable": "imu_yaw",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:425:3, col:23>",
                "kind": "assignment",
                "variable": "sensor_msgs::Imu_<std::allocator<void>>::header",
                "unqualified_variable": "header",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "sensor_msgs::Imu_<std::allocator<void>>::header",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:426:3, col:58>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "qualified_name": "sensor_msgs::Imu_<std::allocator<void>>::linear_acceleration",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:429:3, col:31>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "int-literal",
                  "literal": 0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:430:3, col:31>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "int-literal",
                  "literal": 0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:434:5, col:46>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "binary-expr",
                  "operator": "/",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "diff_imu_roll",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "diff_time",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "!=",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "diff_time",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "int-literal",
                    "literal": 0
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:435:5, col:47>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "binary-expr",
                  "operator": "/",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "diff_imu_pitch",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "diff_time",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "!=",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "diff_time",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "int-literal",
                    "literal": 0
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:436:5, col:45>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "binary-expr",
                  "operator": "/",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "diff_imu_yaw",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "diff_time",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "!=",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "diff_time",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "int-literal",
                    "literal": 0
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:440:5, col:30>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "int-literal",
                  "literal": 0
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "binary-expr",
                    "operator": "!=",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "diff_time",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:441:5, col:30>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "int-literal",
                  "literal": 0
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "binary-expr",
                    "operator": "!=",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "diff_time",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:442:5, col:30>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "int-literal",
                  "literal": 0
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "binary-expr",
                    "operator": "!=",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "diff_time",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 0
                    }
                  }
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:447:3, col:19>",
                "kind": "assignment",
                "variable": "previous_time",
                "unqualified_variable": "previous_time",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "current_time",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:448:3, col:23>",
                "kind": "assignment",
                "variable": "previous_imu_roll",
                "unqualified_variable": "previous_imu_roll",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "imu_roll",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:449:3, col:24>",
                "kind": "assignment",
                "variable": "previous_imu_pitch",
                "unqualified_variable": "previous_imu_pitch",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "imu_pitch",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:450:3, col:22>",
                "kind": "assignment",
                "variable": "previous_imu_yaw",
                "unqualified_variable": "previous_imu_yaw",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "imu_yaw",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:416:3, col:33>",
                "kind": "assignment",
                "variable": "imu_roll",
                "unqualified_variable": "imu_roll",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:417:3, col:35>",
                "kind": "assignment",
                "variable": "imu_pitch",
                "unqualified_variable": "imu_pitch",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:418:3, col:31>",
                "kind": "assignment",
                "variable": "imu_yaw",
                "unqualified_variable": "imu_yaw",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:425:3, col:23>",
                "kind": "assignment",
                "variable": "sensor_msgs::Imu_<std::allocator<void>>::header",
                "unqualified_variable": "header",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "sensor_msgs::Imu_<std::allocator<void>>::header",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:426:3, col:58>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "qualified_name": "sensor_msgs::Imu_<std::allocator<void>>::linear_acceleration",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:429:3, col:31>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "int-literal",
                  "literal": 0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:430:3, col:31>",
                "kind": "assignment",
                "variable": "geometry_msgs::Vector3_<std::allocator<void>>::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "int-literal",
                  "literal": 0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:432:3, line:443:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:434:5, col:46>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "/",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "diff_imu_roll",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "diff_time",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "!=",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "diff_time",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:435:5, col:47>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Vector3_<std::allocator<void>>::y",
                      "unqualified_variable": "y",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "/",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "diff_imu_pitch",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "diff_time",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "!=",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "diff_time",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:436:5, col:45>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Vector3_<std::allocator<void>>::z",
                      "unqualified_variable": "z",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "/",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "diff_imu_yaw",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "diff_time",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "!=",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "diff_time",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:434:5, col:46>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "/",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "diff_imu_roll",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "diff_time",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "!=",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "diff_time",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:435:5, col:47>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Vector3_<std::allocator<void>>::y",
                      "unqualified_variable": "y",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "/",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "diff_imu_pitch",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "diff_time",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "!=",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "diff_time",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:436:5, col:45>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Vector3_<std::allocator<void>>::z",
                      "unqualified_variable": "z",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "/",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "diff_imu_yaw",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "diff_time",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "!=",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "diff_time",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:440:5, col:30>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "int-literal",
                        "literal": 0
                      },
                      "path_condition": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "!=",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "diff_time",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:441:5, col:30>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Vector3_<std::allocator<void>>::y",
                      "unqualified_variable": "y",
                      "value": {
                        "kind": "int-literal",
                        "literal": 0
                      },
                      "path_condition": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "!=",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "diff_time",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:442:5, col:30>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Vector3_<std::allocator<void>>::z",
                      "unqualified_variable": "z",
                      "value": {
                        "kind": "int-literal",
                        "literal": 0
                      },
                      "path_condition": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "!=",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "diff_time",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:440:5, col:30>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Vector3_<std::allocator<void>>::x",
                      "unqualified_variable": "x",
                      "value": {
                        "kind": "int-literal",
                        "literal": 0
                      },
                      "path_condition": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "!=",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "diff_time",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:441:5, col:30>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Vector3_<std::allocator<void>>::y",
                      "unqualified_variable": "y",
                      "value": {
                        "kind": "int-literal",
                        "literal": 0
                      },
                      "path_condition": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "!=",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "diff_time",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:442:5, col:30>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::Vector3_<std::allocator<void>>::z",
                      "unqualified_variable": "z",
                      "value": {
                        "kind": "int-literal",
                        "literal": 0
                      },
                      "path_condition": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "!=",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "diff_time",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        }
                      }
                    }
                  ]
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:447:3, col:19>",
                "kind": "assignment",
                "variable": "previous_time",
                "unqualified_variable": "previous_time",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "current_time",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:448:3, col:23>",
                "kind": "assignment",
                "variable": "previous_imu_roll",
                "unqualified_variable": "previous_imu_roll",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "imu_roll",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:449:3, col:24>",
                "kind": "assignment",
                "variable": "previous_imu_pitch",
                "unqualified_variable": "previous_imu_pitch",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "imu_pitch",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</home/autoware/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_mapping/ndt_mapping.cpp:450:3, col:22>",
                "kind": "assignment",
                "variable": "previous_imu_yaw",
                "unqualified_variable": "previous_imu_yaw",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "imu_yaw",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        }
      ]
    }
  }
}