{
  "image": {
    "sha256": "b44a68ec6b77be4a6b184926233398821502330d02ca391cc08a48ba09dedc0f"
  },
  "node-name": "moveit_evaluate_collision_checking_speed",
  "package": {
    "name": "moveit_ros_planning",
    "path": "/ros_ws/src/moveit/moveit_ros_planning"
  },
  "sources": [
    "/ros_ws/src/moveit/moveit_ros_planning/./planning_components_tools/src/evaluate_collision_checking_speed.cpp"
  ],
  "program": {
    "program": {
      "entrypoint": "main",
      "functions": [
        {
          "name": "main",
          "parameters": [
            {
              "index": 0,
              "name": "argc",
              "type": "integer"
            }
          ],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</ros_ws/src/moveit/moveit_ros_planning/planning_components_tools/src/evaluate_collision_checking_speed.cpp:60:3, col:60>",
                "kind": "ros-init",
                "name": {
                  "kind": "string-literal",
                  "literal": "evaluate_collision_checking_speed"
                }
              },
              {
                "source-location": "</ros_ws/src/moveit/moveit_ros_planning/planning_components_tools/src/evaluate_collision_checking_speed.cpp:96:7, col:32>",
                "kind": "ratesleep",
                "rate": {
                  "kind": "float-literal",
                  "literal": 2.0
                }
              },
              {
                "source-location": "</ros_ws/src/moveit/moveit_ros_planning/planning_components_tools/src/evaluate_collision_checking_speed.cpp:60:3, col:60>",
                "kind": "ros-init",
                "name": {
                  "kind": "string-literal",
                  "literal": "evaluate_collision_checking_speed"
                }
              },
              {
                "source-location": "</ros_ws/src/moveit/moveit_ros_planning/planning_components_tools/src/evaluate_collision_checking_speed.cpp:86:3, line:130:5 <Spelling=/ros_ws/src/rosconsole/include/ros/console.h:389:16>>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/moveit/moveit_ros_planning/planning_components_tools/src/evaluate_collision_checking_speed.cpp:88:5, line:96:32>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": []
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</ros_ws/src/moveit/moveit_ros_planning/planning_components_tools/src/evaluate_collision_checking_speed.cpp:96:7, col:32>",
                            "kind": "ratesleep",
                            "rate": {
                              "kind": "float-literal",
                              "literal": 2.0
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/moveit/moveit_ros_planning/planning_components_tools/src/evaluate_collision_checking_speed.cpp:96:7, col:32>",
                            "kind": "ratesleep",
                            "rate": {
                              "kind": "float-literal",
                              "literal": 2.0
                            }
                          }
                        ]
                      },
                      "condition": {
                        "kind": "unknown"
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              }
            ]
          }
        }
      ]
    }
  }
}