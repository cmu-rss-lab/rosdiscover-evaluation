{
  "image": {
    "sha256": "b44a68ec6b77be4a6b184926233398821502330d02ca391cc08a48ba09dedc0f"
  },
  "node-name": "amcl",
  "package": {
    "name": "amcl",
    "path": "/ros_ws/src/navigation/amcl"
  },
  "sources": [
    "/ros_ws/src/navigation/amcl/src/amcl_node.cpp"
  ],
  "program": {
    "program": {
      "entrypoint": "main",
      "functions": [
        {
          "name": "AmclNode::savePoseToServer",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:774:3, col:66>",
                "kind": "writes-to-param",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": "~"
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "initial_pose_x"
                  }
                },
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:775:3, col:66>",
                "kind": "writes-to-param",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": "~"
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "initial_pose_y"
                  }
                },
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:776:3, col:45>",
                "kind": "writes-to-param",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": "~"
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "initial_pose_a"
                  }
                },
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:777:3, line:778:77>",
                "kind": "writes-to-param",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": "~"
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "initial_cov_xx"
                  }
                },
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:779:3, line:780:77>",
                "kind": "writes-to-param",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": "~"
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "initial_cov_yy"
                  }
                },
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:781:3, line:782:77>",
                "kind": "writes-to-param",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": "~"
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "initial_cov_aa"
                  }
                },
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:774:3, col:66>",
                "kind": "writes-to-param",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": "~"
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "initial_pose_x"
                  }
                },
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:775:3, col:66>",
                "kind": "writes-to-param",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": "~"
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "initial_pose_y"
                  }
                },
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:776:3, col:45>",
                "kind": "writes-to-param",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": "~"
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "initial_pose_a"
                  }
                },
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:777:3, line:778:77>",
                "kind": "writes-to-param",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": "~"
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "initial_cov_xx"
                  }
                },
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:779:3, line:780:77>",
                "kind": "writes-to-param",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": "~"
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "initial_cov_yy"
                  }
                },
                "value": {
                  "kind": "unknown"
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:781:3, line:782:77>",
                "kind": "writes-to-param",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": "~"
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "initial_cov_aa"
                  }
                },
                "value": {
                  "kind": "unknown"
                }
              }
            ]
          }
        },
        {
          "name": "AmclNode::checkLaserReceived",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": []
          }
        },
        {
          "name": "AmclNode::updatePoseFromServer",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:795:3, col:61>",
                "kind": "assignment",
                "variable": "v0",
                "unqualified_variable": "v0",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "initial_pose_x"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:800:3, col:61>",
                "kind": "assignment",
                "variable": "v1",
                "unqualified_variable": "v1",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "initial_pose_y"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:805:3, col:61>",
                "kind": "assignment",
                "variable": "v2",
                "unqualified_variable": "v2",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "initial_pose_a"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:810:3, col:60>",
                "kind": "assignment",
                "variable": "v3",
                "unqualified_variable": "v3",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "initial_cov_xx"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:815:3, col:60>",
                "kind": "assignment",
                "variable": "v4",
                "unqualified_variable": "v4",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "initial_cov_yy"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:820:3, col:60>",
                "kind": "assignment",
                "variable": "v5",
                "unqualified_variable": "v5",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "initial_cov_aa"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:795:3, col:61>",
                "kind": "assignment",
                "variable": "v6",
                "unqualified_variable": "v6",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "initial_pose_x"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:796:3, line:799:5 <Spelling=/ros_ws/src/rosconsole/include/ros/console.h:389:16>>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:800:3, col:61>",
                "kind": "assignment",
                "variable": "v7",
                "unqualified_variable": "v7",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "initial_pose_y"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:801:3, line:804:5 <Spelling=/ros_ws/src/rosconsole/include/ros/console.h:389:16>>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:805:3, col:61>",
                "kind": "assignment",
                "variable": "v8",
                "unqualified_variable": "v8",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "initial_pose_a"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:806:3, line:809:5 <Spelling=/ros_ws/src/rosconsole/include/ros/console.h:389:16>>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:810:3, col:60>",
                "kind": "assignment",
                "variable": "v9",
                "unqualified_variable": "v9",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "initial_cov_xx"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:811:3, line:814:5 <Spelling=/ros_ws/src/rosconsole/include/ros/console.h:389:16>>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:815:3, col:60>",
                "kind": "assignment",
                "variable": "v10",
                "unqualified_variable": "v10",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "initial_cov_yy"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:816:3, line:819:5 <Spelling=/ros_ws/src/rosconsole/include/ros/console.h:389:16>>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:820:3, col:60>",
                "kind": "assignment",
                "variable": "v11",
                "unqualified_variable": "v11",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "initial_cov_aa"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:821:3, line:824:5 <Spelling=/ros_ws/src/rosconsole/include/ros/console.h:389:16>>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              }
            ]
          }
        },
        {
          "name": "AmclNode::globalLocalizationCallback",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1092:3, col:14>",
                "kind": "assignment",
                "variable": "AmclNode::pf_init_",
                "unqualified_variable": "pf_init_",
                "value": {
                  "kind": "bool-literal",
                  "literal": false
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::map_",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    },
                    "rhs": {
                      "kind": "null-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1092:3, col:14>",
                "kind": "assignment",
                "variable": "AmclNode::pf_init_",
                "unqualified_variable": "pf_init_",
                "value": {
                  "kind": "bool-literal",
                  "literal": false
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::map_",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    },
                    "rhs": {
                      "kind": "null-expr"
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "name": "AmclNode::runFromBag",
          "parameters": [
            {
              "index": 1,
              "name": "trigger_global_localization",
              "type": "bool"
            },
            {
              "index": 0,
              "name": "in_bag_fn",
              "type": "string"
            }
          ],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:678:30, col:88>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "base_scan"
                  }
                },
                "format": "sensor_msgs/LaserScan",
                "source_location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:678:30, col:88>"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:679:27, col:72>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/tf"
                  }
                },
                "format": "tf2_msgs/TFMessage",
                "source_location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:679:27, col:72>"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:704:5, col:69>",
                "kind": "call",
                "callee": "AmclNode::globalLocalizationCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "variable-reference",
                  "qualified_name": "trigger_global_localization",
                  "type": "bool",
                  "initial-value": {
                    "kind": "bool-literal",
                    "literal": false
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:707:3 <Spelling=<scratch space>:130:1>, /ros_ws/src/navigation/amcl/src/amcl_node.cpp:707:3 <Spelling=/usr/include/boost/foreach.hpp:1107:122>>",
                "kind": "assignment",
                "variable": "_foreach_continue707",
                "unqualified_variable": "_foreach_continue707",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "unknown"
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "unknown"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_foreach_continue707",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": true
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "_foreach_continue707",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": true
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "unknown"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "variable-reference",
                      "qualified_name": "_foreach_continue707",
                      "type": "bool",
                      "initial-value": {
                        "kind": "bool-literal",
                        "literal": true
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:720:7, col:25>",
                "kind": "publish",
                "publisher": "tf_pub",
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "unknown"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "unknown"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_foreach_continue707",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": true
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "_foreach_continue707",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": true
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "unknown"
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "unknown"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "variable-reference",
                        "qualified_name": "_foreach_continue707",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": true
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "!=",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "tf_msg",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "null-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:731:7, col:28>",
                "kind": "publish",
                "publisher": "laser_pub",
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "unknown"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "unknown"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_foreach_continue707",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": true
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "_foreach_continue707",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": true
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "unknown"
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "variable-reference",
                          "qualified_name": "_foreach_continue707",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": true
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "!=",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "tf_msg",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "null-expr"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "!=",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "base_scan",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "null-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:678:30, col:88>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "base_scan"
                  }
                },
                "format": "sensor_msgs/LaserScan",
                "source_location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:678:30, col:88>"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:679:27, col:72>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "/tf"
                  }
                },
                "format": "tf2_msgs/TFMessage",
                "source_location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:679:27, col:72>"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:701:3, line:705:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:704:5, col:69>",
                      "kind": "call",
                      "callee": "AmclNode::globalLocalizationCallback",
                      "arguments": {},
                      "path_condition": {
                        "kind": "variable-reference",
                        "qualified_name": "trigger_global_localization",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:704:5, col:69>",
                      "kind": "call",
                      "callee": "AmclNode::globalLocalizationCallback",
                      "arguments": {},
                      "path_condition": {
                        "kind": "variable-reference",
                        "qualified_name": "trigger_global_localization",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:707:3 <Spelling=/usr/include/boost/foreach.hpp:1100:5>, /ros_ws/src/navigation/amcl/src/amcl_node.cpp:741:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:707:3 <Spelling=/usr/include/boost/foreach.hpp:1101:5>, /ros_ws/src/navigation/amcl/src/amcl_node.cpp:741:3>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": []
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:707:3 <Spelling=/usr/include/boost/foreach.hpp:1102:5>, /ros_ws/src/navigation/amcl/src/amcl_node.cpp:741:3>",
                            "kind": "if",
                            "trueBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": []
                            },
                            "falseBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": [
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:707:3 <Spelling=/usr/include/boost/foreach.hpp:1106:9>, /ros_ws/src/navigation/amcl/src/amcl_node.cpp:741:3>",
                                  "kind": "if",
                                  "trueBranchBody": {
                                    "source-location": "",
                                    "kind": "compound",
                                    "statements": []
                                  },
                                  "falseBranchBody": {
                                    "source-location": "",
                                    "kind": "compound",
                                    "statements": [
                                      {
                                        "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:707:3 <Spelling=<scratch space>:130:1>, /ros_ws/src/navigation/amcl/src/amcl_node.cpp:707:3 <Spelling=/usr/include/boost/foreach.hpp:1107:122>>",
                                        "kind": "assignment",
                                        "variable": "_foreach_continue707",
                                        "unqualified_variable": "_foreach_continue707",
                                        "value": {
                                          "kind": "bool-literal",
                                          "literal": true
                                        },
                                        "path_condition": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "&&",
                                                  "lhs": {
                                                    "kind": "binary-expr",
                                                    "operator": "&&",
                                                    "lhs": {
                                                      "kind": "negate-expr",
                                                      "subExpr": {
                                                        "kind": "unknown"
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "negate-expr",
                                                      "subExpr": {
                                                        "kind": "unknown"
                                                      }
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "negate-expr",
                                                    "subExpr": {
                                                      "kind": "unknown"
                                                    }
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_foreach_continue707",
                                                  "type": "bool",
                                                  "initial-value": {
                                                    "kind": "bool-literal",
                                                    "literal": true
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_foreach_continue707",
                                                  "type": "bool",
                                                  "initial-value": {
                                                    "kind": "bool-literal",
                                                    "literal": true
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "negate-expr",
                                                  "subExpr": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "unknown"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "variable-reference",
                                              "qualified_name": "_foreach_continue707",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": true
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:718:5, line:726:5>",
                                        "kind": "if",
                                        "trueBranchBody": {
                                          "source-location": "",
                                          "kind": "compound",
                                          "statements": [
                                            {
                                              "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:720:7, col:25>",
                                              "kind": "publish",
                                              "publisher": "tf_pub",
                                              "path_condition": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "&&",
                                                  "lhs": {
                                                    "kind": "binary-expr",
                                                    "operator": "&&",
                                                    "lhs": {
                                                      "kind": "binary-expr",
                                                      "operator": "&&",
                                                      "lhs": {
                                                        "kind": "binary-expr",
                                                        "operator": "&&",
                                                        "lhs": {
                                                          "kind": "binary-expr",
                                                          "operator": "&&",
                                                          "lhs": {
                                                            "kind": "binary-expr",
                                                            "operator": "&&",
                                                            "lhs": {
                                                              "kind": "negate-expr",
                                                              "subExpr": {
                                                                "kind": "unknown"
                                                              }
                                                            },
                                                            "rhs": {
                                                              "kind": "negate-expr",
                                                              "subExpr": {
                                                                "kind": "unknown"
                                                              }
                                                            }
                                                          },
                                                          "rhs": {
                                                            "kind": "negate-expr",
                                                            "subExpr": {
                                                              "kind": "unknown"
                                                            }
                                                          }
                                                        },
                                                        "rhs": {
                                                          "kind": "variable-reference",
                                                          "qualified_name": "_foreach_continue707",
                                                          "type": "bool",
                                                          "initial-value": {
                                                            "kind": "bool-literal",
                                                            "literal": true
                                                          }
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "binary-expr",
                                                        "operator": "&&",
                                                        "lhs": {
                                                          "kind": "variable-reference",
                                                          "qualified_name": "_foreach_continue707",
                                                          "type": "bool",
                                                          "initial-value": {
                                                            "kind": "bool-literal",
                                                            "literal": true
                                                          }
                                                        },
                                                        "rhs": {
                                                          "kind": "negate-expr",
                                                          "subExpr": {
                                                            "kind": "unknown"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "negate-expr",
                                                      "subExpr": {
                                                        "kind": "unknown"
                                                      }
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "negate-expr",
                                                    "subExpr": {
                                                      "kind": "variable-reference",
                                                      "qualified_name": "_foreach_continue707",
                                                      "type": "bool",
                                                      "initial-value": {
                                                        "kind": "bool-literal",
                                                        "literal": true
                                                      }
                                                    }
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "!=",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "tf_msg",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "unknown"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "null-expr"
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:720:7, col:25>",
                                              "kind": "publish",
                                              "publisher": "tf_pub",
                                              "path_condition": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "&&",
                                                  "lhs": {
                                                    "kind": "binary-expr",
                                                    "operator": "&&",
                                                    "lhs": {
                                                      "kind": "binary-expr",
                                                      "operator": "&&",
                                                      "lhs": {
                                                        "kind": "binary-expr",
                                                        "operator": "&&",
                                                        "lhs": {
                                                          "kind": "binary-expr",
                                                          "operator": "&&",
                                                          "lhs": {
                                                            "kind": "binary-expr",
                                                            "operator": "&&",
                                                            "lhs": {
                                                              "kind": "negate-expr",
                                                              "subExpr": {
                                                                "kind": "unknown"
                                                              }
                                                            },
                                                            "rhs": {
                                                              "kind": "negate-expr",
                                                              "subExpr": {
                                                                "kind": "unknown"
                                                              }
                                                            }
                                                          },
                                                          "rhs": {
                                                            "kind": "negate-expr",
                                                            "subExpr": {
                                                              "kind": "unknown"
                                                            }
                                                          }
                                                        },
                                                        "rhs": {
                                                          "kind": "variable-reference",
                                                          "qualified_name": "_foreach_continue707",
                                                          "type": "bool",
                                                          "initial-value": {
                                                            "kind": "bool-literal",
                                                            "literal": true
                                                          }
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "binary-expr",
                                                        "operator": "&&",
                                                        "lhs": {
                                                          "kind": "variable-reference",
                                                          "qualified_name": "_foreach_continue707",
                                                          "type": "bool",
                                                          "initial-value": {
                                                            "kind": "bool-literal",
                                                            "literal": true
                                                          }
                                                        },
                                                        "rhs": {
                                                          "kind": "negate-expr",
                                                          "subExpr": {
                                                            "kind": "unknown"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "negate-expr",
                                                      "subExpr": {
                                                        "kind": "unknown"
                                                      }
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "negate-expr",
                                                    "subExpr": {
                                                      "kind": "variable-reference",
                                                      "qualified_name": "_foreach_continue707",
                                                      "type": "bool",
                                                      "initial-value": {
                                                        "kind": "bool-literal",
                                                        "literal": true
                                                      }
                                                    }
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "!=",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "tf_msg",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "unknown"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "null-expr"
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "falseBranchBody": {
                                          "source-location": "",
                                          "kind": "compound",
                                          "statements": []
                                        },
                                        "condition": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      },
                                      {
                                        "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:729:5, line:738:5>",
                                        "kind": "if",
                                        "trueBranchBody": {
                                          "source-location": "",
                                          "kind": "compound",
                                          "statements": [
                                            {
                                              "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:731:7, col:28>",
                                              "kind": "publish",
                                              "publisher": "laser_pub",
                                              "path_condition": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "&&",
                                                  "lhs": {
                                                    "kind": "binary-expr",
                                                    "operator": "&&",
                                                    "lhs": {
                                                      "kind": "binary-expr",
                                                      "operator": "&&",
                                                      "lhs": {
                                                        "kind": "binary-expr",
                                                        "operator": "&&",
                                                        "lhs": {
                                                          "kind": "binary-expr",
                                                          "operator": "&&",
                                                          "lhs": {
                                                            "kind": "binary-expr",
                                                            "operator": "&&",
                                                            "lhs": {
                                                              "kind": "binary-expr",
                                                              "operator": "&&",
                                                              "lhs": {
                                                                "kind": "negate-expr",
                                                                "subExpr": {
                                                                  "kind": "unknown"
                                                                }
                                                              },
                                                              "rhs": {
                                                                "kind": "negate-expr",
                                                                "subExpr": {
                                                                  "kind": "unknown"
                                                                }
                                                              }
                                                            },
                                                            "rhs": {
                                                              "kind": "negate-expr",
                                                              "subExpr": {
                                                                "kind": "unknown"
                                                              }
                                                            }
                                                          },
                                                          "rhs": {
                                                            "kind": "variable-reference",
                                                            "qualified_name": "_foreach_continue707",
                                                            "type": "bool",
                                                            "initial-value": {
                                                              "kind": "bool-literal",
                                                              "literal": true
                                                            }
                                                          }
                                                        },
                                                        "rhs": {
                                                          "kind": "binary-expr",
                                                          "operator": "&&",
                                                          "lhs": {
                                                            "kind": "variable-reference",
                                                            "qualified_name": "_foreach_continue707",
                                                            "type": "bool",
                                                            "initial-value": {
                                                              "kind": "bool-literal",
                                                              "literal": true
                                                            }
                                                          },
                                                          "rhs": {
                                                            "kind": "negate-expr",
                                                            "subExpr": {
                                                              "kind": "unknown"
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "negate-expr",
                                                        "subExpr": {
                                                          "kind": "unknown"
                                                        }
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "negate-expr",
                                                      "subExpr": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "_foreach_continue707",
                                                        "type": "bool",
                                                        "initial-value": {
                                                          "kind": "bool-literal",
                                                          "literal": true
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "negate-expr",
                                                    "subExpr": {
                                                      "kind": "binary-expr",
                                                      "operator": "!=",
                                                      "lhs": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "tf_msg",
                                                        "type": "unsupported",
                                                        "initial-value": {
                                                          "kind": "unknown"
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "null-expr"
                                                      }
                                                    }
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "!=",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "base_scan",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "unknown"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "null-expr"
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:731:7, col:28>",
                                              "kind": "publish",
                                              "publisher": "laser_pub",
                                              "path_condition": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "&&",
                                                  "lhs": {
                                                    "kind": "binary-expr",
                                                    "operator": "&&",
                                                    "lhs": {
                                                      "kind": "binary-expr",
                                                      "operator": "&&",
                                                      "lhs": {
                                                        "kind": "binary-expr",
                                                        "operator": "&&",
                                                        "lhs": {
                                                          "kind": "binary-expr",
                                                          "operator": "&&",
                                                          "lhs": {
                                                            "kind": "binary-expr",
                                                            "operator": "&&",
                                                            "lhs": {
                                                              "kind": "binary-expr",
                                                              "operator": "&&",
                                                              "lhs": {
                                                                "kind": "negate-expr",
                                                                "subExpr": {
                                                                  "kind": "unknown"
                                                                }
                                                              },
                                                              "rhs": {
                                                                "kind": "negate-expr",
                                                                "subExpr": {
                                                                  "kind": "unknown"
                                                                }
                                                              }
                                                            },
                                                            "rhs": {
                                                              "kind": "negate-expr",
                                                              "subExpr": {
                                                                "kind": "unknown"
                                                              }
                                                            }
                                                          },
                                                          "rhs": {
                                                            "kind": "variable-reference",
                                                            "qualified_name": "_foreach_continue707",
                                                            "type": "bool",
                                                            "initial-value": {
                                                              "kind": "bool-literal",
                                                              "literal": true
                                                            }
                                                          }
                                                        },
                                                        "rhs": {
                                                          "kind": "binary-expr",
                                                          "operator": "&&",
                                                          "lhs": {
                                                            "kind": "variable-reference",
                                                            "qualified_name": "_foreach_continue707",
                                                            "type": "bool",
                                                            "initial-value": {
                                                              "kind": "bool-literal",
                                                              "literal": true
                                                            }
                                                          },
                                                          "rhs": {
                                                            "kind": "negate-expr",
                                                            "subExpr": {
                                                              "kind": "unknown"
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "negate-expr",
                                                        "subExpr": {
                                                          "kind": "unknown"
                                                        }
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "negate-expr",
                                                      "subExpr": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "_foreach_continue707",
                                                        "type": "bool",
                                                        "initial-value": {
                                                          "kind": "bool-literal",
                                                          "literal": true
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "negate-expr",
                                                    "subExpr": {
                                                      "kind": "binary-expr",
                                                      "operator": "!=",
                                                      "lhs": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "tf_msg",
                                                        "type": "unsupported",
                                                        "initial-value": {
                                                          "kind": "unknown"
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "null-expr"
                                                      }
                                                    }
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "!=",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "base_scan",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "unknown"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "null-expr"
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "falseBranchBody": {
                                          "source-location": "",
                                          "kind": "compound",
                                          "statements": []
                                        },
                                        "condition": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      },
                                      {
                                        "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:707:3 <Spelling=<scratch space>:130:1>, /ros_ws/src/navigation/amcl/src/amcl_node.cpp:707:3 <Spelling=/usr/include/boost/foreach.hpp:1107:122>>",
                                        "kind": "assignment",
                                        "variable": "_foreach_continue707",
                                        "unqualified_variable": "_foreach_continue707",
                                        "value": {
                                          "kind": "bool-literal",
                                          "literal": true
                                        },
                                        "path_condition": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "&&",
                                                  "lhs": {
                                                    "kind": "binary-expr",
                                                    "operator": "&&",
                                                    "lhs": {
                                                      "kind": "negate-expr",
                                                      "subExpr": {
                                                        "kind": "unknown"
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "negate-expr",
                                                      "subExpr": {
                                                        "kind": "unknown"
                                                      }
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "negate-expr",
                                                    "subExpr": {
                                                      "kind": "unknown"
                                                    }
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_foreach_continue707",
                                                  "type": "bool",
                                                  "initial-value": {
                                                    "kind": "bool-literal",
                                                    "literal": true
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "_foreach_continue707",
                                                  "type": "bool",
                                                  "initial-value": {
                                                    "kind": "bool-literal",
                                                    "literal": true
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "negate-expr",
                                                  "subExpr": {
                                                    "kind": "unknown"
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "unknown"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "variable-reference",
                                              "qualified_name": "_foreach_continue707",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": true
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                }
                              ]
                            },
                            "condition": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        ]
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  ]
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              }
            ]
          }
        },
        {
          "name": "AmclNode::AmclNode",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:361:3, col:59>",
                "kind": "assignment",
                "variable": "v0",
                "unqualified_variable": "v0",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "use_map_topic"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:362:3, col:61>",
                "kind": "assignment",
                "variable": "v1",
                "unqualified_variable": "v1",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "first_map_only"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:365:3, col:50>",
                "kind": "assignment",
                "variable": "v2",
                "unqualified_variable": "v2",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "gui_publish_rate"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:366:3, col:45>",
                "kind": "assignment",
                "variable": "AmclNode::gui_publish_period",
                "unqualified_variable": "gui_publish_period",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:367:3, col:47>",
                "kind": "assignment",
                "variable": "v3",
                "unqualified_variable": "v3",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "save_pose_rate"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:368:3, col:43>",
                "kind": "assignment",
                "variable": "AmclNode::save_pose_period",
                "unqualified_variable": "save_pose_period",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:370:3, col:62>",
                "kind": "assignment",
                "variable": "v4",
                "unqualified_variable": "v4",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "laser_min_range"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:371:3, col:62>",
                "kind": "assignment",
                "variable": "v5",
                "unqualified_variable": "v5",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "laser_max_range"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:372:3, col:54>",
                "kind": "assignment",
                "variable": "v6",
                "unqualified_variable": "v6",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "laser_max_beams"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:373:3, col:57>",
                "kind": "assignment",
                "variable": "v7",
                "unqualified_variable": "v7",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "min_particles"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:374:3, col:58>",
                "kind": "assignment",
                "variable": "v8",
                "unqualified_variable": "v8",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "max_particles"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:375:3, col:45>",
                "kind": "assignment",
                "variable": "v9",
                "unqualified_variable": "v9",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "kld_err"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:376:3, col:41>",
                "kind": "assignment",
                "variable": "v10",
                "unqualified_variable": "v10",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "kld_z"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:377:3, col:48>",
                "kind": "assignment",
                "variable": "v11",
                "unqualified_variable": "v11",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "odom_alpha1"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:378:3, col:48>",
                "kind": "assignment",
                "variable": "v12",
                "unqualified_variable": "v12",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "odom_alpha2"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:379:3, col:48>",
                "kind": "assignment",
                "variable": "v13",
                "unqualified_variable": "v13",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "odom_alpha3"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:380:3, col:48>",
                "kind": "assignment",
                "variable": "v14",
                "unqualified_variable": "v14",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "odom_alpha4"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:381:3, col:48>",
                "kind": "assignment",
                "variable": "v15",
                "unqualified_variable": "v15",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "odom_alpha5"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:383:3, col:55>",
                "kind": "assignment",
                "variable": "v16",
                "unqualified_variable": "v16",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "do_beamskip"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:384:3, col:67>",
                "kind": "assignment",
                "variable": "v17",
                "unqualified_variable": "v17",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "beam_skip_distance"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:385:3, col:69>",
                "kind": "assignment",
                "variable": "v18",
                "unqualified_variable": "v18",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "beam_skip_threshold"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:386:7, col:56>",
                "kind": "assignment",
                "variable": "v19",
                "unqualified_variable": "v19",
                "value": {
                  "source-location": "",
                  "kind": "checks-for-param",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "beam_skip_error_threshold_"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:388:5, col:79>",
                "kind": "assignment",
                "variable": "v20",
                "unqualified_variable": "v20",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "beam_skip_error_threshold_"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:392:5, col:83>",
                "kind": "assignment",
                "variable": "v21",
                "unqualified_variable": "v21",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "beam_skip_error_threshold"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:395:3, col:48>",
                "kind": "assignment",
                "variable": "v22",
                "unqualified_variable": "v22",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "laser_z_hit"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:396:3, col:51>",
                "kind": "assignment",
                "variable": "v23",
                "unqualified_variable": "v23",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "laser_z_short"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:397:3, col:48>",
                "kind": "assignment",
                "variable": "v24",
                "unqualified_variable": "v24",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "laser_z_max"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:398:3, col:50>",
                "kind": "assignment",
                "variable": "v25",
                "unqualified_variable": "v25",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "laser_z_rand"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:399:3, col:55>",
                "kind": "assignment",
                "variable": "v26",
                "unqualified_variable": "v26",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "laser_sigma_hit"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:400:3, col:61>",
                "kind": "assignment",
                "variable": "v27",
                "unqualified_variable": "v27",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "laser_lambda_short"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:401:3, col:81>",
                "kind": "assignment",
                "variable": "v28",
                "unqualified_variable": "v28",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "laser_likelihood_max_dist"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:403:3, col:88>",
                "kind": "assignment",
                "variable": "v29",
                "unqualified_variable": "v29",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "laser_model_type"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:405:5, col:25>",
                "kind": "assignment",
                "variable": "AmclNode::laser_model_type_",
                "unqualified_variable": "laser_model_type_",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "amcl::LASER_MODEL_BEAM",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 0
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 0
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "==",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "tmp_model_type",
                    "type": "string",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "beam"
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:407:5, col:25>",
                "kind": "assignment",
                "variable": "AmclNode::laser_model_type_",
                "unqualified_variable": "laser_model_type_",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "amcl::LASER_MODEL_LIKELIHOOD_FIELD",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 1
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 1
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "tmp_model_type",
                        "type": "string",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "string-literal",
                        "literal": "beam"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "tmp_model_type",
                      "type": "string",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "likelihood_field"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:409:5, col:25>",
                "kind": "assignment",
                "variable": "AmclNode::laser_model_type_",
                "unqualified_variable": "laser_model_type_",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "amcl::LASER_MODEL_LIKELIHOOD_FIELD_PROB",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 2
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 2
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "tmp_model_type",
                          "type": "string",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "beam"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "tmp_model_type",
                          "type": "string",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "likelihood_field"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "tmp_model_type",
                      "type": "string",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "likelihood_field_prob"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:415:5, col:25>",
                "kind": "assignment",
                "variable": "AmclNode::laser_model_type_",
                "unqualified_variable": "laser_model_type_",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "amcl::LASER_MODEL_LIKELIHOOD_FIELD",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 1
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 1
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "tmp_model_type",
                          "type": "string",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "beam"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "tmp_model_type",
                          "type": "string",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "likelihood_field"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "tmp_model_type",
                        "type": "string",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "string-literal",
                        "literal": "likelihood_field_prob"
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:418:3, col:75>",
                "kind": "assignment",
                "variable": "v30",
                "unqualified_variable": "v30",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "odom_model_type"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:420:5, col:24>",
                "kind": "assignment",
                "variable": "AmclNode::odom_model_type_",
                "unqualified_variable": "odom_model_type_",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "amcl::ODOM_MODEL_DIFF",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 0
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 0
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "==",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "tmp_model_type",
                    "type": "string",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "diff"
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:422:5, col:24>",
                "kind": "assignment",
                "variable": "AmclNode::odom_model_type_",
                "unqualified_variable": "odom_model_type_",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "amcl::ODOM_MODEL_OMNI",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 1
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 1
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "tmp_model_type",
                        "type": "string",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "string-literal",
                        "literal": "diff"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "tmp_model_type",
                      "type": "string",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "omni"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:424:5, col:24>",
                "kind": "assignment",
                "variable": "AmclNode::odom_model_type_",
                "unqualified_variable": "odom_model_type_",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "amcl::ODOM_MODEL_DIFF_CORRECTED",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 2
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 2
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "tmp_model_type",
                          "type": "string",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "diff"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "tmp_model_type",
                          "type": "string",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "omni"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "tmp_model_type",
                      "type": "string",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "diff-corrected"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:426:5, col:24>",
                "kind": "assignment",
                "variable": "AmclNode::odom_model_type_",
                "unqualified_variable": "odom_model_type_",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "amcl::ODOM_MODEL_OMNI_CORRECTED",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 3
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 3
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "tmp_model_type",
                            "type": "string",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "string-literal",
                            "literal": "diff"
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "tmp_model_type",
                            "type": "string",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "string-literal",
                            "literal": "omni"
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "tmp_model_type",
                          "type": "string",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "diff-corrected"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "tmp_model_type",
                      "type": "string",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "omni-corrected"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:431:5, col:24>",
                "kind": "assignment",
                "variable": "AmclNode::odom_model_type_",
                "unqualified_variable": "odom_model_type_",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "amcl::ODOM_MODEL_DIFF",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 0
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 0
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "tmp_model_type",
                            "type": "string",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "string-literal",
                            "literal": "diff"
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "tmp_model_type",
                            "type": "string",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "string-literal",
                            "literal": "omni"
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "tmp_model_type",
                          "type": "string",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "diff-corrected"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "tmp_model_type",
                        "type": "string",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "string-literal",
                        "literal": "omni-corrected"
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:434:3, col:51>",
                "kind": "assignment",
                "variable": "v31",
                "unqualified_variable": "v31",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "update_min_d"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:435:3, col:56>",
                "kind": "assignment",
                "variable": "v32",
                "unqualified_variable": "v32",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "update_min_a"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:436:3, col:73>",
                "kind": "assignment",
                "variable": "v33",
                "unqualified_variable": "v33",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "odom_frame_id"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:437:3, col:78>",
                "kind": "assignment",
                "variable": "v34",
                "unqualified_variable": "v34",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "base_frame_id"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:438:3, col:76>",
                "kind": "assignment",
                "variable": "v35",
                "unqualified_variable": "v35",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "global_frame_id"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:439:3, col:63>",
                "kind": "assignment",
                "variable": "v36",
                "unqualified_variable": "v36",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "resample_interval"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:440:3, col:73>",
                "kind": "assignment",
                "variable": "v37",
                "unqualified_variable": "v37",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "selective_resampling"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:442:3, col:56>",
                "kind": "assignment",
                "variable": "v38",
                "unqualified_variable": "v38",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "transform_tolerance"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:443:3, col:62>",
                "kind": "assignment",
                "variable": "v39",
                "unqualified_variable": "v39",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "recovery_alpha_slow"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:444:3, col:60>",
                "kind": "assignment",
                "variable": "v40",
                "unqualified_variable": "v40",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "recovery_alpha_fast"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:445:3, col:56>",
                "kind": "assignment",
                "variable": "v41",
                "unqualified_variable": "v41",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "tf_broadcast"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:448:3, col:63>",
                "kind": "assignment",
                "variable": "v42",
                "unqualified_variable": "v42",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "std_warn_level_x"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:449:3, col:63>",
                "kind": "assignment",
                "variable": "v43",
                "unqualified_variable": "v43",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "std_warn_level_y"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:450:3, col:67>",
                "kind": "assignment",
                "variable": "v44",
                "unqualified_variable": "v44",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "std_warn_level_yaw"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:456:5, col:63>",
                "kind": "assignment",
                "variable": "v45",
                "unqualified_variable": "v45",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "bag_scan_period"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:460:3, col:45>",
                "kind": "assignment",
                "variable": "AmclNode::odom_frame_id_",
                "unqualified_variable": "odom_frame_id_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:461:3, col:45>",
                "kind": "assignment",
                "variable": "AmclNode::base_frame_id_",
                "unqualified_variable": "base_frame_id_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:462:3, col:49>",
                "kind": "assignment",
                "variable": "AmclNode::global_frame_id_",
                "unqualified_variable": "global_frame_id_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:464:3, col:24>",
                "kind": "call",
                "callee": "AmclNode::updatePoseFromServer",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:471:3, col:91>",
                "kind": "assignment",
                "variable": "AmclNode::pose_pub_",
                "unqualified_variable": "pose_pub_",
                "value": {
                  "kind": "string-literal",
                  "literal": "amcl_pose"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:471:15, col:91>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "amcl_pose"
                  }
                },
                "format": "geometry_msgs/PoseWithCovarianceStamped",
                "source_location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:471:15, col:91>"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:472:3, col:88>",
                "kind": "assignment",
                "variable": "AmclNode::particlecloud_pub_",
                "unqualified_variable": "particlecloud_pub_",
                "value": {
                  "kind": "string-literal",
                  "literal": "particlecloud"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:472:24, col:88>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "particlecloud"
                  }
                },
                "format": "geometry_msgs/PoseArray",
                "source_location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:472:24, col:88>"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:473:3, line:475:46>",
                "kind": "assignment",
                "variable": "AmclNode::global_loc_srv_",
                "unqualified_variable": "global_loc_srv_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:473:21, line:475:46>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "global_localization"
                  }
                },
                "format": "std_srvs/Empty",
                "callback-name": "AmclNode::globalLocalizationCallback"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:473:21, line:475:46>",
                "kind": "call",
                "callee": "AmclNode::globalLocalizationCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:476:3, col:112>",
                "kind": "assignment",
                "variable": "AmclNode::nomotion_update_srv_",
                "unqualified_variable": "nomotion_update_srv_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:476:25, col:112>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "request_nomotion_update"
                  }
                },
                "format": "std_srvs/Empty",
                "callback-name": "AmclNode::nomotionUpdateCallback"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:476:25, col:112>",
                "kind": "call",
                "callee": "AmclNode::nomotionUpdateCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:477:3, col:80>",
                "kind": "assignment",
                "variable": "AmclNode::set_map_srv_",
                "unqualified_variable": "set_map_srv_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:477:17, col:80>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "set_map"
                  }
                },
                "format": "nav_msgs/SetMap",
                "callback-name": "AmclNode::setMapCallback"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:477:17, col:80>",
                "kind": "call",
                "callee": "AmclNode::setMapCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:479:3, col:98>",
                "kind": "assignment",
                "variable": "AmclNode::laser_scan_sub_",
                "unqualified_variable": "laser_scan_sub_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:479:25, col:98>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "scan"
                  }
                },
                "format": "sensor_msgs/LaserScan",
                "callback-name": "unknown"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:480:3, line:485:65>",
                "kind": "assignment",
                "variable": "AmclNode::laser_scan_filter_",
                "unqualified_variable": "laser_scan_filter_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:486:3, line:487:61>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "unknown"
                },
                "format": "boost/_bi::bind_t",
                "callback-name": "AmclNode::laserReceived"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:486:3, line:487:61>",
                "kind": "call",
                "callee": "AmclNode::laserReceived",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:488:3, col:91>",
                "kind": "assignment",
                "variable": "AmclNode::initial_pose_sub_",
                "unqualified_variable": "initial_pose_sub_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:488:23, col:91>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "initialpose"
                  }
                },
                "format": "geometry_msgs/PoseWithCovarianceStamped",
                "callback-name": "AmclNode::initialPoseReceived"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:488:23, col:91>",
                "kind": "call",
                "callee": "AmclNode::initialPoseReceived",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:491:5, col:68>",
                "kind": "assignment",
                "variable": "AmclNode::map_sub_",
                "unqualified_variable": "map_sub_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "member-var-ref",
                  "qualified_name": "AmclNode::use_map_topic_",
                  "type": "bool",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "this-expr"
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:491:16, col:68>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "map"
                  }
                },
                "format": "nav_msgs/OccupancyGrid",
                "callback-name": "AmclNode::mapReceived"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:491:16, col:68>",
                "kind": "call",
                "callee": "AmclNode::mapReceived",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:494:5, col:16>",
                "kind": "call",
                "callee": "AmclNode::requestMap",
                "arguments": {},
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::use_map_topic_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:496:3, col:20>",
                "kind": "assignment",
                "variable": "AmclNode::m_force_update",
                "unqualified_variable": "m_force_update",
                "value": {
                  "kind": "bool-literal",
                  "literal": false
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:498:3, col:81>",
                "kind": "assignment",
                "variable": "AmclNode::dsrv_",
                "unqualified_variable": "dsrv_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:503:3, col:45>",
                "kind": "assignment",
                "variable": "AmclNode::laser_check_interval_",
                "unqualified_variable": "laser_check_interval_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:504:3, line:505:92>",
                "kind": "assignment",
                "variable": "AmclNode::check_laser_timer_",
                "unqualified_variable": "check_laser_timer_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:504:24, line:505:92>",
                "kind": "createtimer",
                "rate": {
                  "kind": "unknown"
                },
                "callback-name": "AmclNode::checkLaserReceived"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:504:24, line:505:92>",
                "kind": "call",
                "callee": "AmclNode::checkLaserReceived",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:361:3, col:59>",
                "kind": "assignment",
                "variable": "v46",
                "unqualified_variable": "v46",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "use_map_topic"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:362:3, col:61>",
                "kind": "assignment",
                "variable": "v47",
                "unqualified_variable": "v47",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "first_map_only"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:365:3, col:50>",
                "kind": "assignment",
                "variable": "v48",
                "unqualified_variable": "v48",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "gui_publish_rate"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:366:3, col:45>",
                "kind": "assignment",
                "variable": "AmclNode::gui_publish_period",
                "unqualified_variable": "gui_publish_period",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:367:3, col:47>",
                "kind": "assignment",
                "variable": "v49",
                "unqualified_variable": "v49",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "save_pose_rate"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:368:3, col:43>",
                "kind": "assignment",
                "variable": "AmclNode::save_pose_period",
                "unqualified_variable": "save_pose_period",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:370:3, col:62>",
                "kind": "assignment",
                "variable": "v50",
                "unqualified_variable": "v50",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "laser_min_range"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:371:3, col:62>",
                "kind": "assignment",
                "variable": "v51",
                "unqualified_variable": "v51",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "laser_max_range"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:372:3, col:54>",
                "kind": "assignment",
                "variable": "v52",
                "unqualified_variable": "v52",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "laser_max_beams"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:373:3, col:57>",
                "kind": "assignment",
                "variable": "v53",
                "unqualified_variable": "v53",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "min_particles"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:374:3, col:58>",
                "kind": "assignment",
                "variable": "v54",
                "unqualified_variable": "v54",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "max_particles"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:375:3, col:45>",
                "kind": "assignment",
                "variable": "v55",
                "unqualified_variable": "v55",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "kld_err"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:376:3, col:41>",
                "kind": "assignment",
                "variable": "v56",
                "unqualified_variable": "v56",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "kld_z"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:377:3, col:48>",
                "kind": "assignment",
                "variable": "v57",
                "unqualified_variable": "v57",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "odom_alpha1"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:378:3, col:48>",
                "kind": "assignment",
                "variable": "v58",
                "unqualified_variable": "v58",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "odom_alpha2"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:379:3, col:48>",
                "kind": "assignment",
                "variable": "v59",
                "unqualified_variable": "v59",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "odom_alpha3"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:380:3, col:48>",
                "kind": "assignment",
                "variable": "v60",
                "unqualified_variable": "v60",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "odom_alpha4"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:381:3, col:48>",
                "kind": "assignment",
                "variable": "v61",
                "unqualified_variable": "v61",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "odom_alpha5"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:383:3, col:55>",
                "kind": "assignment",
                "variable": "v62",
                "unqualified_variable": "v62",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "do_beamskip"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:384:3, col:67>",
                "kind": "assignment",
                "variable": "v63",
                "unqualified_variable": "v63",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "beam_skip_distance"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:385:3, col:69>",
                "kind": "assignment",
                "variable": "v64",
                "unqualified_variable": "v64",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "beam_skip_threshold"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:386:3, line:393:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:388:5, col:79>",
                      "kind": "assignment",
                      "variable": "v65",
                      "unqualified_variable": "v65",
                      "value": {
                        "source-location": "",
                        "kind": "reads-param-with-default",
                        "name": {
                          "kind": "concatenate",
                          "lhs": {
                            "kind": "node-handle",
                            "namespace": {
                              "kind": "string-literal",
                              "literal": "~"
                            }
                          },
                          "rhs": {
                            "kind": "string-literal",
                            "literal": "beam_skip_error_threshold_"
                          }
                        },
                        "default": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "bool-literal",
                        "literal": true
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:388:5, col:79>",
                      "kind": "assignment",
                      "variable": "v66",
                      "unqualified_variable": "v66",
                      "value": {
                        "source-location": "",
                        "kind": "reads-param-with-default",
                        "name": {
                          "kind": "concatenate",
                          "lhs": {
                            "kind": "node-handle",
                            "namespace": {
                              "kind": "string-literal",
                              "literal": "~"
                            }
                          },
                          "rhs": {
                            "kind": "string-literal",
                            "literal": "beam_skip_error_threshold_"
                          }
                        },
                        "default": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "bool-literal",
                        "literal": true
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:392:5, col:83>",
                      "kind": "assignment",
                      "variable": "v67",
                      "unqualified_variable": "v67",
                      "value": {
                        "source-location": "",
                        "kind": "reads-param-with-default",
                        "name": {
                          "kind": "concatenate",
                          "lhs": {
                            "kind": "node-handle",
                            "namespace": {
                              "kind": "string-literal",
                              "literal": "~"
                            }
                          },
                          "rhs": {
                            "kind": "string-literal",
                            "literal": "beam_skip_error_threshold"
                          }
                        },
                        "default": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "bool-literal",
                        "literal": true
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:392:5, col:83>",
                      "kind": "assignment",
                      "variable": "v68",
                      "unqualified_variable": "v68",
                      "value": {
                        "source-location": "",
                        "kind": "reads-param-with-default",
                        "name": {
                          "kind": "concatenate",
                          "lhs": {
                            "kind": "node-handle",
                            "namespace": {
                              "kind": "string-literal",
                              "literal": "~"
                            }
                          },
                          "rhs": {
                            "kind": "string-literal",
                            "literal": "beam_skip_error_threshold"
                          }
                        },
                        "default": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "bool-literal",
                        "literal": true
                      }
                    }
                  ]
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:395:3, col:48>",
                "kind": "assignment",
                "variable": "v69",
                "unqualified_variable": "v69",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "laser_z_hit"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:396:3, col:51>",
                "kind": "assignment",
                "variable": "v70",
                "unqualified_variable": "v70",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "laser_z_short"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:397:3, col:48>",
                "kind": "assignment",
                "variable": "v71",
                "unqualified_variable": "v71",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "laser_z_max"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:398:3, col:50>",
                "kind": "assignment",
                "variable": "v72",
                "unqualified_variable": "v72",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "laser_z_rand"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:399:3, col:55>",
                "kind": "assignment",
                "variable": "v73",
                "unqualified_variable": "v73",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "laser_sigma_hit"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:400:3, col:61>",
                "kind": "assignment",
                "variable": "v74",
                "unqualified_variable": "v74",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "laser_lambda_short"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:401:3, col:81>",
                "kind": "assignment",
                "variable": "v75",
                "unqualified_variable": "v75",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "laser_likelihood_max_dist"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:403:3, col:88>",
                "kind": "assignment",
                "variable": "v76",
                "unqualified_variable": "v76",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "laser_model_type"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:404:3, line:416:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:405:5, col:25>",
                      "kind": "assignment",
                      "variable": "AmclNode::laser_model_type_",
                      "unqualified_variable": "laser_model_type_",
                      "value": {
                        "kind": "enum-ref",
                        "qualified_name": "amcl::LASER_MODEL_BEAM",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        },
                        "value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "tmp_model_type",
                          "type": "string",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "beam"
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:405:5, col:25>",
                      "kind": "assignment",
                      "variable": "AmclNode::laser_model_type_",
                      "unqualified_variable": "laser_model_type_",
                      "value": {
                        "kind": "enum-ref",
                        "qualified_name": "amcl::LASER_MODEL_BEAM",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        },
                        "value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "tmp_model_type",
                          "type": "string",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "beam"
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:406:8, line:416:3>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:407:5, col:25>",
                            "kind": "assignment",
                            "variable": "AmclNode::laser_model_type_",
                            "unqualified_variable": "laser_model_type_",
                            "value": {
                              "kind": "enum-ref",
                              "qualified_name": "amcl::LASER_MODEL_LIKELIHOOD_FIELD",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              },
                              "value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "tmp_model_type",
                                    "type": "string",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "string-literal",
                                    "literal": "beam"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "tmp_model_type",
                                  "type": "string",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "string-literal",
                                  "literal": "likelihood_field"
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:407:5, col:25>",
                            "kind": "assignment",
                            "variable": "AmclNode::laser_model_type_",
                            "unqualified_variable": "laser_model_type_",
                            "value": {
                              "kind": "enum-ref",
                              "qualified_name": "amcl::LASER_MODEL_LIKELIHOOD_FIELD",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              },
                              "value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "tmp_model_type",
                                    "type": "string",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "string-literal",
                                    "literal": "beam"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "tmp_model_type",
                                  "type": "string",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "string-literal",
                                  "literal": "likelihood_field"
                                }
                              }
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:408:8, line:416:3>",
                            "kind": "if",
                            "trueBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": [
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:409:5, col:25>",
                                  "kind": "assignment",
                                  "variable": "AmclNode::laser_model_type_",
                                  "unqualified_variable": "laser_model_type_",
                                  "value": {
                                    "kind": "enum-ref",
                                    "qualified_name": "amcl::LASER_MODEL_LIKELIHOOD_FIELD_PROB",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 2
                                    },
                                    "value": {
                                      "kind": "int-literal",
                                      "literal": 2
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "tmp_model_type",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "beam"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "tmp_model_type",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "likelihood_field"
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "tmp_model_type",
                                        "type": "string",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "string-literal",
                                        "literal": "likelihood_field_prob"
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:409:5, col:25>",
                                  "kind": "assignment",
                                  "variable": "AmclNode::laser_model_type_",
                                  "unqualified_variable": "laser_model_type_",
                                  "value": {
                                    "kind": "enum-ref",
                                    "qualified_name": "amcl::LASER_MODEL_LIKELIHOOD_FIELD_PROB",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 2
                                    },
                                    "value": {
                                      "kind": "int-literal",
                                      "literal": 2
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "tmp_model_type",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "beam"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "tmp_model_type",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "likelihood_field"
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "tmp_model_type",
                                        "type": "string",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "string-literal",
                                        "literal": "likelihood_field_prob"
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "falseBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": [
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:415:5, col:25>",
                                  "kind": "assignment",
                                  "variable": "AmclNode::laser_model_type_",
                                  "unqualified_variable": "laser_model_type_",
                                  "value": {
                                    "kind": "enum-ref",
                                    "qualified_name": "amcl::LASER_MODEL_LIKELIHOOD_FIELD",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    },
                                    "value": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "tmp_model_type",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "beam"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "tmp_model_type",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "likelihood_field"
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "==",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "tmp_model_type",
                                          "type": "string",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "string-literal",
                                          "literal": "likelihood_field_prob"
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:415:5, col:25>",
                                  "kind": "assignment",
                                  "variable": "AmclNode::laser_model_type_",
                                  "unqualified_variable": "laser_model_type_",
                                  "value": {
                                    "kind": "enum-ref",
                                    "qualified_name": "amcl::LASER_MODEL_LIKELIHOOD_FIELD",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    },
                                    "value": {
                                      "kind": "int-literal",
                                      "literal": 1
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "tmp_model_type",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "beam"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "tmp_model_type",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "likelihood_field"
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "==",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "tmp_model_type",
                                          "type": "string",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "string-literal",
                                          "literal": "likelihood_field_prob"
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "condition": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        ]
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  ]
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:418:3, col:75>",
                "kind": "assignment",
                "variable": "v77",
                "unqualified_variable": "v77",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "odom_model_type"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:419:3, line:432:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:420:5, col:24>",
                      "kind": "assignment",
                      "variable": "AmclNode::odom_model_type_",
                      "unqualified_variable": "odom_model_type_",
                      "value": {
                        "kind": "enum-ref",
                        "qualified_name": "amcl::ODOM_MODEL_DIFF",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        },
                        "value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "tmp_model_type",
                          "type": "string",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "diff"
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:420:5, col:24>",
                      "kind": "assignment",
                      "variable": "AmclNode::odom_model_type_",
                      "unqualified_variable": "odom_model_type_",
                      "value": {
                        "kind": "enum-ref",
                        "qualified_name": "amcl::ODOM_MODEL_DIFF",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        },
                        "value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "tmp_model_type",
                          "type": "string",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "diff"
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:421:8, line:432:3>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:422:5, col:24>",
                            "kind": "assignment",
                            "variable": "AmclNode::odom_model_type_",
                            "unqualified_variable": "odom_model_type_",
                            "value": {
                              "kind": "enum-ref",
                              "qualified_name": "amcl::ODOM_MODEL_OMNI",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              },
                              "value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "tmp_model_type",
                                    "type": "string",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "string-literal",
                                    "literal": "diff"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "tmp_model_type",
                                  "type": "string",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "string-literal",
                                  "literal": "omni"
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:422:5, col:24>",
                            "kind": "assignment",
                            "variable": "AmclNode::odom_model_type_",
                            "unqualified_variable": "odom_model_type_",
                            "value": {
                              "kind": "enum-ref",
                              "qualified_name": "amcl::ODOM_MODEL_OMNI",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              },
                              "value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "tmp_model_type",
                                    "type": "string",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "string-literal",
                                    "literal": "diff"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "tmp_model_type",
                                  "type": "string",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "string-literal",
                                  "literal": "omni"
                                }
                              }
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:423:8, line:432:3>",
                            "kind": "if",
                            "trueBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": [
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:424:5, col:24>",
                                  "kind": "assignment",
                                  "variable": "AmclNode::odom_model_type_",
                                  "unqualified_variable": "odom_model_type_",
                                  "value": {
                                    "kind": "enum-ref",
                                    "qualified_name": "amcl::ODOM_MODEL_DIFF_CORRECTED",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 2
                                    },
                                    "value": {
                                      "kind": "int-literal",
                                      "literal": 2
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "tmp_model_type",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "diff"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "tmp_model_type",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "omni"
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "tmp_model_type",
                                        "type": "string",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "string-literal",
                                        "literal": "diff-corrected"
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:424:5, col:24>",
                                  "kind": "assignment",
                                  "variable": "AmclNode::odom_model_type_",
                                  "unqualified_variable": "odom_model_type_",
                                  "value": {
                                    "kind": "enum-ref",
                                    "qualified_name": "amcl::ODOM_MODEL_DIFF_CORRECTED",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 2
                                    },
                                    "value": {
                                      "kind": "int-literal",
                                      "literal": 2
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "tmp_model_type",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "diff"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "tmp_model_type",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "omni"
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "tmp_model_type",
                                        "type": "string",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "string-literal",
                                        "literal": "diff-corrected"
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "falseBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": [
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:425:8, line:432:3>",
                                  "kind": "if",
                                  "trueBranchBody": {
                                    "source-location": "",
                                    "kind": "compound",
                                    "statements": [
                                      {
                                        "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:426:5, col:24>",
                                        "kind": "assignment",
                                        "variable": "AmclNode::odom_model_type_",
                                        "unqualified_variable": "odom_model_type_",
                                        "value": {
                                          "kind": "enum-ref",
                                          "qualified_name": "amcl::ODOM_MODEL_OMNI_CORRECTED",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "int-literal",
                                            "literal": 3
                                          },
                                          "value": {
                                            "kind": "int-literal",
                                            "literal": 3
                                          }
                                        },
                                        "path_condition": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "tmp_model_type",
                                                    "type": "string",
                                                    "initial-value": {
                                                      "kind": "unknown"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "string-literal",
                                                    "literal": "diff"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "tmp_model_type",
                                                    "type": "string",
                                                    "initial-value": {
                                                      "kind": "unknown"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "string-literal",
                                                    "literal": "omni"
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "tmp_model_type",
                                                  "type": "string",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "string-literal",
                                                  "literal": "diff-corrected"
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "tmp_model_type",
                                              "type": "string",
                                              "initial-value": {
                                                "kind": "unknown"
                                              }
                                            },
                                            "rhs": {
                                              "kind": "string-literal",
                                              "literal": "omni-corrected"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:426:5, col:24>",
                                        "kind": "assignment",
                                        "variable": "AmclNode::odom_model_type_",
                                        "unqualified_variable": "odom_model_type_",
                                        "value": {
                                          "kind": "enum-ref",
                                          "qualified_name": "amcl::ODOM_MODEL_OMNI_CORRECTED",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "int-literal",
                                            "literal": 3
                                          },
                                          "value": {
                                            "kind": "int-literal",
                                            "literal": 3
                                          }
                                        },
                                        "path_condition": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "tmp_model_type",
                                                    "type": "string",
                                                    "initial-value": {
                                                      "kind": "unknown"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "string-literal",
                                                    "literal": "diff"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "tmp_model_type",
                                                    "type": "string",
                                                    "initial-value": {
                                                      "kind": "unknown"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "string-literal",
                                                    "literal": "omni"
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "tmp_model_type",
                                                  "type": "string",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "string-literal",
                                                  "literal": "diff-corrected"
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "tmp_model_type",
                                              "type": "string",
                                              "initial-value": {
                                                "kind": "unknown"
                                              }
                                            },
                                            "rhs": {
                                              "kind": "string-literal",
                                              "literal": "omni-corrected"
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "falseBranchBody": {
                                    "source-location": "",
                                    "kind": "compound",
                                    "statements": [
                                      {
                                        "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:431:5, col:24>",
                                        "kind": "assignment",
                                        "variable": "AmclNode::odom_model_type_",
                                        "unqualified_variable": "odom_model_type_",
                                        "value": {
                                          "kind": "enum-ref",
                                          "qualified_name": "amcl::ODOM_MODEL_DIFF",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "int-literal",
                                            "literal": 0
                                          },
                                          "value": {
                                            "kind": "int-literal",
                                            "literal": 0
                                          }
                                        },
                                        "path_condition": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "tmp_model_type",
                                                    "type": "string",
                                                    "initial-value": {
                                                      "kind": "unknown"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "string-literal",
                                                    "literal": "diff"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "tmp_model_type",
                                                    "type": "string",
                                                    "initial-value": {
                                                      "kind": "unknown"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "string-literal",
                                                    "literal": "omni"
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "tmp_model_type",
                                                  "type": "string",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "string-literal",
                                                  "literal": "diff-corrected"
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "tmp_model_type",
                                                "type": "string",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              },
                                              "rhs": {
                                                "kind": "string-literal",
                                                "literal": "omni-corrected"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:431:5, col:24>",
                                        "kind": "assignment",
                                        "variable": "AmclNode::odom_model_type_",
                                        "unqualified_variable": "odom_model_type_",
                                        "value": {
                                          "kind": "enum-ref",
                                          "qualified_name": "amcl::ODOM_MODEL_DIFF",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "int-literal",
                                            "literal": 0
                                          },
                                          "value": {
                                            "kind": "int-literal",
                                            "literal": 0
                                          }
                                        },
                                        "path_condition": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "tmp_model_type",
                                                    "type": "string",
                                                    "initial-value": {
                                                      "kind": "unknown"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "string-literal",
                                                    "literal": "diff"
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "tmp_model_type",
                                                    "type": "string",
                                                    "initial-value": {
                                                      "kind": "unknown"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "string-literal",
                                                    "literal": "omni"
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "tmp_model_type",
                                                  "type": "string",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "string-literal",
                                                  "literal": "diff-corrected"
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "tmp_model_type",
                                                "type": "string",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              },
                                              "rhs": {
                                                "kind": "string-literal",
                                                "literal": "omni-corrected"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                }
                              ]
                            },
                            "condition": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        ]
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  ]
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:434:3, col:51>",
                "kind": "assignment",
                "variable": "v78",
                "unqualified_variable": "v78",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "update_min_d"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:435:3, col:56>",
                "kind": "assignment",
                "variable": "v79",
                "unqualified_variable": "v79",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "update_min_a"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:436:3, col:73>",
                "kind": "assignment",
                "variable": "v80",
                "unqualified_variable": "v80",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "odom_frame_id"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:437:3, col:78>",
                "kind": "assignment",
                "variable": "v81",
                "unqualified_variable": "v81",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "base_frame_id"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:438:3, col:76>",
                "kind": "assignment",
                "variable": "v82",
                "unqualified_variable": "v82",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "global_frame_id"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:439:3, col:63>",
                "kind": "assignment",
                "variable": "v83",
                "unqualified_variable": "v83",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "resample_interval"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:440:3, col:73>",
                "kind": "assignment",
                "variable": "v84",
                "unqualified_variable": "v84",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "selective_resampling"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:442:3, col:56>",
                "kind": "assignment",
                "variable": "v85",
                "unqualified_variable": "v85",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "transform_tolerance"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:443:3, col:62>",
                "kind": "assignment",
                "variable": "v86",
                "unqualified_variable": "v86",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "recovery_alpha_slow"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:444:3, col:60>",
                "kind": "assignment",
                "variable": "v87",
                "unqualified_variable": "v87",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "recovery_alpha_fast"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:445:3, col:56>",
                "kind": "assignment",
                "variable": "v88",
                "unqualified_variable": "v88",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "tf_broadcast"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:448:3, col:63>",
                "kind": "assignment",
                "variable": "v89",
                "unqualified_variable": "v89",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "std_warn_level_x"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:449:3, col:63>",
                "kind": "assignment",
                "variable": "v90",
                "unqualified_variable": "v90",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "std_warn_level_y"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:450:3, col:67>",
                "kind": "assignment",
                "variable": "v91",
                "unqualified_variable": "v91",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "std_warn_level_yaw"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:456:5, col:63>",
                "kind": "assignment",
                "variable": "v92",
                "unqualified_variable": "v92",
                "value": {
                  "source-location": "",
                  "kind": "reads-param-with-default",
                  "name": {
                    "kind": "concatenate",
                    "lhs": {
                      "kind": "node-handle",
                      "namespace": {
                        "kind": "string-literal",
                        "literal": "~"
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "bag_scan_period"
                    }
                  },
                  "default": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:460:3, col:45>",
                "kind": "assignment",
                "variable": "AmclNode::odom_frame_id_",
                "unqualified_variable": "odom_frame_id_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:461:3, col:45>",
                "kind": "assignment",
                "variable": "AmclNode::base_frame_id_",
                "unqualified_variable": "base_frame_id_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:462:3, col:49>",
                "kind": "assignment",
                "variable": "AmclNode::global_frame_id_",
                "unqualified_variable": "global_frame_id_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:464:3, col:24>",
                "kind": "call",
                "callee": "AmclNode::updatePoseFromServer",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:471:3, col:91>",
                "kind": "assignment",
                "variable": "AmclNode::pose_pub_",
                "unqualified_variable": "pose_pub_",
                "value": {
                  "kind": "string-literal",
                  "literal": "amcl_pose"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:471:15, col:91>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "amcl_pose"
                  }
                },
                "format": "geometry_msgs/PoseWithCovarianceStamped",
                "source_location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:471:15, col:91>"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:472:3, col:88>",
                "kind": "assignment",
                "variable": "AmclNode::particlecloud_pub_",
                "unqualified_variable": "particlecloud_pub_",
                "value": {
                  "kind": "string-literal",
                  "literal": "particlecloud"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:472:24, col:88>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "particlecloud"
                  }
                },
                "format": "geometry_msgs/PoseArray",
                "source_location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:472:24, col:88>"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:473:3, line:475:46>",
                "kind": "assignment",
                "variable": "AmclNode::global_loc_srv_",
                "unqualified_variable": "global_loc_srv_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:473:21, line:475:46>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "global_localization"
                  }
                },
                "format": "std_srvs/Empty",
                "callback-name": "AmclNode::globalLocalizationCallback"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:473:21, line:475:46>",
                "kind": "call",
                "callee": "AmclNode::globalLocalizationCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:476:3, col:112>",
                "kind": "assignment",
                "variable": "AmclNode::nomotion_update_srv_",
                "unqualified_variable": "nomotion_update_srv_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:476:25, col:112>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "request_nomotion_update"
                  }
                },
                "format": "std_srvs/Empty",
                "callback-name": "AmclNode::nomotionUpdateCallback"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:476:25, col:112>",
                "kind": "call",
                "callee": "AmclNode::nomotionUpdateCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:477:3, col:80>",
                "kind": "assignment",
                "variable": "AmclNode::set_map_srv_",
                "unqualified_variable": "set_map_srv_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:477:17, col:80>",
                "kind": "provides-service",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "set_map"
                  }
                },
                "format": "nav_msgs/SetMap",
                "callback-name": "AmclNode::setMapCallback"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:477:17, col:80>",
                "kind": "call",
                "callee": "AmclNode::setMapCallback",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:479:3, col:98>",
                "kind": "assignment",
                "variable": "AmclNode::laser_scan_sub_",
                "unqualified_variable": "laser_scan_sub_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:479:25, col:98>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "scan"
                  }
                },
                "format": "sensor_msgs/LaserScan",
                "callback-name": "unknown"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:480:3, line:485:65>",
                "kind": "assignment",
                "variable": "AmclNode::laser_scan_filter_",
                "unqualified_variable": "laser_scan_filter_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:486:3, line:487:61>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "unknown"
                },
                "format": "boost/_bi::bind_t",
                "callback-name": "AmclNode::laserReceived"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:486:3, line:487:61>",
                "kind": "call",
                "callee": "AmclNode::laserReceived",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:488:3, col:91>",
                "kind": "assignment",
                "variable": "AmclNode::initial_pose_sub_",
                "unqualified_variable": "initial_pose_sub_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:488:23, col:91>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "initialpose"
                  }
                },
                "format": "geometry_msgs/PoseWithCovarianceStamped",
                "callback-name": "AmclNode::initialPoseReceived"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:488:23, col:91>",
                "kind": "call",
                "callee": "AmclNode::initialPoseReceived",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:490:3, line:495:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:491:5, col:68>",
                      "kind": "assignment",
                      "variable": "AmclNode::map_sub_",
                      "unqualified_variable": "map_sub_",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "member-var-ref",
                        "qualified_name": "AmclNode::use_map_topic_",
                        "type": "bool",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:491:16, col:68>",
                      "kind": "subscribes-to",
                      "name": {
                        "kind": "concatenate",
                        "lhs": {
                          "kind": "node-handle",
                          "namespace": {
                            "kind": "string-literal",
                            "literal": ""
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "map"
                        }
                      },
                      "format": "nav_msgs/OccupancyGrid",
                      "callback-name": "AmclNode::mapReceived"
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:491:16, col:68>",
                      "kind": "call",
                      "callee": "AmclNode::mapReceived",
                      "arguments": {},
                      "path_condition": {
                        "kind": "bool-literal",
                        "literal": true
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:491:5, col:68>",
                      "kind": "assignment",
                      "variable": "AmclNode::map_sub_",
                      "unqualified_variable": "map_sub_",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "member-var-ref",
                        "qualified_name": "AmclNode::use_map_topic_",
                        "type": "bool",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:491:16, col:68>",
                      "kind": "subscribes-to",
                      "name": {
                        "kind": "concatenate",
                        "lhs": {
                          "kind": "node-handle",
                          "namespace": {
                            "kind": "string-literal",
                            "literal": ""
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "map"
                        }
                      },
                      "format": "nav_msgs/OccupancyGrid",
                      "callback-name": "AmclNode::mapReceived"
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:491:16, col:68>",
                      "kind": "call",
                      "callee": "AmclNode::mapReceived",
                      "arguments": {},
                      "path_condition": {
                        "kind": "bool-literal",
                        "literal": true
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:494:5, col:16>",
                      "kind": "call",
                      "callee": "AmclNode::requestMap",
                      "arguments": {},
                      "path_condition": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::use_map_topic_",
                          "type": "bool",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:494:5, col:16>",
                      "kind": "call",
                      "callee": "AmclNode::requestMap",
                      "arguments": {},
                      "path_condition": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::use_map_topic_",
                          "type": "bool",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    }
                  ]
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:496:3, col:20>",
                "kind": "assignment",
                "variable": "AmclNode::m_force_update",
                "unqualified_variable": "m_force_update",
                "value": {
                  "kind": "bool-literal",
                  "literal": false
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:498:3, col:81>",
                "kind": "assignment",
                "variable": "AmclNode::dsrv_",
                "unqualified_variable": "dsrv_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:503:3, col:45>",
                "kind": "assignment",
                "variable": "AmclNode::laser_check_interval_",
                "unqualified_variable": "laser_check_interval_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:504:3, line:505:92>",
                "kind": "assignment",
                "variable": "AmclNode::check_laser_timer_",
                "unqualified_variable": "check_laser_timer_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:504:24, line:505:92>",
                "kind": "createtimer",
                "rate": {
                  "kind": "unknown"
                },
                "callback-name": "AmclNode::checkLaserReceived"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:504:24, line:505:92>",
                "kind": "call",
                "callee": "AmclNode::checkLaserReceived",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        },
        {
          "name": "main",
          "parameters": [
            {
              "index": 0,
              "name": "argc",
              "type": "integer"
            }
          ],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:312:3, col:31>",
                "kind": "ros-init",
                "name": {
                  "kind": "string-literal",
                  "literal": "amcl"
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:319:27, col:36>",
                "kind": "call",
                "callee": "AmclNode::AmclNode",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:330:7, col:40>",
                "kind": "call",
                "callee": "AmclNode::runFromBag",
                "arguments": {
                  "in_bag_fn": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "argc",
                          "type": "integer",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 1
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": ">=",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "argc",
                          "type": "integer",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 3
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "--run-from-bag"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "argc",
                      "type": "integer",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "int-literal",
                      "literal": 3
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:334:7, col:46>",
                "kind": "call",
                "callee": "AmclNode::runFromBag",
                "arguments": {
                  "in_bag_fn": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "argc",
                            "type": "integer",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 1
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": ">=",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "argc",
                            "type": "integer",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "int-literal",
                            "literal": 3
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "string-literal",
                            "literal": "--run-from-bag"
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "argc",
                          "type": "integer",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 3
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "argc",
                        "type": "integer",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "int-literal",
                        "literal": 4
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "string-literal",
                        "literal": "--global-localization"
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:312:3, col:31>",
                "kind": "ros-init",
                "name": {
                  "kind": "string-literal",
                  "literal": "amcl"
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:319:27, col:36>",
                "kind": "call",
                "callee": "AmclNode::AmclNode",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:321:3, line:336:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:326:8, line:336:3>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:328:5, line:335:5>",
                            "kind": "if",
                            "trueBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": [
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:330:7, col:40>",
                                  "kind": "call",
                                  "callee": "AmclNode::runFromBag",
                                  "arguments": {
                                    "in_bag_fn": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "argc",
                                            "type": "integer",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "int-literal",
                                            "literal": 1
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": ">=",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "argc",
                                            "type": "integer",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "int-literal",
                                            "literal": 3
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "unknown"
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "--run-from-bag"
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "argc",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 3
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:330:7, col:40>",
                                  "kind": "call",
                                  "callee": "AmclNode::runFromBag",
                                  "arguments": {
                                    "in_bag_fn": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "argc",
                                            "type": "integer",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "int-literal",
                                            "literal": 1
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": ">=",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "argc",
                                            "type": "integer",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "int-literal",
                                            "literal": 3
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "unknown"
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "--run-from-bag"
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "argc",
                                        "type": "integer",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "int-literal",
                                        "literal": 3
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "falseBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": [
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:332:10, line:335:5>",
                                  "kind": "if",
                                  "trueBranchBody": {
                                    "source-location": "",
                                    "kind": "compound",
                                    "statements": [
                                      {
                                        "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:334:7, col:46>",
                                        "kind": "call",
                                        "callee": "AmclNode::runFromBag",
                                        "arguments": {
                                          "in_bag_fn": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "path_condition": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "argc",
                                                    "type": "integer",
                                                    "initial-value": {
                                                      "kind": "unknown"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "int-literal",
                                                    "literal": 1
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "binary-expr",
                                                  "operator": ">=",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "argc",
                                                    "type": "integer",
                                                    "initial-value": {
                                                      "kind": "unknown"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "int-literal",
                                                    "literal": 3
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "unknown"
                                                  },
                                                  "rhs": {
                                                    "kind": "string-literal",
                                                    "literal": "--run-from-bag"
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "argc",
                                                  "type": "integer",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "int-literal",
                                                  "literal": 3
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "argc",
                                                "type": "integer",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              },
                                              "rhs": {
                                                "kind": "int-literal",
                                                "literal": 4
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "unknown"
                                              },
                                              "rhs": {
                                                "kind": "string-literal",
                                                "literal": "--global-localization"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:334:7, col:46>",
                                        "kind": "call",
                                        "callee": "AmclNode::runFromBag",
                                        "arguments": {
                                          "in_bag_fn": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "path_condition": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "argc",
                                                    "type": "integer",
                                                    "initial-value": {
                                                      "kind": "unknown"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "int-literal",
                                                    "literal": 1
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "binary-expr",
                                                  "operator": ">=",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "argc",
                                                    "type": "integer",
                                                    "initial-value": {
                                                      "kind": "unknown"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "int-literal",
                                                    "literal": 3
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "unknown"
                                                  },
                                                  "rhs": {
                                                    "kind": "string-literal",
                                                    "literal": "--run-from-bag"
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "argc",
                                                  "type": "integer",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "int-literal",
                                                  "literal": 3
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "argc",
                                                "type": "integer",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              },
                                              "rhs": {
                                                "kind": "int-literal",
                                                "literal": 4
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "unknown"
                                              },
                                              "rhs": {
                                                "kind": "string-literal",
                                                "literal": "--global-localization"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "falseBranchBody": {
                                    "source-location": "",
                                    "kind": "compound",
                                    "statements": []
                                  },
                                  "condition": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                }
                              ]
                            },
                            "condition": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": []
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  ]
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              }
            ]
          }
        },
        {
          "name": "AmclNode::nomotionUpdateCallback",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1101:2, col:19>",
                "kind": "assignment",
                "variable": "AmclNode::m_force_update",
                "unqualified_variable": "m_force_update",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1101:2, col:19>",
                "kind": "assignment",
                "variable": "AmclNode::m_force_update",
                "unqualified_variable": "m_force_update",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        },
        {
          "name": "AmclNode::mapReceived",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:866:3, col:25>",
                "kind": "assignment",
                "variable": "AmclNode::first_map_received_",
                "unqualified_variable": "first_map_received_",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "||",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::first_map_only_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::first_map_only_",
                          "type": "bool",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::first_map_received_",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::first_map_only_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:866:3, col:25>",
                "kind": "assignment",
                "variable": "AmclNode::first_map_received_",
                "unqualified_variable": "first_map_received_",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "||",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::first_map_only_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::first_map_only_",
                          "type": "bool",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::first_map_received_",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::first_map_only_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "name": "AmclNode::requestMap",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:848:10, col:52>",
                "kind": "calls-service",
                "name": {
                  "kind": "string-literal",
                  "literal": "static_map"
                },
                "format": "todo/service"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:852:5, col:13>",
                "kind": "ratesleep",
                "rate": {
                  "kind": "unknown"
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:848:3, line:853:3>",
                "kind": "while",
                "body": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:848:10, col:52>",
                      "kind": "calls-service",
                      "name": {
                        "kind": "string-literal",
                        "literal": "static_map"
                      },
                      "format": "todo/service"
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:852:5, col:13>",
                      "kind": "ratesleep",
                      "rate": {
                        "kind": "unknown"
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:848:10, col:52>",
                      "kind": "calls-service",
                      "name": {
                        "kind": "string-literal",
                        "literal": "static_map"
                      },
                      "format": "todo/service"
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:852:5, col:13>",
                      "kind": "ratesleep",
                      "rate": {
                        "kind": "unknown"
                      }
                    }
                  ]
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              }
            ]
          }
        },
        {
          "name": "AmclNode::laserReceived",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1120:3, col:44>",
                "kind": "assignment",
                "variable": "AmclNode::last_laser_received_ts_",
                "unqualified_variable": "last_laser_received_ts_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1133:5, col:40>",
                "kind": "assignment",
                "variable": "laser_index",
                "unqualified_variable": "laser_index",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "AmclNode::map_",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      },
                      "rhs": {
                        "kind": "null-expr"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "unknown"
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1136:5, col:29>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "laser_scan_frame_id",
                  "type": "string",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "AmclNode::map_",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      },
                      "rhs": {
                        "kind": "null-expr"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "unknown"
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1137:5, col:36>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                "unqualified_variable": "stamp",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "AmclNode::map_",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      },
                      "rhs": {
                        "kind": "null-expr"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "unknown"
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1168:5, col:54>",
                "kind": "assignment",
                "variable": "laser_index",
                "unqualified_variable": "laser_index",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "AmclNode::map_",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      },
                      "rhs": {
                        "kind": "null-expr"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "unknown"
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1195:5, col:24>",
                "kind": "assignment",
                "variable": "update",
                "unqualified_variable": "update",
                "value": {
                  "kind": "binary-expr",
                  "operator": "||",
                  "lhs": {
                    "kind": "variable-reference",
                    "qualified_name": "update",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": false
                    }
                  },
                  "rhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::m_force_update",
                    "type": "bool",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::map_",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        },
                        "rhs": {
                          "kind": "null-expr"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::pf_init_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1196:5, col:20>",
                "kind": "assignment",
                "variable": "AmclNode::m_force_update",
                "unqualified_variable": "m_force_update",
                "value": {
                  "kind": "bool-literal",
                  "literal": false
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::map_",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        },
                        "rhs": {
                          "kind": "null-expr"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::pf_init_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1208:5, col:21>",
                "kind": "assignment",
                "variable": "AmclNode::pf_odom_pose_",
                "unqualified_variable": "pf_odom_pose_",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "pose",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::map_",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        },
                        "rhs": {
                          "kind": "null-expr"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::pf_init_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1211:5, col:16>",
                "kind": "assignment",
                "variable": "AmclNode::pf_init_",
                "unqualified_variable": "pf_init_",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::map_",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        },
                        "rhs": {
                          "kind": "null-expr"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::pf_init_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1217:5, col:25>",
                "kind": "assignment",
                "variable": "force_publication",
                "unqualified_variable": "force_publication",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::map_",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        },
                        "rhs": {
                          "kind": "null-expr"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::pf_init_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1219:5, col:23>",
                "kind": "assignment",
                "variable": "AmclNode::resample_count_",
                "unqualified_variable": "resample_count_",
                "value": {
                  "kind": "int-literal",
                  "literal": 0
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::map_",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        },
                        "rhs": {
                          "kind": "null-expr"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::pf_init_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1228:5, col:18>",
                "kind": "assignment",
                "variable": "amcl::AMCLOdomData::pose",
                "unqualified_variable": "pose",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "pose",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::map_",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "null-expr"
                          }
                        }
                      },
                      "rhs": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::pf_init_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::pf_init_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1232:5, col:19>",
                "kind": "assignment",
                "variable": "amcl::AMCLOdomData::delta",
                "unqualified_variable": "delta",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "delta",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::map_",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "null-expr"
                          }
                        }
                      },
                      "rhs": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::pf_init_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::pf_init_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1246:5, col:39>",
                "kind": "assignment",
                "variable": "amcl::AMCLSensorData::sensor",
                "unqualified_variable": "sensor",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::map_",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        },
                        "rhs": {
                          "kind": "null-expr"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1247:5, col:49>",
                "kind": "assignment",
                "variable": "amcl::AMCLLaserData::range_count",
                "unqualified_variable": "range_count",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::map_",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        },
                        "rhs": {
                          "kind": "null-expr"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1256:5, col:45>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                "unqualified_variable": "stamp",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "std_msgs::Header_<std::allocator<void>>::stamp",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "qualified_name": "sensor_msgs::LaserScan_<std::allocator<void>>::header",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::map_",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        },
                        "rhs": {
                          "kind": "null-expr"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1257:5, col:67>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::map_",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        },
                        "rhs": {
                          "kind": "null-expr"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1261:5, col:26>",
                "kind": "assignment",
                "variable": "geometry_msgs::QuaternionStamped_<std::allocator<void>>::header",
                "unqualified_variable": "header",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "geometry_msgs::QuaternionStamped_<std::allocator<void>>::header",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "min_q",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::map_",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        },
                        "rhs": {
                          "kind": "null-expr"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1279:5, col:64 <Spelling=/usr/include/math.h:777:16>>",
                "kind": "assignment",
                "variable": "angle_increment",
                "unqualified_variable": "angle_increment",
                "value": {
                  "kind": "binary-expr",
                  "operator": "-",
                  "lhs": {
                    "kind": "unknown"
                  },
                  "rhs": {
                    "kind": "float-literal",
                    "literal": 3.141592653589793
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::map_",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        },
                        "rhs": {
                          "kind": "null-expr"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1285:7, col:80>",
                "kind": "assignment",
                "variable": "amcl::AMCLLaserData::range_max",
                "unqualified_variable": "range_max",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::map_",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "null-expr"
                          }
                        }
                      },
                      "rhs": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": ">",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::laser_max_range_",
                      "type": "float",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    },
                    "rhs": {
                      "kind": "float-literal",
                      "literal": 0.0
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1287:7, col:37>",
                "kind": "assignment",
                "variable": "amcl::AMCLLaserData::range_max",
                "unqualified_variable": "range_max",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "sensor_msgs::LaserScan_<std::allocator<void>>::range_max",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::map_",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "null-expr"
                          }
                        }
                      },
                      "rhs": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "AmclNode::laser_max_range_",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      },
                      "rhs": {
                        "kind": "float-literal",
                        "literal": 0.0
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1290:7, col:74>",
                "kind": "assignment",
                "variable": "range_min",
                "unqualified_variable": "range_min",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::map_",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "null-expr"
                          }
                        }
                      },
                      "rhs": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": ">",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::laser_min_range_",
                      "type": "float",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    },
                    "rhs": {
                      "kind": "float-literal",
                      "literal": 0.0
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1292:7, col:31>",
                "kind": "assignment",
                "variable": "range_min",
                "unqualified_variable": "range_min",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "sensor_msgs::LaserScan_<std::allocator<void>>::range_min",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "float-literal",
                    "literal": 0.0
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::map_",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "null-expr"
                          }
                        }
                      },
                      "rhs": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "AmclNode::laser_min_range_",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      },
                      "rhs": {
                        "kind": "float-literal",
                        "literal": 0.0
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1294:5, col:51>",
                "kind": "assignment",
                "variable": "amcl::AMCLLaserData::ranges",
                "unqualified_variable": "ranges",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::map_",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        },
                        "rhs": {
                          "kind": "null-expr"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1313:5, col:21>",
                "kind": "assignment",
                "variable": "AmclNode::pf_odom_pose_",
                "unqualified_variable": "pf_odom_pose_",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "pose",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::map_",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        },
                        "rhs": {
                          "kind": "null-expr"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1319:7, col:19>",
                "kind": "assignment",
                "variable": "resampled",
                "unqualified_variable": "resampled",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::map_",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "null-expr"
                          }
                        }
                      },
                      "rhs": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "binary-expr",
                      "operator": "%",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "AmclNode::resample_interval_",
                        "type": "integer",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1330:7, col:47>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                "unqualified_variable": "stamp",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::map_",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "null-expr"
                          }
                        }
                      },
                      "rhs": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::m_force_update",
                      "type": "bool",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1331:7, col:35>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "AmclNode::global_frame_id_",
                  "type": "string",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "this-expr"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::map_",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "null-expr"
                          }
                        }
                      },
                      "rhs": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::m_force_update",
                      "type": "bool",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1335:9, col:65>",
                "kind": "assignment",
                "variable": "geometry_msgs::Point_<std::allocator<void>>::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "AmclNode::map_",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "rhs": {
                              "kind": "null-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "member-var-ref",
                        "qualified_name": "AmclNode::m_force_update",
                        "type": "bool",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "<",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "i",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "_pf_sample_set_t::sample_count",
                      "type": "integer",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "variable-reference",
                        "qualified_name": "set",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1336:9, col:65>",
                "kind": "assignment",
                "variable": "geometry_msgs::Point_<std::allocator<void>>::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "AmclNode::map_",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "rhs": {
                              "kind": "null-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "member-var-ref",
                        "qualified_name": "AmclNode::m_force_update",
                        "type": "bool",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "<",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "i",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "_pf_sample_set_t::sample_count",
                      "type": "integer",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "variable-reference",
                        "qualified_name": "set",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1337:9, col:41>",
                "kind": "assignment",
                "variable": "geometry_msgs::Point_<std::allocator<void>>::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "int-literal",
                  "literal": 0
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "AmclNode::map_",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "rhs": {
                              "kind": "null-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "member-var-ref",
                        "qualified_name": "AmclNode::m_force_update",
                        "type": "bool",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "<",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "i",
                      "type": "integer",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      }
                    },
                    "rhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "_pf_sample_set_t::sample_count",
                      "type": "integer",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "variable-reference",
                        "qualified_name": "set",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1365:7, col:32>",
                "kind": "assignment",
                "variable": "(anonymous struct)::weight",
                "unqualified_variable": "weight",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "weight",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "AmclNode::map_",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "null-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "variable-reference",
                              "qualified_name": "resampled",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "resampled",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          "rhs": {
                            "kind": "variable-reference",
                            "qualified_name": "force_publication",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "resampled",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "<",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "hyp_count",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "_pf_sample_set_t::cluster_count",
                        "type": "integer",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "unknown"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1366:7, col:38>",
                "kind": "assignment",
                "variable": "(anonymous struct)::pf_pose_mean",
                "unqualified_variable": "pf_pose_mean",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "pose_mean",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "AmclNode::map_",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "null-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "variable-reference",
                              "qualified_name": "resampled",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "resampled",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          "rhs": {
                            "kind": "variable-reference",
                            "qualified_name": "force_publication",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "resampled",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "<",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "hyp_count",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "_pf_sample_set_t::cluster_count",
                        "type": "integer",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "unknown"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1367:7, col:37>",
                "kind": "assignment",
                "variable": "(anonymous struct)::pf_pose_cov",
                "unqualified_variable": "pf_pose_cov",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "pose_cov",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "AmclNode::map_",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "null-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "variable-reference",
                              "qualified_name": "resampled",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "resampled",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          "rhs": {
                            "kind": "variable-reference",
                            "qualified_name": "force_publication",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "resampled",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "<",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "hyp_count",
                        "type": "integer",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "rhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "_pf_sample_set_t::cluster_count",
                        "type": "integer",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "unknown"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "unknown"
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1371:9, col:38>",
                "kind": "assignment",
                "variable": "max_weight",
                "unqualified_variable": "max_weight",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "(anonymous struct)::weight",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "AmclNode::map_",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "null-expr"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "unknown"
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "variable-reference",
                                "qualified_name": "resampled",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "resampled",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "variable-reference",
                              "qualified_name": "force_publication",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "AmclNode::map_",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "null-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "variable-reference",
                            "qualified_name": "resampled",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "<",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "hyp_count",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "_pf_sample_set_t::cluster_count",
                          "type": "integer",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": ">",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "(anonymous struct)::weight",
                      "type": "float",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "variable-reference",
                      "qualified_name": "max_weight",
                      "type": "float",
                      "initial-value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1372:9, col:26>",
                "kind": "assignment",
                "variable": "max_weight_hyp",
                "unqualified_variable": "max_weight_hyp",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "hyp_count",
                  "type": "integer",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 0
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "AmclNode::map_",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 0
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "null-expr"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "unknown"
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "variable-reference",
                                "qualified_name": "resampled",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "resampled",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            },
                            "rhs": {
                              "kind": "variable-reference",
                              "qualified_name": "force_publication",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "AmclNode::map_",
                                  "type": "unsupported",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "null-expr"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "variable-reference",
                            "qualified_name": "resampled",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "<",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "hyp_count",
                          "type": "integer",
                          "initial-value": {
                            "kind": "int-literal",
                            "literal": 0
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "_pf_sample_set_t::cluster_count",
                          "type": "integer",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "unknown"
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": ">",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "(anonymous struct)::weight",
                      "type": "float",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "unknown"
                      }
                    },
                    "rhs": {
                      "kind": "variable-reference",
                      "qualified_name": "max_weight",
                      "type": "float",
                      "initial-value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1391:7, col:27>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "AmclNode::global_frame_id_",
                  "type": "string",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "this-expr"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "||",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "variable-reference",
                            "qualified_name": "resampled",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "resampled",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "force_publication",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "AmclNode::map_",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "rhs": {
                              "kind": "null-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "variable-reference",
                        "qualified_name": "resampled",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": ">",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "max_weight",
                      "type": "float",
                      "initial-value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      }
                    },
                    "rhs": {
                      "kind": "float-literal",
                      "literal": 0.0
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1392:7, col:43>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                "unqualified_variable": "stamp",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "std_msgs::Header_<std::allocator<void>>::stamp",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "qualified_name": "sensor_msgs::LaserScan_<std::allocator<void>>::header",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "||",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "variable-reference",
                            "qualified_name": "resampled",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "resampled",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "force_publication",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "AmclNode::map_",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "rhs": {
                              "kind": "null-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "variable-reference",
                        "qualified_name": "resampled",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": ">",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "max_weight",
                      "type": "float",
                      "initial-value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      }
                    },
                    "rhs": {
                      "kind": "float-literal",
                      "literal": 0.0
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1394:7, col:69>",
                "kind": "assignment",
                "variable": "geometry_msgs::Point_<std::allocator<void>>::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "||",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "variable-reference",
                            "qualified_name": "resampled",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "resampled",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "force_publication",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "AmclNode::map_",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "rhs": {
                              "kind": "null-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "variable-reference",
                        "qualified_name": "resampled",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": ">",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "max_weight",
                      "type": "float",
                      "initial-value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      }
                    },
                    "rhs": {
                      "kind": "float-literal",
                      "literal": 0.0
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1395:7, col:69>",
                "kind": "assignment",
                "variable": "geometry_msgs::Point_<std::allocator<void>>::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "||",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "variable-reference",
                            "qualified_name": "resampled",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "resampled",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "force_publication",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "AmclNode::map_",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "rhs": {
                              "kind": "null-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "variable-reference",
                        "qualified_name": "resampled",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": ">",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "max_weight",
                      "type": "float",
                      "initial-value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      }
                    },
                    "rhs": {
                      "kind": "float-literal",
                      "literal": 0.0
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1428:7, col:29>",
                "kind": "assignment",
                "variable": "AmclNode::last_published_pose",
                "unqualified_variable": "last_published_pose",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "p",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "||",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "variable-reference",
                            "qualified_name": "resampled",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "resampled",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "force_publication",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "AmclNode::map_",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "rhs": {
                              "kind": "null-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "variable-reference",
                        "qualified_name": "resampled",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": ">",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "max_weight",
                      "type": "float",
                      "initial-value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      }
                    },
                    "rhs": {
                      "kind": "float-literal",
                      "literal": 0.0
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1446:9, col:42>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "AmclNode::base_frame_id_",
                  "type": "string",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "this-expr"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "||",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "variable-reference",
                            "qualified_name": "resampled",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "resampled",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "force_publication",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "variable-reference",
                        "qualified_name": "resampled",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": ">",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "max_weight",
                      "type": "float",
                      "initial-value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      }
                    },
                    "rhs": {
                      "kind": "float-literal",
                      "literal": 0.0
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1447:9, col:58>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                "unqualified_variable": "stamp",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "std_msgs::Header_<std::allocator<void>>::stamp",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "member-var-ref",
                    "qualified_name": "sensor_msgs::LaserScan_<std::allocator<void>>::header",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    },
                    "base": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "||",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "variable-reference",
                            "qualified_name": "resampled",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "resampled",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "force_publication",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "variable-reference",
                        "qualified_name": "resampled",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": ">",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "max_weight",
                      "type": "float",
                      "initial-value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      }
                    },
                    "rhs": {
                      "kind": "float-literal",
                      "literal": 0.0
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1459:7, col:26>",
                "kind": "assignment",
                "variable": "AmclNode::latest_tf_valid_",
                "unqualified_variable": "latest_tf_valid_",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "||",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "variable-reference",
                            "qualified_name": "resampled",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "resampled",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "force_publication",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "variable-reference",
                        "qualified_name": "resampled",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": false
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": ">",
                    "lhs": {
                      "kind": "variable-reference",
                      "qualified_name": "max_weight",
                      "type": "float",
                      "initial-value": {
                        "kind": "float-literal",
                        "literal": 0.0
                      }
                    },
                    "rhs": {
                      "kind": "float-literal",
                      "literal": 0.0
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1468:9, col:42>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "AmclNode::global_frame_id_",
                  "type": "string",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "this-expr"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "variable-reference",
                              "qualified_name": "resampled",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "resampled",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          "rhs": {
                            "kind": "variable-reference",
                            "qualified_name": "force_publication",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "resampled",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "max_weight",
                        "type": "float",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        }
                      },
                      "rhs": {
                        "kind": "float-literal",
                        "literal": 0.0
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::tf_broadcast_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    },
                    "rhs": {
                      "kind": "bool-literal",
                      "literal": true
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1469:9, col:39>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                "unqualified_variable": "stamp",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "transform_expiration",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "variable-reference",
                              "qualified_name": "resampled",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "resampled",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          "rhs": {
                            "kind": "variable-reference",
                            "qualified_name": "force_publication",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "resampled",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "max_weight",
                        "type": "float",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        }
                      },
                      "rhs": {
                        "kind": "float-literal",
                        "literal": 0.0
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::tf_broadcast_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    },
                    "rhs": {
                      "kind": "bool-literal",
                      "literal": true
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1470:9, col:41>",
                "kind": "assignment",
                "variable": "geometry_msgs::TransformStamped_<std::allocator<void>>::child_frame_id",
                "unqualified_variable": "child_frame_id",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "AmclNode::odom_frame_id_",
                  "type": "string",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "this-expr"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "variable-reference",
                              "qualified_name": "resampled",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "resampled",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          "rhs": {
                            "kind": "variable-reference",
                            "qualified_name": "force_publication",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "resampled",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "max_weight",
                        "type": "float",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        }
                      },
                      "rhs": {
                        "kind": "float-literal",
                        "literal": 0.0
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::tf_broadcast_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    },
                    "rhs": {
                      "kind": "bool-literal",
                      "literal": true
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1474:9, col:33>",
                "kind": "assignment",
                "variable": "AmclNode::sent_first_transform_",
                "unqualified_variable": "sent_first_transform_",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "||",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "variable-reference",
                              "qualified_name": "resampled",
                              "type": "bool",
                              "initial-value": {
                                "kind": "bool-literal",
                                "literal": false
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "resampled",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          "rhs": {
                            "kind": "variable-reference",
                            "qualified_name": "force_publication",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "resampled",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "max_weight",
                        "type": "float",
                        "initial-value": {
                          "kind": "float-literal",
                          "literal": 0.0
                        }
                      },
                      "rhs": {
                        "kind": "float-literal",
                        "literal": 0.0
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::tf_broadcast_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    },
                    "rhs": {
                      "kind": "bool-literal",
                      "literal": true
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1491:7, col:40>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "AmclNode::global_frame_id_",
                  "type": "string",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "this-expr"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "variable-reference",
                            "qualified_name": "resampled",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "resampled",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          "rhs": {
                            "kind": "variable-reference",
                            "qualified_name": "force_publication",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::latest_tf_valid_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "bool-literal",
                        "literal": false
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::tf_broadcast_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    },
                    "rhs": {
                      "kind": "bool-literal",
                      "literal": true
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1492:7, col:37>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                "unqualified_variable": "stamp",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "transform_expiration",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "variable-reference",
                            "qualified_name": "resampled",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "resampled",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          "rhs": {
                            "kind": "variable-reference",
                            "qualified_name": "force_publication",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::latest_tf_valid_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "bool-literal",
                        "literal": false
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::tf_broadcast_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    },
                    "rhs": {
                      "kind": "bool-literal",
                      "literal": true
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1493:7, col:39>",
                "kind": "assignment",
                "variable": "geometry_msgs::TransformStamped_<std::allocator<void>>::child_frame_id",
                "unqualified_variable": "child_frame_id",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "AmclNode::odom_frame_id_",
                  "type": "string",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "this-expr"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "variable-reference",
                            "qualified_name": "resampled",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "resampled",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          "rhs": {
                            "kind": "variable-reference",
                            "qualified_name": "force_publication",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::latest_tf_valid_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "bool-literal",
                        "literal": false
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::tf_broadcast_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    },
                    "rhs": {
                      "kind": "bool-literal",
                      "literal": true
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1503:7, col:30>",
                "kind": "call",
                "callee": "AmclNode::savePoseToServer",
                "arguments": {},
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "variable-reference",
                            "qualified_name": "resampled",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "resampled",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          "rhs": {
                            "kind": "variable-reference",
                            "qualified_name": "force_publication",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::latest_tf_valid_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "bool-literal",
                        "literal": false
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "float-literal",
                        "literal": 0.0
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": ">=",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "AmclNode::save_pose_period",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1504:7, col:29>",
                "kind": "assignment",
                "variable": "AmclNode::save_pose_last_time",
                "unqualified_variable": "save_pose_last_time",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "now",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "variable-reference",
                            "qualified_name": "resampled",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "||",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "resampled",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          "rhs": {
                            "kind": "variable-reference",
                            "qualified_name": "force_publication",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::latest_tf_valid_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "bool-literal",
                        "literal": false
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": ">",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "float-literal",
                        "literal": 0.0
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": ">=",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "member-var-ref",
                        "qualified_name": "AmclNode::save_pose_period",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1120:3, col:44>",
                "kind": "assignment",
                "variable": "AmclNode::last_laser_received_ts_",
                "unqualified_variable": "last_laser_received_ts_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1128:3, line:1169:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1133:5, col:40>",
                      "kind": "assignment",
                      "variable": "laser_index",
                      "unqualified_variable": "laser_index",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "AmclNode::map_",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "rhs": {
                              "kind": "null-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1136:5, col:29>",
                      "kind": "assignment",
                      "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                      "unqualified_variable": "frame_id",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "laser_scan_frame_id",
                        "type": "string",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "AmclNode::map_",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "rhs": {
                              "kind": "null-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1137:5, col:36>",
                      "kind": "assignment",
                      "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                      "unqualified_variable": "stamp",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "AmclNode::map_",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "rhs": {
                              "kind": "null-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1133:5, col:40>",
                      "kind": "assignment",
                      "variable": "laser_index",
                      "unqualified_variable": "laser_index",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "AmclNode::map_",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "rhs": {
                              "kind": "null-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1136:5, col:29>",
                      "kind": "assignment",
                      "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                      "unqualified_variable": "frame_id",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "laser_scan_frame_id",
                        "type": "string",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "AmclNode::map_",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "rhs": {
                              "kind": "null-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1137:5, col:36>",
                      "kind": "assignment",
                      "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                      "unqualified_variable": "stamp",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "AmclNode::map_",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "rhs": {
                              "kind": "null-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1168:5, col:54>",
                      "kind": "assignment",
                      "variable": "laser_index",
                      "unqualified_variable": "laser_index",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "AmclNode::map_",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "rhs": {
                              "kind": "null-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "unknown"
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1168:5, col:54>",
                      "kind": "assignment",
                      "variable": "laser_index",
                      "unqualified_variable": "laser_index",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "AmclNode::map_",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "rhs": {
                              "kind": "null-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "unknown"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1183:3, line:1202:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1195:5, col:24>",
                      "kind": "assignment",
                      "variable": "update",
                      "unqualified_variable": "update",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "update",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::m_force_update",
                          "type": "bool",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::pf_init_",
                          "type": "bool",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1196:5, col:20>",
                      "kind": "assignment",
                      "variable": "AmclNode::m_force_update",
                      "unqualified_variable": "m_force_update",
                      "value": {
                        "kind": "bool-literal",
                        "literal": false
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::pf_init_",
                          "type": "bool",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1199:5, line:1201:29>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": []
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": []
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1195:5, col:24>",
                      "kind": "assignment",
                      "variable": "update",
                      "unqualified_variable": "update",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "||",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "update",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::m_force_update",
                          "type": "bool",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::pf_init_",
                          "type": "bool",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1196:5, col:20>",
                      "kind": "assignment",
                      "variable": "AmclNode::m_force_update",
                      "unqualified_variable": "m_force_update",
                      "value": {
                        "kind": "bool-literal",
                        "literal": false
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::pf_init_",
                          "type": "bool",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1205:3, line:1239:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1208:5, col:21>",
                      "kind": "assignment",
                      "variable": "AmclNode::pf_odom_pose_",
                      "unqualified_variable": "pf_odom_pose_",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "pose",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::pf_init_",
                            "type": "bool",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1211:5, col:16>",
                      "kind": "assignment",
                      "variable": "AmclNode::pf_init_",
                      "unqualified_variable": "pf_init_",
                      "value": {
                        "kind": "bool-literal",
                        "literal": true
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::pf_init_",
                            "type": "bool",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1217:5, col:25>",
                      "kind": "assignment",
                      "variable": "force_publication",
                      "unqualified_variable": "force_publication",
                      "value": {
                        "kind": "bool-literal",
                        "literal": true
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::pf_init_",
                            "type": "bool",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1219:5, col:23>",
                      "kind": "assignment",
                      "variable": "AmclNode::resample_count_",
                      "unqualified_variable": "resample_count_",
                      "value": {
                        "kind": "int-literal",
                        "literal": 0
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::pf_init_",
                            "type": "bool",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1208:5, col:21>",
                      "kind": "assignment",
                      "variable": "AmclNode::pf_odom_pose_",
                      "unqualified_variable": "pf_odom_pose_",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "pose",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::pf_init_",
                            "type": "bool",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1211:5, col:16>",
                      "kind": "assignment",
                      "variable": "AmclNode::pf_init_",
                      "unqualified_variable": "pf_init_",
                      "value": {
                        "kind": "bool-literal",
                        "literal": true
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::pf_init_",
                            "type": "bool",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1217:5, col:25>",
                      "kind": "assignment",
                      "variable": "force_publication",
                      "unqualified_variable": "force_publication",
                      "value": {
                        "kind": "bool-literal",
                        "literal": true
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::pf_init_",
                            "type": "bool",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1219:5, col:23>",
                      "kind": "assignment",
                      "variable": "AmclNode::resample_count_",
                      "unqualified_variable": "resample_count_",
                      "value": {
                        "kind": "int-literal",
                        "literal": 0
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::pf_init_",
                            "type": "bool",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1222:8, line:1239:3>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1228:5, col:18>",
                            "kind": "assignment",
                            "variable": "amcl::AMCLOdomData::pose",
                            "unqualified_variable": "pose",
                            "value": {
                              "kind": "variable-reference",
                              "qualified_name": "pose",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::map_",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "null-expr"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "AmclNode::pf_init_",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "AmclNode::pf_init_",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1232:5, col:19>",
                            "kind": "assignment",
                            "variable": "amcl::AMCLOdomData::delta",
                            "unqualified_variable": "delta",
                            "value": {
                              "kind": "variable-reference",
                              "qualified_name": "delta",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::map_",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "null-expr"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "AmclNode::pf_init_",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "AmclNode::pf_init_",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1228:5, col:18>",
                            "kind": "assignment",
                            "variable": "amcl::AMCLOdomData::pose",
                            "unqualified_variable": "pose",
                            "value": {
                              "kind": "variable-reference",
                              "qualified_name": "pose",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::map_",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "null-expr"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "AmclNode::pf_init_",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "AmclNode::pf_init_",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1232:5, col:19>",
                            "kind": "assignment",
                            "variable": "amcl::AMCLOdomData::delta",
                            "unqualified_variable": "delta",
                            "value": {
                              "kind": "variable-reference",
                              "qualified_name": "delta",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::map_",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "null-expr"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "AmclNode::pf_init_",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "AmclNode::pf_init_",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              }
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": []
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  ]
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1243:3, line:1344:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1246:5, col:39>",
                      "kind": "assignment",
                      "variable": "amcl::AMCLSensorData::sensor",
                      "unqualified_variable": "sensor",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1247:5, col:49>",
                      "kind": "assignment",
                      "variable": "amcl::AMCLLaserData::range_count",
                      "unqualified_variable": "range_count",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1256:5, col:45>",
                      "kind": "assignment",
                      "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                      "unqualified_variable": "stamp",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "std_msgs::Header_<std::allocator<void>>::stamp",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "member-var-ref",
                          "qualified_name": "sensor_msgs::LaserScan_<std::allocator<void>>::header",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1257:5, col:67>",
                      "kind": "assignment",
                      "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                      "unqualified_variable": "frame_id",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1261:5, col:26>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::QuaternionStamped_<std::allocator<void>>::header",
                      "unqualified_variable": "header",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "geometry_msgs::QuaternionStamped_<std::allocator<void>>::header",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "min_q",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1279:5, col:64 <Spelling=/usr/include/math.h:777:16>>",
                      "kind": "assignment",
                      "variable": "angle_increment",
                      "unqualified_variable": "angle_increment",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "-",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "float-literal",
                          "literal": 3.141592653589793
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1284:5, line:1287:37>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1285:7, col:80>",
                            "kind": "assignment",
                            "variable": "amcl::AMCLLaserData::range_max",
                            "unqualified_variable": "range_max",
                            "value": {
                              "kind": "unknown"
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::map_",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "null-expr"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": ">",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "AmclNode::laser_max_range_",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1285:7, col:80>",
                            "kind": "assignment",
                            "variable": "amcl::AMCLLaserData::range_max",
                            "unqualified_variable": "range_max",
                            "value": {
                              "kind": "unknown"
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::map_",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "null-expr"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": ">",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "AmclNode::laser_max_range_",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              }
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1287:7, col:37>",
                            "kind": "assignment",
                            "variable": "amcl::AMCLLaserData::range_max",
                            "unqualified_variable": "range_max",
                            "value": {
                              "kind": "member-var-ref",
                              "qualified_name": "sensor_msgs::LaserScan_<std::allocator<void>>::range_max",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "float-literal",
                                "literal": 0.0
                              },
                              "base": {
                                "kind": "unknown"
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::map_",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "null-expr"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": ">",
                                  "lhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "AmclNode::laser_max_range_",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1287:7, col:37>",
                            "kind": "assignment",
                            "variable": "amcl::AMCLLaserData::range_max",
                            "unqualified_variable": "range_max",
                            "value": {
                              "kind": "member-var-ref",
                              "qualified_name": "sensor_msgs::LaserScan_<std::allocator<void>>::range_max",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "float-literal",
                                "literal": 0.0
                              },
                              "base": {
                                "kind": "unknown"
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::map_",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "null-expr"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": ">",
                                  "lhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "AmclNode::laser_max_range_",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  }
                                }
                              }
                            }
                          }
                        ]
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1289:5, line:1292:31>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1290:7, col:74>",
                            "kind": "assignment",
                            "variable": "range_min",
                            "unqualified_variable": "range_min",
                            "value": {
                              "kind": "unknown"
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::map_",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "null-expr"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": ">",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "AmclNode::laser_min_range_",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1290:7, col:74>",
                            "kind": "assignment",
                            "variable": "range_min",
                            "unqualified_variable": "range_min",
                            "value": {
                              "kind": "unknown"
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::map_",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "null-expr"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": ">",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "AmclNode::laser_min_range_",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                },
                                "rhs": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              }
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1292:7, col:31>",
                            "kind": "assignment",
                            "variable": "range_min",
                            "unqualified_variable": "range_min",
                            "value": {
                              "kind": "member-var-ref",
                              "qualified_name": "sensor_msgs::LaserScan_<std::allocator<void>>::range_min",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "float-literal",
                                "literal": 0.0
                              },
                              "base": {
                                "kind": "unknown"
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::map_",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "null-expr"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": ">",
                                  "lhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "AmclNode::laser_min_range_",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1292:7, col:31>",
                            "kind": "assignment",
                            "variable": "range_min",
                            "unqualified_variable": "range_min",
                            "value": {
                              "kind": "member-var-ref",
                              "qualified_name": "sensor_msgs::LaserScan_<std::allocator<void>>::range_min",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "float-literal",
                                "literal": 0.0
                              },
                              "base": {
                                "kind": "unknown"
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::map_",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "null-expr"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": ">",
                                  "lhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "AmclNode::laser_min_range_",
                                    "type": "float",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  }
                                }
                              }
                            }
                          }
                        ]
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1294:5, col:51>",
                      "kind": "assignment",
                      "variable": "amcl::AMCLLaserData::ranges",
                      "unqualified_variable": "ranges",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1300:7, line:1303:50>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": []
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": []
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1313:5, col:21>",
                      "kind": "assignment",
                      "variable": "AmclNode::pf_odom_pose_",
                      "unqualified_variable": "pf_odom_pose_",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "pose",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1316:5, line:1320:5>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1319:7, col:19>",
                            "kind": "assignment",
                            "variable": "resampled",
                            "unqualified_variable": "resampled",
                            "value": {
                              "kind": "bool-literal",
                              "literal": true
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::map_",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "null-expr"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "%",
                                  "lhs": {
                                    "kind": "unknown"
                                  },
                                  "rhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "AmclNode::resample_interval_",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1319:7, col:19>",
                            "kind": "assignment",
                            "variable": "resampled",
                            "unqualified_variable": "resampled",
                            "value": {
                              "kind": "bool-literal",
                              "literal": true
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::map_",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "null-expr"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "%",
                                  "lhs": {
                                    "kind": "unknown"
                                  },
                                  "rhs": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "AmclNode::resample_interval_",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": []
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1327:5, line:1343:5>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1330:7, col:47>",
                            "kind": "assignment",
                            "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                            "unqualified_variable": "stamp",
                            "value": {
                              "kind": "unknown"
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::map_",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "null-expr"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "AmclNode::m_force_update",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1331:7, col:35>",
                            "kind": "assignment",
                            "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                            "unqualified_variable": "frame_id",
                            "value": {
                              "kind": "member-var-ref",
                              "qualified_name": "AmclNode::global_frame_id_",
                              "type": "string",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::map_",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "null-expr"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "AmclNode::m_force_update",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1335:9, col:65>",
                            "kind": "assignment",
                            "variable": "geometry_msgs::Point_<std::allocator<void>>::x",
                            "unqualified_variable": "x",
                            "value": {
                              "kind": "unknown"
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "==",
                                        "lhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "AmclNode::map_",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "int-literal",
                                            "literal": 0
                                          },
                                          "base": {
                                            "kind": "this-expr"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "null-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "AmclNode::m_force_update",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "i",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "_pf_sample_set_t::sample_count",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "variable-reference",
                                    "qualified_name": "set",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1336:9, col:65>",
                            "kind": "assignment",
                            "variable": "geometry_msgs::Point_<std::allocator<void>>::y",
                            "unqualified_variable": "y",
                            "value": {
                              "kind": "unknown"
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "==",
                                        "lhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "AmclNode::map_",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "int-literal",
                                            "literal": 0
                                          },
                                          "base": {
                                            "kind": "this-expr"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "null-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "AmclNode::m_force_update",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "i",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "_pf_sample_set_t::sample_count",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "variable-reference",
                                    "qualified_name": "set",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1337:9, col:41>",
                            "kind": "assignment",
                            "variable": "geometry_msgs::Point_<std::allocator<void>>::z",
                            "unqualified_variable": "z",
                            "value": {
                              "kind": "int-literal",
                              "literal": 0
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "==",
                                        "lhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "AmclNode::map_",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "int-literal",
                                            "literal": 0
                                          },
                                          "base": {
                                            "kind": "this-expr"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "null-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "AmclNode::m_force_update",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "i",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "_pf_sample_set_t::sample_count",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "variable-reference",
                                    "qualified_name": "set",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1330:7, col:47>",
                            "kind": "assignment",
                            "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                            "unqualified_variable": "stamp",
                            "value": {
                              "kind": "unknown"
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::map_",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "null-expr"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "AmclNode::m_force_update",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1331:7, col:35>",
                            "kind": "assignment",
                            "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                            "unqualified_variable": "frame_id",
                            "value": {
                              "kind": "member-var-ref",
                              "qualified_name": "AmclNode::global_frame_id_",
                              "type": "string",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::map_",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "null-expr"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "AmclNode::m_force_update",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "this-expr"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1335:9, col:65>",
                            "kind": "assignment",
                            "variable": "geometry_msgs::Point_<std::allocator<void>>::x",
                            "unqualified_variable": "x",
                            "value": {
                              "kind": "unknown"
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "==",
                                        "lhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "AmclNode::map_",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "int-literal",
                                            "literal": 0
                                          },
                                          "base": {
                                            "kind": "this-expr"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "null-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "AmclNode::m_force_update",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "i",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "_pf_sample_set_t::sample_count",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "variable-reference",
                                    "qualified_name": "set",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1336:9, col:65>",
                            "kind": "assignment",
                            "variable": "geometry_msgs::Point_<std::allocator<void>>::y",
                            "unqualified_variable": "y",
                            "value": {
                              "kind": "unknown"
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "==",
                                        "lhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "AmclNode::map_",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "int-literal",
                                            "literal": 0
                                          },
                                          "base": {
                                            "kind": "this-expr"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "null-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "AmclNode::m_force_update",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "i",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "_pf_sample_set_t::sample_count",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "variable-reference",
                                    "qualified_name": "set",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1337:9, col:41>",
                            "kind": "assignment",
                            "variable": "geometry_msgs::Point_<std::allocator<void>>::z",
                            "unqualified_variable": "z",
                            "value": {
                              "kind": "int-literal",
                              "literal": 0
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "==",
                                        "lhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "AmclNode::map_",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "int-literal",
                                            "literal": 0
                                          },
                                          "base": {
                                            "kind": "this-expr"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "null-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "AmclNode::m_force_update",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "<",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "i",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "int-literal",
                                    "literal": 0
                                  }
                                },
                                "rhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "_pf_sample_set_t::sample_count",
                                  "type": "integer",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "variable-reference",
                                    "qualified_name": "set",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": []
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1246:5, col:39>",
                      "kind": "assignment",
                      "variable": "amcl::AMCLSensorData::sensor",
                      "unqualified_variable": "sensor",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1247:5, col:49>",
                      "kind": "assignment",
                      "variable": "amcl::AMCLLaserData::range_count",
                      "unqualified_variable": "range_count",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1256:5, col:45>",
                      "kind": "assignment",
                      "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                      "unqualified_variable": "stamp",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "std_msgs::Header_<std::allocator<void>>::stamp",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "member-var-ref",
                          "qualified_name": "sensor_msgs::LaserScan_<std::allocator<void>>::header",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1257:5, col:67>",
                      "kind": "assignment",
                      "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                      "unqualified_variable": "frame_id",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1261:5, col:26>",
                      "kind": "assignment",
                      "variable": "geometry_msgs::QuaternionStamped_<std::allocator<void>>::header",
                      "unqualified_variable": "header",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "geometry_msgs::QuaternionStamped_<std::allocator<void>>::header",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "min_q",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1279:5, col:64 <Spelling=/usr/include/math.h:777:16>>",
                      "kind": "assignment",
                      "variable": "angle_increment",
                      "unqualified_variable": "angle_increment",
                      "value": {
                        "kind": "binary-expr",
                        "operator": "-",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "float-literal",
                          "literal": 3.141592653589793
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1294:5, col:51>",
                      "kind": "assignment",
                      "variable": "amcl::AMCLLaserData::ranges",
                      "unqualified_variable": "ranges",
                      "value": {
                        "kind": "unknown"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1313:5, col:21>",
                      "kind": "assignment",
                      "variable": "AmclNode::pf_odom_pose_",
                      "unqualified_variable": "pf_odom_pose_",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "pose",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "member-var-ref",
                                "qualified_name": "AmclNode::map_",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "int-literal",
                                  "literal": 0
                                },
                                "base": {
                                  "kind": "this-expr"
                                }
                              },
                              "rhs": {
                                "kind": "null-expr"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1346:3, line:1506:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1365:7, col:32>",
                      "kind": "assignment",
                      "variable": "(anonymous struct)::weight",
                      "unqualified_variable": "weight",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "weight",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::map_",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "null-expr"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "variable-reference",
                                    "qualified_name": "resampled",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "resampled",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                },
                                "rhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "force_publication",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "AmclNode::map_",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      },
                                      "base": {
                                        "kind": "this-expr"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "null-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "variable-reference",
                                "qualified_name": "resampled",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "hyp_count",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "_pf_sample_set_t::cluster_count",
                              "type": "integer",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "unknown"
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1366:7, col:38>",
                      "kind": "assignment",
                      "variable": "(anonymous struct)::pf_pose_mean",
                      "unqualified_variable": "pf_pose_mean",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "pose_mean",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::map_",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "null-expr"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "variable-reference",
                                    "qualified_name": "resampled",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "resampled",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                },
                                "rhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "force_publication",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "AmclNode::map_",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      },
                                      "base": {
                                        "kind": "this-expr"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "null-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "variable-reference",
                                "qualified_name": "resampled",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "hyp_count",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "_pf_sample_set_t::cluster_count",
                              "type": "integer",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "unknown"
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1367:7, col:37>",
                      "kind": "assignment",
                      "variable": "(anonymous struct)::pf_pose_cov",
                      "unqualified_variable": "pf_pose_cov",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "pose_cov",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::map_",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "null-expr"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "variable-reference",
                                    "qualified_name": "resampled",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "resampled",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                },
                                "rhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "force_publication",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "AmclNode::map_",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      },
                                      "base": {
                                        "kind": "this-expr"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "null-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "variable-reference",
                                "qualified_name": "resampled",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "hyp_count",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "_pf_sample_set_t::cluster_count",
                              "type": "integer",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "unknown"
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1369:7, line:1373:7>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1371:9, col:38>",
                            "kind": "assignment",
                            "variable": "max_weight",
                            "unqualified_variable": "max_weight",
                            "value": {
                              "kind": "member-var-ref",
                              "qualified_name": "(anonymous struct)::weight",
                              "type": "float",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "unknown"
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "AmclNode::map_",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "int-literal",
                                                  "literal": 0
                                                },
                                                "base": {
                                                  "kind": "this-expr"
                                                }
                                              },
                                              "rhs": {
                                                "kind": "null-expr"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "variable-reference",
                                            "qualified_name": "resampled",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "||",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "resampled",
                                          "type": "bool",
                                          "initial-value": {
                                            "kind": "bool-literal",
                                            "literal": false
                                          }
                                        },
                                        "rhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "force_publication",
                                          "type": "bool",
                                          "initial-value": {
                                            "kind": "bool-literal",
                                            "literal": false
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "AmclNode::map_",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "int-literal",
                                                "literal": 0
                                              },
                                              "base": {
                                                "kind": "this-expr"
                                              }
                                            },
                                            "rhs": {
                                              "kind": "null-expr"
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "resampled",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "hyp_count",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "_pf_sample_set_t::cluster_count",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "unknown"
                                      },
                                      "base": {
                                        "kind": "unknown"
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": ">",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "(anonymous struct)::weight",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "max_weight",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1372:9, col:26>",
                            "kind": "assignment",
                            "variable": "max_weight_hyp",
                            "unqualified_variable": "max_weight_hyp",
                            "value": {
                              "kind": "variable-reference",
                              "qualified_name": "hyp_count",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "AmclNode::map_",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "int-literal",
                                                  "literal": 0
                                                },
                                                "base": {
                                                  "kind": "this-expr"
                                                }
                                              },
                                              "rhs": {
                                                "kind": "null-expr"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "variable-reference",
                                            "qualified_name": "resampled",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "||",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "resampled",
                                          "type": "bool",
                                          "initial-value": {
                                            "kind": "bool-literal",
                                            "literal": false
                                          }
                                        },
                                        "rhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "force_publication",
                                          "type": "bool",
                                          "initial-value": {
                                            "kind": "bool-literal",
                                            "literal": false
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "AmclNode::map_",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "int-literal",
                                                "literal": 0
                                              },
                                              "base": {
                                                "kind": "this-expr"
                                              }
                                            },
                                            "rhs": {
                                              "kind": "null-expr"
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "resampled",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "hyp_count",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "_pf_sample_set_t::cluster_count",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "unknown"
                                      },
                                      "base": {
                                        "kind": "unknown"
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": ">",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "(anonymous struct)::weight",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "max_weight",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1371:9, col:38>",
                            "kind": "assignment",
                            "variable": "max_weight",
                            "unqualified_variable": "max_weight",
                            "value": {
                              "kind": "member-var-ref",
                              "qualified_name": "(anonymous struct)::weight",
                              "type": "float",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "unknown"
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "AmclNode::map_",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "int-literal",
                                                  "literal": 0
                                                },
                                                "base": {
                                                  "kind": "this-expr"
                                                }
                                              },
                                              "rhs": {
                                                "kind": "null-expr"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "variable-reference",
                                            "qualified_name": "resampled",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "||",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "resampled",
                                          "type": "bool",
                                          "initial-value": {
                                            "kind": "bool-literal",
                                            "literal": false
                                          }
                                        },
                                        "rhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "force_publication",
                                          "type": "bool",
                                          "initial-value": {
                                            "kind": "bool-literal",
                                            "literal": false
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "AmclNode::map_",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "int-literal",
                                                "literal": 0
                                              },
                                              "base": {
                                                "kind": "this-expr"
                                              }
                                            },
                                            "rhs": {
                                              "kind": "null-expr"
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "resampled",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "hyp_count",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "_pf_sample_set_t::cluster_count",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "unknown"
                                      },
                                      "base": {
                                        "kind": "unknown"
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": ">",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "(anonymous struct)::weight",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "max_weight",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  }
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1372:9, col:26>",
                            "kind": "assignment",
                            "variable": "max_weight_hyp",
                            "unqualified_variable": "max_weight_hyp",
                            "value": {
                              "kind": "variable-reference",
                              "qualified_name": "hyp_count",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "member-var-ref",
                                                "qualified_name": "AmclNode::map_",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "int-literal",
                                                  "literal": 0
                                                },
                                                "base": {
                                                  "kind": "this-expr"
                                                }
                                              },
                                              "rhs": {
                                                "kind": "null-expr"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "variable-reference",
                                            "qualified_name": "resampled",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "||",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "resampled",
                                          "type": "bool",
                                          "initial-value": {
                                            "kind": "bool-literal",
                                            "literal": false
                                          }
                                        },
                                        "rhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "force_publication",
                                          "type": "bool",
                                          "initial-value": {
                                            "kind": "bool-literal",
                                            "literal": false
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "AmclNode::map_",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "int-literal",
                                                "literal": 0
                                              },
                                              "base": {
                                                "kind": "this-expr"
                                              }
                                            },
                                            "rhs": {
                                              "kind": "null-expr"
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "resampled",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "<",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "hyp_count",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      }
                                    },
                                    "rhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "_pf_sample_set_t::cluster_count",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "unknown"
                                      },
                                      "base": {
                                        "kind": "unknown"
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": ">",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "(anonymous struct)::weight",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "max_weight",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  }
                                }
                              }
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": []
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1376:5, line:1480:5>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1391:7, col:27>",
                            "kind": "assignment",
                            "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                            "unqualified_variable": "frame_id",
                            "value": {
                              "kind": "member-var-ref",
                              "qualified_name": "AmclNode::global_frame_id_",
                              "type": "string",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "AmclNode::map_",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": 0
                                            },
                                            "base": {
                                              "kind": "this-expr"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "null-expr"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "variable-reference",
                                        "qualified_name": "resampled",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "resampled",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    },
                                    "rhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "force_publication",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "==",
                                        "lhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "AmclNode::map_",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "int-literal",
                                            "literal": 0
                                          },
                                          "base": {
                                            "kind": "this-expr"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "null-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "resampled",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": ">",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "max_weight",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  }
                                },
                                "rhs": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1392:7, col:43>",
                            "kind": "assignment",
                            "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                            "unqualified_variable": "stamp",
                            "value": {
                              "kind": "member-var-ref",
                              "qualified_name": "std_msgs::Header_<std::allocator<void>>::stamp",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "member-var-ref",
                                "qualified_name": "sensor_msgs::LaserScan_<std::allocator<void>>::header",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "unknown"
                                }
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "AmclNode::map_",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": 0
                                            },
                                            "base": {
                                              "kind": "this-expr"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "null-expr"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "variable-reference",
                                        "qualified_name": "resampled",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "resampled",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    },
                                    "rhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "force_publication",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "==",
                                        "lhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "AmclNode::map_",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "int-literal",
                                            "literal": 0
                                          },
                                          "base": {
                                            "kind": "this-expr"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "null-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "resampled",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": ">",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "max_weight",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  }
                                },
                                "rhs": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1394:7, col:69>",
                            "kind": "assignment",
                            "variable": "geometry_msgs::Point_<std::allocator<void>>::x",
                            "unqualified_variable": "x",
                            "value": {
                              "kind": "unknown"
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "AmclNode::map_",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": 0
                                            },
                                            "base": {
                                              "kind": "this-expr"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "null-expr"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "variable-reference",
                                        "qualified_name": "resampled",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "resampled",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    },
                                    "rhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "force_publication",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "==",
                                        "lhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "AmclNode::map_",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "int-literal",
                                            "literal": 0
                                          },
                                          "base": {
                                            "kind": "this-expr"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "null-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "resampled",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": ">",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "max_weight",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  }
                                },
                                "rhs": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1395:7, col:69>",
                            "kind": "assignment",
                            "variable": "geometry_msgs::Point_<std::allocator<void>>::y",
                            "unqualified_variable": "y",
                            "value": {
                              "kind": "unknown"
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "AmclNode::map_",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": 0
                                            },
                                            "base": {
                                              "kind": "this-expr"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "null-expr"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "variable-reference",
                                        "qualified_name": "resampled",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "resampled",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    },
                                    "rhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "force_publication",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "==",
                                        "lhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "AmclNode::map_",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "int-literal",
                                            "literal": 0
                                          },
                                          "base": {
                                            "kind": "this-expr"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "null-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "resampled",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": ">",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "max_weight",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  }
                                },
                                "rhs": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1428:7, col:29>",
                            "kind": "assignment",
                            "variable": "AmclNode::last_published_pose",
                            "unqualified_variable": "last_published_pose",
                            "value": {
                              "kind": "variable-reference",
                              "qualified_name": "p",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "AmclNode::map_",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": 0
                                            },
                                            "base": {
                                              "kind": "this-expr"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "null-expr"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "variable-reference",
                                        "qualified_name": "resampled",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "resampled",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    },
                                    "rhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "force_publication",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "==",
                                        "lhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "AmclNode::map_",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "int-literal",
                                            "literal": 0
                                          },
                                          "base": {
                                            "kind": "this-expr"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "null-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "resampled",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": ">",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "max_weight",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  }
                                },
                                "rhs": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1446:9, col:42>",
                            "kind": "assignment",
                            "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                            "unqualified_variable": "frame_id",
                            "value": {
                              "kind": "member-var-ref",
                              "qualified_name": "AmclNode::base_frame_id_",
                              "type": "string",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "unknown"
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "variable-reference",
                                        "qualified_name": "resampled",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "resampled",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    },
                                    "rhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "force_publication",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "unknown"
                                  },
                                  "rhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "resampled",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": ">",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "max_weight",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  }
                                },
                                "rhs": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1447:9, col:58>",
                            "kind": "assignment",
                            "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                            "unqualified_variable": "stamp",
                            "value": {
                              "kind": "member-var-ref",
                              "qualified_name": "std_msgs::Header_<std::allocator<void>>::stamp",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "member-var-ref",
                                "qualified_name": "sensor_msgs::LaserScan_<std::allocator<void>>::header",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "unknown"
                                }
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "unknown"
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "variable-reference",
                                        "qualified_name": "resampled",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "resampled",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    },
                                    "rhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "force_publication",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "unknown"
                                  },
                                  "rhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "resampled",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": ">",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "max_weight",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  }
                                },
                                "rhs": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1459:7, col:26>",
                            "kind": "assignment",
                            "variable": "AmclNode::latest_tf_valid_",
                            "unqualified_variable": "latest_tf_valid_",
                            "value": {
                              "kind": "bool-literal",
                              "literal": true
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "unknown"
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "variable-reference",
                                        "qualified_name": "resampled",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "resampled",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    },
                                    "rhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "force_publication",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "unknown"
                                  },
                                  "rhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "resampled",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": ">",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "max_weight",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  }
                                },
                                "rhs": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1461:7, line:1475:7>",
                            "kind": "if",
                            "trueBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": [
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1468:9, col:42>",
                                  "kind": "assignment",
                                  "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                                  "unqualified_variable": "frame_id",
                                  "value": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "AmclNode::global_frame_id_",
                                    "type": "string",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "||",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "unknown"
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "variable-reference",
                                                "qualified_name": "resampled",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "resampled",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "force_publication",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "unknown"
                                          },
                                          "rhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "resampled",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "max_weight",
                                          "type": "float",
                                          "initial-value": {
                                            "kind": "float-literal",
                                            "literal": 0.0
                                          }
                                        },
                                        "rhs": {
                                          "kind": "float-literal",
                                          "literal": 0.0
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::tf_broadcast_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "bool-literal",
                                        "literal": true
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1469:9, col:39>",
                                  "kind": "assignment",
                                  "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                                  "unqualified_variable": "stamp",
                                  "value": {
                                    "kind": "variable-reference",
                                    "qualified_name": "transform_expiration",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "||",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "unknown"
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "variable-reference",
                                                "qualified_name": "resampled",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "resampled",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "force_publication",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "unknown"
                                          },
                                          "rhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "resampled",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "max_weight",
                                          "type": "float",
                                          "initial-value": {
                                            "kind": "float-literal",
                                            "literal": 0.0
                                          }
                                        },
                                        "rhs": {
                                          "kind": "float-literal",
                                          "literal": 0.0
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::tf_broadcast_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "bool-literal",
                                        "literal": true
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1470:9, col:41>",
                                  "kind": "assignment",
                                  "variable": "geometry_msgs::TransformStamped_<std::allocator<void>>::child_frame_id",
                                  "unqualified_variable": "child_frame_id",
                                  "value": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "AmclNode::odom_frame_id_",
                                    "type": "string",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "||",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "unknown"
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "variable-reference",
                                                "qualified_name": "resampled",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "resampled",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "force_publication",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "unknown"
                                          },
                                          "rhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "resampled",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "max_weight",
                                          "type": "float",
                                          "initial-value": {
                                            "kind": "float-literal",
                                            "literal": 0.0
                                          }
                                        },
                                        "rhs": {
                                          "kind": "float-literal",
                                          "literal": 0.0
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::tf_broadcast_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "bool-literal",
                                        "literal": true
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1474:9, col:33>",
                                  "kind": "assignment",
                                  "variable": "AmclNode::sent_first_transform_",
                                  "unqualified_variable": "sent_first_transform_",
                                  "value": {
                                    "kind": "bool-literal",
                                    "literal": true
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "||",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "unknown"
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "variable-reference",
                                                "qualified_name": "resampled",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "resampled",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "force_publication",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "unknown"
                                          },
                                          "rhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "resampled",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "max_weight",
                                          "type": "float",
                                          "initial-value": {
                                            "kind": "float-literal",
                                            "literal": 0.0
                                          }
                                        },
                                        "rhs": {
                                          "kind": "float-literal",
                                          "literal": 0.0
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::tf_broadcast_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "bool-literal",
                                        "literal": true
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1468:9, col:42>",
                                  "kind": "assignment",
                                  "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                                  "unqualified_variable": "frame_id",
                                  "value": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "AmclNode::global_frame_id_",
                                    "type": "string",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "||",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "unknown"
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "variable-reference",
                                                "qualified_name": "resampled",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "resampled",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "force_publication",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "unknown"
                                          },
                                          "rhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "resampled",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "max_weight",
                                          "type": "float",
                                          "initial-value": {
                                            "kind": "float-literal",
                                            "literal": 0.0
                                          }
                                        },
                                        "rhs": {
                                          "kind": "float-literal",
                                          "literal": 0.0
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::tf_broadcast_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "bool-literal",
                                        "literal": true
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1469:9, col:39>",
                                  "kind": "assignment",
                                  "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                                  "unqualified_variable": "stamp",
                                  "value": {
                                    "kind": "variable-reference",
                                    "qualified_name": "transform_expiration",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "||",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "unknown"
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "variable-reference",
                                                "qualified_name": "resampled",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "resampled",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "force_publication",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "unknown"
                                          },
                                          "rhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "resampled",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "max_weight",
                                          "type": "float",
                                          "initial-value": {
                                            "kind": "float-literal",
                                            "literal": 0.0
                                          }
                                        },
                                        "rhs": {
                                          "kind": "float-literal",
                                          "literal": 0.0
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::tf_broadcast_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "bool-literal",
                                        "literal": true
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1470:9, col:41>",
                                  "kind": "assignment",
                                  "variable": "geometry_msgs::TransformStamped_<std::allocator<void>>::child_frame_id",
                                  "unqualified_variable": "child_frame_id",
                                  "value": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "AmclNode::odom_frame_id_",
                                    "type": "string",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "||",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "unknown"
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "variable-reference",
                                                "qualified_name": "resampled",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "resampled",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "force_publication",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "unknown"
                                          },
                                          "rhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "resampled",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "max_weight",
                                          "type": "float",
                                          "initial-value": {
                                            "kind": "float-literal",
                                            "literal": 0.0
                                          }
                                        },
                                        "rhs": {
                                          "kind": "float-literal",
                                          "literal": 0.0
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::tf_broadcast_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "bool-literal",
                                        "literal": true
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1474:9, col:33>",
                                  "kind": "assignment",
                                  "variable": "AmclNode::sent_first_transform_",
                                  "unqualified_variable": "sent_first_transform_",
                                  "value": {
                                    "kind": "bool-literal",
                                    "literal": true
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "||",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "unknown"
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "variable-reference",
                                                "qualified_name": "resampled",
                                                "type": "bool",
                                                "initial-value": {
                                                  "kind": "bool-literal",
                                                  "literal": false
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "resampled",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "force_publication",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "unknown"
                                          },
                                          "rhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "resampled",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "bool-literal",
                                              "literal": false
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "max_weight",
                                          "type": "float",
                                          "initial-value": {
                                            "kind": "float-literal",
                                            "literal": 0.0
                                          }
                                        },
                                        "rhs": {
                                          "kind": "float-literal",
                                          "literal": 0.0
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::tf_broadcast_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "bool-literal",
                                        "literal": true
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "falseBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": []
                            },
                            "condition": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1391:7, col:27>",
                            "kind": "assignment",
                            "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                            "unqualified_variable": "frame_id",
                            "value": {
                              "kind": "member-var-ref",
                              "qualified_name": "AmclNode::global_frame_id_",
                              "type": "string",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "AmclNode::map_",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": 0
                                            },
                                            "base": {
                                              "kind": "this-expr"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "null-expr"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "variable-reference",
                                        "qualified_name": "resampled",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "resampled",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    },
                                    "rhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "force_publication",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "==",
                                        "lhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "AmclNode::map_",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "int-literal",
                                            "literal": 0
                                          },
                                          "base": {
                                            "kind": "this-expr"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "null-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "resampled",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": ">",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "max_weight",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  }
                                },
                                "rhs": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1392:7, col:43>",
                            "kind": "assignment",
                            "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                            "unqualified_variable": "stamp",
                            "value": {
                              "kind": "member-var-ref",
                              "qualified_name": "std_msgs::Header_<std::allocator<void>>::stamp",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "member-var-ref",
                                "qualified_name": "sensor_msgs::LaserScan_<std::allocator<void>>::header",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "unknown"
                                }
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "AmclNode::map_",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": 0
                                            },
                                            "base": {
                                              "kind": "this-expr"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "null-expr"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "variable-reference",
                                        "qualified_name": "resampled",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "resampled",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    },
                                    "rhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "force_publication",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "==",
                                        "lhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "AmclNode::map_",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "int-literal",
                                            "literal": 0
                                          },
                                          "base": {
                                            "kind": "this-expr"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "null-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "resampled",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": ">",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "max_weight",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  }
                                },
                                "rhs": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1394:7, col:69>",
                            "kind": "assignment",
                            "variable": "geometry_msgs::Point_<std::allocator<void>>::x",
                            "unqualified_variable": "x",
                            "value": {
                              "kind": "unknown"
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "AmclNode::map_",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": 0
                                            },
                                            "base": {
                                              "kind": "this-expr"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "null-expr"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "variable-reference",
                                        "qualified_name": "resampled",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "resampled",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    },
                                    "rhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "force_publication",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "==",
                                        "lhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "AmclNode::map_",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "int-literal",
                                            "literal": 0
                                          },
                                          "base": {
                                            "kind": "this-expr"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "null-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "resampled",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": ">",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "max_weight",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  }
                                },
                                "rhs": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1395:7, col:69>",
                            "kind": "assignment",
                            "variable": "geometry_msgs::Point_<std::allocator<void>>::y",
                            "unqualified_variable": "y",
                            "value": {
                              "kind": "unknown"
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "AmclNode::map_",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": 0
                                            },
                                            "base": {
                                              "kind": "this-expr"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "null-expr"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "variable-reference",
                                        "qualified_name": "resampled",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "resampled",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    },
                                    "rhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "force_publication",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "==",
                                        "lhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "AmclNode::map_",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "int-literal",
                                            "literal": 0
                                          },
                                          "base": {
                                            "kind": "this-expr"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "null-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "resampled",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": ">",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "max_weight",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  }
                                },
                                "rhs": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1428:7, col:29>",
                            "kind": "assignment",
                            "variable": "AmclNode::last_published_pose",
                            "unqualified_variable": "last_published_pose",
                            "value": {
                              "kind": "variable-reference",
                              "qualified_name": "p",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "AmclNode::map_",
                                            "type": "unsupported",
                                            "initial-value": {
                                              "kind": "int-literal",
                                              "literal": 0
                                            },
                                            "base": {
                                              "kind": "this-expr"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "null-expr"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "variable-reference",
                                        "qualified_name": "resampled",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "resampled",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    },
                                    "rhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "force_publication",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "==",
                                        "lhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "AmclNode::map_",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "int-literal",
                                            "literal": 0
                                          },
                                          "base": {
                                            "kind": "this-expr"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "null-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "resampled",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": ">",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "max_weight",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  }
                                },
                                "rhs": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1446:9, col:42>",
                            "kind": "assignment",
                            "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                            "unqualified_variable": "frame_id",
                            "value": {
                              "kind": "member-var-ref",
                              "qualified_name": "AmclNode::base_frame_id_",
                              "type": "string",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "this-expr"
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "unknown"
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "variable-reference",
                                        "qualified_name": "resampled",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "resampled",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    },
                                    "rhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "force_publication",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "unknown"
                                  },
                                  "rhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "resampled",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": ">",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "max_weight",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  }
                                },
                                "rhs": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1447:9, col:58>",
                            "kind": "assignment",
                            "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                            "unqualified_variable": "stamp",
                            "value": {
                              "kind": "member-var-ref",
                              "qualified_name": "std_msgs::Header_<std::allocator<void>>::stamp",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "member-var-ref",
                                "qualified_name": "sensor_msgs::LaserScan_<std::allocator<void>>::header",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "unknown"
                                },
                                "base": {
                                  "kind": "unknown"
                                }
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "unknown"
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "variable-reference",
                                        "qualified_name": "resampled",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "resampled",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    },
                                    "rhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "force_publication",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "unknown"
                                  },
                                  "rhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "resampled",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": ">",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "max_weight",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  }
                                },
                                "rhs": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1459:7, col:26>",
                            "kind": "assignment",
                            "variable": "AmclNode::latest_tf_valid_",
                            "unqualified_variable": "latest_tf_valid_",
                            "value": {
                              "kind": "bool-literal",
                              "literal": true
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "unknown"
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "variable-reference",
                                        "qualified_name": "resampled",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "binary-expr",
                                    "operator": "||",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "resampled",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    },
                                    "rhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "force_publication",
                                      "type": "bool",
                                      "initial-value": {
                                        "kind": "bool-literal",
                                        "literal": false
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "unknown"
                                  },
                                  "rhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "resampled",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": ">",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "max_weight",
                                  "type": "float",
                                  "initial-value": {
                                    "kind": "float-literal",
                                    "literal": 0.0
                                  }
                                },
                                "rhs": {
                                  "kind": "float-literal",
                                  "literal": 0.0
                                }
                              }
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": []
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1365:7, col:32>",
                      "kind": "assignment",
                      "variable": "(anonymous struct)::weight",
                      "unqualified_variable": "weight",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "weight",
                        "type": "float",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::map_",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "null-expr"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "variable-reference",
                                    "qualified_name": "resampled",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "resampled",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                },
                                "rhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "force_publication",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "AmclNode::map_",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      },
                                      "base": {
                                        "kind": "this-expr"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "null-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "variable-reference",
                                "qualified_name": "resampled",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "hyp_count",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "_pf_sample_set_t::cluster_count",
                              "type": "integer",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "unknown"
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1366:7, col:38>",
                      "kind": "assignment",
                      "variable": "(anonymous struct)::pf_pose_mean",
                      "unqualified_variable": "pf_pose_mean",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "pose_mean",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::map_",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "null-expr"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "variable-reference",
                                    "qualified_name": "resampled",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "resampled",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                },
                                "rhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "force_publication",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "AmclNode::map_",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      },
                                      "base": {
                                        "kind": "this-expr"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "null-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "variable-reference",
                                "qualified_name": "resampled",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "hyp_count",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "_pf_sample_set_t::cluster_count",
                              "type": "integer",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "unknown"
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1367:7, col:37>",
                      "kind": "assignment",
                      "variable": "(anonymous struct)::pf_pose_cov",
                      "unqualified_variable": "pf_pose_cov",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "pose_cov",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "||",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::map_",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "int-literal",
                                          "literal": 0
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "null-expr"
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "variable-reference",
                                    "qualified_name": "resampled",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": false
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "||",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "resampled",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                },
                                "rhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "force_publication",
                                  "type": "bool",
                                  "initial-value": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "AmclNode::map_",
                                      "type": "unsupported",
                                      "initial-value": {
                                        "kind": "int-literal",
                                        "literal": 0
                                      },
                                      "base": {
                                        "kind": "this-expr"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "null-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "variable-reference",
                                "qualified_name": "resampled",
                                "type": "bool",
                                "initial-value": {
                                  "kind": "bool-literal",
                                  "literal": false
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "<",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "hyp_count",
                              "type": "integer",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 0
                              }
                            },
                            "rhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "_pf_sample_set_t::cluster_count",
                              "type": "integer",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "unknown"
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "unknown"
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1482:8, line:1506:3>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1484:5, line:1496:5>",
                            "kind": "if",
                            "trueBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": [
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1491:7, col:40>",
                                  "kind": "assignment",
                                  "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                                  "unqualified_variable": "frame_id",
                                  "value": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "AmclNode::global_frame_id_",
                                    "type": "string",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "member-var-ref",
                                                  "qualified_name": "AmclNode::map_",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": 0
                                                  },
                                                  "base": {
                                                    "kind": "this-expr"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "null-expr"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "variable-reference",
                                              "qualified_name": "resampled",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "resampled",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "force_publication",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::latest_tf_valid_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::tf_broadcast_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "bool-literal",
                                        "literal": true
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1492:7, col:37>",
                                  "kind": "assignment",
                                  "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                                  "unqualified_variable": "stamp",
                                  "value": {
                                    "kind": "variable-reference",
                                    "qualified_name": "transform_expiration",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "member-var-ref",
                                                  "qualified_name": "AmclNode::map_",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": 0
                                                  },
                                                  "base": {
                                                    "kind": "this-expr"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "null-expr"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "variable-reference",
                                              "qualified_name": "resampled",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "resampled",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "force_publication",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::latest_tf_valid_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::tf_broadcast_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "bool-literal",
                                        "literal": true
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1493:7, col:39>",
                                  "kind": "assignment",
                                  "variable": "geometry_msgs::TransformStamped_<std::allocator<void>>::child_frame_id",
                                  "unqualified_variable": "child_frame_id",
                                  "value": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "AmclNode::odom_frame_id_",
                                    "type": "string",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "member-var-ref",
                                                  "qualified_name": "AmclNode::map_",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": 0
                                                  },
                                                  "base": {
                                                    "kind": "this-expr"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "null-expr"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "variable-reference",
                                              "qualified_name": "resampled",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "resampled",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "force_publication",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::latest_tf_valid_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::tf_broadcast_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "bool-literal",
                                        "literal": true
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1491:7, col:40>",
                                  "kind": "assignment",
                                  "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                                  "unqualified_variable": "frame_id",
                                  "value": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "AmclNode::global_frame_id_",
                                    "type": "string",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "member-var-ref",
                                                  "qualified_name": "AmclNode::map_",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": 0
                                                  },
                                                  "base": {
                                                    "kind": "this-expr"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "null-expr"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "variable-reference",
                                              "qualified_name": "resampled",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "resampled",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "force_publication",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::latest_tf_valid_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::tf_broadcast_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "bool-literal",
                                        "literal": true
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1492:7, col:37>",
                                  "kind": "assignment",
                                  "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                                  "unqualified_variable": "stamp",
                                  "value": {
                                    "kind": "variable-reference",
                                    "qualified_name": "transform_expiration",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "member-var-ref",
                                                  "qualified_name": "AmclNode::map_",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": 0
                                                  },
                                                  "base": {
                                                    "kind": "this-expr"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "null-expr"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "variable-reference",
                                              "qualified_name": "resampled",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "resampled",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "force_publication",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::latest_tf_valid_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::tf_broadcast_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "bool-literal",
                                        "literal": true
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1493:7, col:39>",
                                  "kind": "assignment",
                                  "variable": "geometry_msgs::TransformStamped_<std::allocator<void>>::child_frame_id",
                                  "unqualified_variable": "child_frame_id",
                                  "value": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "AmclNode::odom_frame_id_",
                                    "type": "string",
                                    "initial-value": {
                                      "kind": "unknown"
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "member-var-ref",
                                                  "qualified_name": "AmclNode::map_",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": 0
                                                  },
                                                  "base": {
                                                    "kind": "this-expr"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "null-expr"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "variable-reference",
                                              "qualified_name": "resampled",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "resampled",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "force_publication",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::latest_tf_valid_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::tf_broadcast_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "bool-literal",
                                        "literal": true
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "falseBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": []
                            },
                            "condition": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1500:5, line:1505:5>",
                            "kind": "if",
                            "trueBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": [
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1503:7, col:30>",
                                  "kind": "call",
                                  "callee": "AmclNode::savePoseToServer",
                                  "arguments": {},
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "member-var-ref",
                                                  "qualified_name": "AmclNode::map_",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": 0
                                                  },
                                                  "base": {
                                                    "kind": "this-expr"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "null-expr"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "variable-reference",
                                              "qualified_name": "resampled",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "resampled",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "force_publication",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::latest_tf_valid_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "unknown"
                                        },
                                        "rhs": {
                                          "kind": "float-literal",
                                          "literal": 0.0
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": ">=",
                                        "lhs": {
                                          "kind": "unknown"
                                        },
                                        "rhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "AmclNode::save_pose_period",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "unknown"
                                          },
                                          "base": {
                                            "kind": "this-expr"
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1504:7, col:29>",
                                  "kind": "assignment",
                                  "variable": "AmclNode::save_pose_last_time",
                                  "unqualified_variable": "save_pose_last_time",
                                  "value": {
                                    "kind": "variable-reference",
                                    "qualified_name": "now",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "member-var-ref",
                                                  "qualified_name": "AmclNode::map_",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": 0
                                                  },
                                                  "base": {
                                                    "kind": "this-expr"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "null-expr"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "variable-reference",
                                              "qualified_name": "resampled",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "resampled",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "force_publication",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::latest_tf_valid_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "unknown"
                                        },
                                        "rhs": {
                                          "kind": "float-literal",
                                          "literal": 0.0
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": ">=",
                                        "lhs": {
                                          "kind": "unknown"
                                        },
                                        "rhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "AmclNode::save_pose_period",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "unknown"
                                          },
                                          "base": {
                                            "kind": "this-expr"
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1503:7, col:30>",
                                  "kind": "call",
                                  "callee": "AmclNode::savePoseToServer",
                                  "arguments": {},
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "member-var-ref",
                                                  "qualified_name": "AmclNode::map_",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": 0
                                                  },
                                                  "base": {
                                                    "kind": "this-expr"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "null-expr"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "variable-reference",
                                              "qualified_name": "resampled",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "resampled",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "force_publication",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::latest_tf_valid_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "unknown"
                                        },
                                        "rhs": {
                                          "kind": "float-literal",
                                          "literal": 0.0
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": ">=",
                                        "lhs": {
                                          "kind": "unknown"
                                        },
                                        "rhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "AmclNode::save_pose_period",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "unknown"
                                          },
                                          "base": {
                                            "kind": "this-expr"
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1504:7, col:29>",
                                  "kind": "assignment",
                                  "variable": "AmclNode::save_pose_last_time",
                                  "unqualified_variable": "save_pose_last_time",
                                  "value": {
                                    "kind": "variable-reference",
                                    "qualified_name": "now",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "member-var-ref",
                                                  "qualified_name": "AmclNode::map_",
                                                  "type": "unsupported",
                                                  "initial-value": {
                                                    "kind": "int-literal",
                                                    "literal": 0
                                                  },
                                                  "base": {
                                                    "kind": "this-expr"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "null-expr"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "variable-reference",
                                              "qualified_name": "resampled",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "||",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "resampled",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            },
                                            "rhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "force_publication",
                                              "type": "bool",
                                              "initial-value": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "AmclNode::latest_tf_valid_",
                                        "type": "bool",
                                        "initial-value": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        },
                                        "base": {
                                          "kind": "this-expr"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": ">",
                                        "lhs": {
                                          "kind": "unknown"
                                        },
                                        "rhs": {
                                          "kind": "float-literal",
                                          "literal": 0.0
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": ">=",
                                        "lhs": {
                                          "kind": "unknown"
                                        },
                                        "rhs": {
                                          "kind": "member-var-ref",
                                          "qualified_name": "AmclNode::save_pose_period",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "unknown"
                                          },
                                          "base": {
                                            "kind": "this-expr"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "falseBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": []
                            },
                            "condition": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": []
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  ]
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              }
            ]
          }
        },
        {
          "name": "AmclNode::reconfigureCB",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:519:5, col:31>",
                "kind": "assignment",
                "variable": "AmclNode::first_reconfigure_call_",
                "unqualified_variable": "first_reconfigure_call_",
                "value": {
                  "kind": "bool-literal",
                  "literal": false
                },
                "path_condition": {
                  "kind": "member-var-ref",
                  "qualified_name": "AmclNode::first_reconfigure_call_",
                  "type": "bool",
                  "initial-value": {
                    "kind": "bool-literal",
                    "literal": true
                  },
                  "base": {
                    "kind": "this-expr"
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:520:5, col:23>",
                "kind": "assignment",
                "variable": "AmclNode::default_config_",
                "unqualified_variable": "default_config_",
                "value": {
                  "kind": "variable-reference",
                  "qualified_name": "config",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  }
                },
                "path_condition": {
                  "kind": "member-var-ref",
                  "qualified_name": "AmclNode::first_reconfigure_call_",
                  "type": "bool",
                  "initial-value": {
                    "kind": "bool-literal",
                    "literal": true
                  },
                  "base": {
                    "kind": "this-expr"
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:525:5, col:14>",
                "kind": "assignment",
                "variable": "config",
                "unqualified_variable": "config",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "AmclNode::default_config_",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "this-expr"
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::first_reconfigure_call_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "bool-literal",
                        "literal": true
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "amcl::AMCLConfig::restore_defaults",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": false
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "config",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:527:5, col:31>",
                "kind": "assignment",
                "variable": "amcl::AMCLConfig::restore_defaults",
                "unqualified_variable": "restore_defaults",
                "value": {
                  "kind": "bool-literal",
                  "literal": false
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::first_reconfigure_call_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "bool-literal",
                        "literal": true
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "member-var-ref",
                    "qualified_name": "amcl::AMCLConfig::restore_defaults",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": false
                    },
                    "base": {
                      "kind": "variable-reference",
                      "qualified_name": "config",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "unknown"
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:530:3, col:22>",
                "kind": "assignment",
                "variable": "AmclNode::d_thresh_",
                "unqualified_variable": "d_thresh_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::update_min_d",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:531:3, col:22>",
                "kind": "assignment",
                "variable": "AmclNode::a_thresh_",
                "unqualified_variable": "a_thresh_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::update_min_a",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:533:3, col:31>",
                "kind": "assignment",
                "variable": "AmclNode::resample_interval_",
                "unqualified_variable": "resample_interval_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::resample_interval",
                  "type": "integer",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:535:3, col:29>",
                "kind": "assignment",
                "variable": "AmclNode::laser_min_range_",
                "unqualified_variable": "laser_min_range_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::laser_min_range",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:536:3, col:29>",
                "kind": "assignment",
                "variable": "AmclNode::laser_max_range_",
                "unqualified_variable": "laser_max_range_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::laser_max_range",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:538:3, col:65>",
                "kind": "assignment",
                "variable": "AmclNode::gui_publish_period",
                "unqualified_variable": "gui_publish_period",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:539:3, col:61>",
                "kind": "assignment",
                "variable": "AmclNode::save_pose_period",
                "unqualified_variable": "save_pose_period",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:543:3, col:23>",
                "kind": "assignment",
                "variable": "AmclNode::max_beams_",
                "unqualified_variable": "max_beams_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::laser_max_beams",
                  "type": "integer",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:544:3, col:20>",
                "kind": "assignment",
                "variable": "AmclNode::alpha1_",
                "unqualified_variable": "alpha1_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::odom_alpha1",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:545:3, col:20>",
                "kind": "assignment",
                "variable": "AmclNode::alpha2_",
                "unqualified_variable": "alpha2_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::odom_alpha2",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:546:3, col:20>",
                "kind": "assignment",
                "variable": "AmclNode::alpha3_",
                "unqualified_variable": "alpha3_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::odom_alpha3",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:547:3, col:20>",
                "kind": "assignment",
                "variable": "AmclNode::alpha4_",
                "unqualified_variable": "alpha4_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::odom_alpha4",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:548:3, col:20>",
                "kind": "assignment",
                "variable": "AmclNode::alpha5_",
                "unqualified_variable": "alpha5_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::odom_alpha5",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:550:3, col:19>",
                "kind": "assignment",
                "variable": "AmclNode::z_hit_",
                "unqualified_variable": "z_hit_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::laser_z_hit",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:551:3, col:21>",
                "kind": "assignment",
                "variable": "AmclNode::z_short_",
                "unqualified_variable": "z_short_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::laser_z_short",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:552:3, col:19>",
                "kind": "assignment",
                "variable": "AmclNode::z_max_",
                "unqualified_variable": "z_max_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::laser_z_max",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:553:3, col:20>",
                "kind": "assignment",
                "variable": "AmclNode::z_rand_",
                "unqualified_variable": "z_rand_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::laser_z_rand",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:554:3, col:23>",
                "kind": "assignment",
                "variable": "AmclNode::sigma_hit_",
                "unqualified_variable": "sigma_hit_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::laser_sigma_hit",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:555:3, col:26>",
                "kind": "assignment",
                "variable": "AmclNode::lambda_short_",
                "unqualified_variable": "lambda_short_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::laser_lambda_short",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:556:3, col:39>",
                "kind": "assignment",
                "variable": "AmclNode::laser_likelihood_max_dist_",
                "unqualified_variable": "laser_likelihood_max_dist_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::laser_likelihood_max_dist",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:559:5, col:25>",
                "kind": "assignment",
                "variable": "AmclNode::laser_model_type_",
                "unqualified_variable": "laser_model_type_",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "amcl::LASER_MODEL_BEAM",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 0
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 0
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::first_reconfigure_call_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "bool-literal",
                        "literal": true
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "amcl::AMCLConfig::laser_model_type",
                      "type": "string",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "variable-reference",
                        "qualified_name": "config",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "beam"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:561:5, col:25>",
                "kind": "assignment",
                "variable": "AmclNode::laser_model_type_",
                "unqualified_variable": "laser_model_type_",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "amcl::LASER_MODEL_LIKELIHOOD_FIELD",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 1
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 1
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "member-var-ref",
                        "qualified_name": "AmclNode::first_reconfigure_call_",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": true
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "amcl::AMCLConfig::laser_model_type",
                          "type": "string",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "config",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "beam"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "amcl::AMCLConfig::laser_model_type",
                      "type": "string",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "variable-reference",
                        "qualified_name": "config",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "likelihood_field"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:563:5, col:25>",
                "kind": "assignment",
                "variable": "AmclNode::laser_model_type_",
                "unqualified_variable": "laser_model_type_",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "amcl::LASER_MODEL_LIKELIHOOD_FIELD_PROB",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 2
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 2
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::first_reconfigure_call_",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": true
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "amcl::AMCLConfig::laser_model_type",
                            "type": "string",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "variable-reference",
                              "qualified_name": "config",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "string-literal",
                            "literal": "beam"
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "amcl::AMCLConfig::laser_model_type",
                          "type": "string",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "config",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "likelihood_field"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "amcl::AMCLConfig::laser_model_type",
                      "type": "string",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "variable-reference",
                        "qualified_name": "config",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "likelihood_field_prob"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:566:5, col:24>",
                "kind": "assignment",
                "variable": "AmclNode::odom_model_type_",
                "unqualified_variable": "odom_model_type_",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "amcl::ODOM_MODEL_DIFF",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 0
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 0
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::first_reconfigure_call_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "bool-literal",
                        "literal": true
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "amcl::AMCLConfig::odom_model_type",
                      "type": "string",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "variable-reference",
                        "qualified_name": "config",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "diff"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:568:5, col:24>",
                "kind": "assignment",
                "variable": "AmclNode::odom_model_type_",
                "unqualified_variable": "odom_model_type_",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "amcl::ODOM_MODEL_OMNI",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 1
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 1
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "member-var-ref",
                        "qualified_name": "AmclNode::first_reconfigure_call_",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": true
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "amcl::AMCLConfig::odom_model_type",
                          "type": "string",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "config",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "diff"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "amcl::AMCLConfig::odom_model_type",
                      "type": "string",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "variable-reference",
                        "qualified_name": "config",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "omni"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:570:5, col:24>",
                "kind": "assignment",
                "variable": "AmclNode::odom_model_type_",
                "unqualified_variable": "odom_model_type_",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "amcl::ODOM_MODEL_DIFF_CORRECTED",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 2
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 2
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "member-var-ref",
                          "qualified_name": "AmclNode::first_reconfigure_call_",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": true
                          },
                          "base": {
                            "kind": "this-expr"
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "amcl::AMCLConfig::odom_model_type",
                            "type": "string",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "variable-reference",
                              "qualified_name": "config",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "string-literal",
                            "literal": "diff"
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "amcl::AMCLConfig::odom_model_type",
                          "type": "string",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "config",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "omni"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "amcl::AMCLConfig::odom_model_type",
                      "type": "string",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "variable-reference",
                        "qualified_name": "config",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "diff-corrected"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:572:5, col:24>",
                "kind": "assignment",
                "variable": "AmclNode::odom_model_type_",
                "unqualified_variable": "odom_model_type_",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "amcl::ODOM_MODEL_OMNI_CORRECTED",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 3
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 3
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::first_reconfigure_call_",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": true
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "member-var-ref",
                              "qualified_name": "amcl::AMCLConfig::odom_model_type",
                              "type": "string",
                              "initial-value": {
                                "kind": "unknown"
                              },
                              "base": {
                                "kind": "variable-reference",
                                "qualified_name": "config",
                                "type": "unsupported",
                                "initial-value": {
                                  "kind": "unknown"
                                }
                              }
                            },
                            "rhs": {
                              "kind": "string-literal",
                              "literal": "diff"
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "amcl::AMCLConfig::odom_model_type",
                            "type": "string",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "variable-reference",
                              "qualified_name": "config",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "string-literal",
                            "literal": "omni"
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "negate-expr",
                      "subExpr": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "amcl::AMCLConfig::odom_model_type",
                          "type": "string",
                          "initial-value": {
                            "kind": "unknown"
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "config",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "diff-corrected"
                        }
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "==",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "amcl::AMCLConfig::odom_model_type",
                      "type": "string",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "variable-reference",
                        "qualified_name": "config",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "string-literal",
                      "literal": "omni-corrected"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:577:5, col:35>",
                "kind": "assignment",
                "variable": "amcl::AMCLConfig::max_particles",
                "unqualified_variable": "max_particles",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::min_particles",
                  "type": "integer",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::first_reconfigure_call_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "bool-literal",
                        "literal": true
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": ">",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "amcl::AMCLConfig::min_particles",
                      "type": "integer",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "variable-reference",
                        "qualified_name": "config",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "amcl::AMCLConfig::max_particles",
                      "type": "integer",
                      "initial-value": {
                        "kind": "unknown"
                      },
                      "base": {
                        "kind": "variable-reference",
                        "qualified_name": "config",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:580:3, col:27>",
                "kind": "assignment",
                "variable": "AmclNode::min_particles_",
                "unqualified_variable": "min_particles_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::min_particles",
                  "type": "integer",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:581:3, col:27>",
                "kind": "assignment",
                "variable": "AmclNode::max_particles_",
                "unqualified_variable": "max_particles_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::max_particles",
                  "type": "integer",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:582:3, col:24>",
                "kind": "assignment",
                "variable": "AmclNode::alpha_slow_",
                "unqualified_variable": "alpha_slow_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::recovery_alpha_slow",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:583:3, col:24>",
                "kind": "assignment",
                "variable": "AmclNode::alpha_fast_",
                "unqualified_variable": "alpha_fast_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::recovery_alpha_fast",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:584:3, col:26>",
                "kind": "assignment",
                "variable": "AmclNode::tf_broadcast_",
                "unqualified_variable": "tf_broadcast_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::tf_broadcast",
                  "type": "bool",
                  "initial-value": {
                    "kind": "bool-literal",
                    "literal": false
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:586:3, col:24>",
                "kind": "assignment",
                "variable": "AmclNode::do_beamskip_",
                "unqualified_variable": "do_beamskip_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::do_beamskip",
                  "type": "bool",
                  "initial-value": {
                    "kind": "bool-literal",
                    "literal": false
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:587:3, col:32>",
                "kind": "assignment",
                "variable": "AmclNode::beam_skip_distance_",
                "unqualified_variable": "beam_skip_distance_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::beam_skip_distance",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:588:3, col:33>",
                "kind": "assignment",
                "variable": "AmclNode::beam_skip_threshold_",
                "unqualified_variable": "beam_skip_threshold_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::beam_skip_threshold",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:598:5, col:11 <Spelling=/opt/rosdiscover/lib/clang/11.1.0/include/stddef.h:84:18>>",
                "kind": "assignment",
                "variable": "AmclNode::pf_",
                "unqualified_variable": "pf_",
                "value": {
                  "kind": "null-expr"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "negate-expr",
                    "subExpr": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::first_reconfigure_call_",
                      "type": "bool",
                      "initial-value": {
                        "kind": "bool-literal",
                        "literal": true
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "!=",
                    "lhs": {
                      "kind": "member-var-ref",
                      "qualified_name": "AmclNode::pf_",
                      "type": "unsupported",
                      "initial-value": {
                        "kind": "int-literal",
                        "literal": 0
                      },
                      "base": {
                        "kind": "this-expr"
                      }
                    },
                    "rhs": {
                      "kind": "null-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:600:3, line:603:30>",
                "kind": "assignment",
                "variable": "AmclNode::pf_",
                "unqualified_variable": "pf_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:605:3, col:20>",
                "kind": "assignment",
                "variable": "AmclNode::pf_err_",
                "unqualified_variable": "pf_err_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::kld_err",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:606:3, col:18>",
                "kind": "assignment",
                "variable": "AmclNode::pf_z_",
                "unqualified_variable": "pf_z_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::kld_z",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:607:3, col:18>",
                "kind": "assignment",
                "variable": "_pf_t::pop_err",
                "unqualified_variable": "pop_err",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "AmclNode::pf_err_",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "this-expr"
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:608:3, col:16>",
                "kind": "assignment",
                "variable": "_pf_t::pop_z",
                "unqualified_variable": "pop_z",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "AmclNode::pf_z_",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "this-expr"
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:620:3, col:14>",
                "kind": "assignment",
                "variable": "AmclNode::pf_init_",
                "unqualified_variable": "pf_init_",
                "value": {
                  "kind": "bool-literal",
                  "literal": false
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:625:3, col:24>",
                "kind": "assignment",
                "variable": "AmclNode::odom_",
                "unqualified_variable": "odom_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:630:3, col:42>",
                "kind": "assignment",
                "variable": "AmclNode::laser_",
                "unqualified_variable": "laser_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:650:3, col:51>",
                "kind": "assignment",
                "variable": "AmclNode::odom_frame_id_",
                "unqualified_variable": "odom_frame_id_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:651:3, col:51>",
                "kind": "assignment",
                "variable": "AmclNode::base_frame_id_",
                "unqualified_variable": "base_frame_id_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:652:3, col:55>",
                "kind": "assignment",
                "variable": "AmclNode::global_frame_id_",
                "unqualified_variable": "global_frame_id_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:655:3, line:660:65>",
                "kind": "assignment",
                "variable": "AmclNode::laser_scan_filter_",
                "unqualified_variable": "laser_scan_filter_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:661:3, line:662:61>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "unknown"
                },
                "format": "boost/_bi::bind_t",
                "callback-name": "AmclNode::laserReceived"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:661:3, line:662:61>",
                "kind": "call",
                "callee": "AmclNode::laserReceived",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:664:3, col:91>",
                "kind": "assignment",
                "variable": "AmclNode::initial_pose_sub_",
                "unqualified_variable": "initial_pose_sub_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:664:23, col:91>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "initialpose"
                  }
                },
                "format": "geometry_msgs/PoseWithCovarianceStamped",
                "callback-name": "AmclNode::initialPoseReceived"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:664:23, col:91>",
                "kind": "call",
                "callee": "AmclNode::initialPoseReceived",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:517:3, line:522:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:519:5, col:31>",
                      "kind": "assignment",
                      "variable": "AmclNode::first_reconfigure_call_",
                      "unqualified_variable": "first_reconfigure_call_",
                      "value": {
                        "kind": "bool-literal",
                        "literal": false
                      },
                      "path_condition": {
                        "kind": "member-var-ref",
                        "qualified_name": "AmclNode::first_reconfigure_call_",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": true
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:520:5, col:23>",
                      "kind": "assignment",
                      "variable": "AmclNode::default_config_",
                      "unqualified_variable": "default_config_",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "config",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "member-var-ref",
                        "qualified_name": "AmclNode::first_reconfigure_call_",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": true
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:519:5, col:31>",
                      "kind": "assignment",
                      "variable": "AmclNode::first_reconfigure_call_",
                      "unqualified_variable": "first_reconfigure_call_",
                      "value": {
                        "kind": "bool-literal",
                        "literal": false
                      },
                      "path_condition": {
                        "kind": "member-var-ref",
                        "qualified_name": "AmclNode::first_reconfigure_call_",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": true
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:520:5, col:23>",
                      "kind": "assignment",
                      "variable": "AmclNode::default_config_",
                      "unqualified_variable": "default_config_",
                      "value": {
                        "kind": "variable-reference",
                        "qualified_name": "config",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "path_condition": {
                        "kind": "member-var-ref",
                        "qualified_name": "AmclNode::first_reconfigure_call_",
                        "type": "bool",
                        "initial-value": {
                          "kind": "bool-literal",
                          "literal": true
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:524:3, line:528:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:525:5, col:14>",
                      "kind": "assignment",
                      "variable": "config",
                      "unqualified_variable": "config",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "AmclNode::default_config_",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::first_reconfigure_call_",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": true
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "amcl::AMCLConfig::restore_defaults",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "config",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:527:5, col:31>",
                      "kind": "assignment",
                      "variable": "amcl::AMCLConfig::restore_defaults",
                      "unqualified_variable": "restore_defaults",
                      "value": {
                        "kind": "bool-literal",
                        "literal": false
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::first_reconfigure_call_",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": true
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "amcl::AMCLConfig::restore_defaults",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "config",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:525:5, col:14>",
                      "kind": "assignment",
                      "variable": "config",
                      "unqualified_variable": "config",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "AmclNode::default_config_",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "this-expr"
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::first_reconfigure_call_",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": true
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "amcl::AMCLConfig::restore_defaults",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "config",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:527:5, col:31>",
                      "kind": "assignment",
                      "variable": "amcl::AMCLConfig::restore_defaults",
                      "unqualified_variable": "restore_defaults",
                      "value": {
                        "kind": "bool-literal",
                        "literal": false
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::first_reconfigure_call_",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": true
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "member-var-ref",
                          "qualified_name": "amcl::AMCLConfig::restore_defaults",
                          "type": "bool",
                          "initial-value": {
                            "kind": "bool-literal",
                            "literal": false
                          },
                          "base": {
                            "kind": "variable-reference",
                            "qualified_name": "config",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:530:3, col:22>",
                "kind": "assignment",
                "variable": "AmclNode::d_thresh_",
                "unqualified_variable": "d_thresh_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::update_min_d",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:531:3, col:22>",
                "kind": "assignment",
                "variable": "AmclNode::a_thresh_",
                "unqualified_variable": "a_thresh_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::update_min_a",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:533:3, col:31>",
                "kind": "assignment",
                "variable": "AmclNode::resample_interval_",
                "unqualified_variable": "resample_interval_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::resample_interval",
                  "type": "integer",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:535:3, col:29>",
                "kind": "assignment",
                "variable": "AmclNode::laser_min_range_",
                "unqualified_variable": "laser_min_range_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::laser_min_range",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:536:3, col:29>",
                "kind": "assignment",
                "variable": "AmclNode::laser_max_range_",
                "unqualified_variable": "laser_max_range_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::laser_max_range",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:538:3, col:65>",
                "kind": "assignment",
                "variable": "AmclNode::gui_publish_period",
                "unqualified_variable": "gui_publish_period",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:539:3, col:61>",
                "kind": "assignment",
                "variable": "AmclNode::save_pose_period",
                "unqualified_variable": "save_pose_period",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:543:3, col:23>",
                "kind": "assignment",
                "variable": "AmclNode::max_beams_",
                "unqualified_variable": "max_beams_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::laser_max_beams",
                  "type": "integer",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:544:3, col:20>",
                "kind": "assignment",
                "variable": "AmclNode::alpha1_",
                "unqualified_variable": "alpha1_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::odom_alpha1",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:545:3, col:20>",
                "kind": "assignment",
                "variable": "AmclNode::alpha2_",
                "unqualified_variable": "alpha2_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::odom_alpha2",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:546:3, col:20>",
                "kind": "assignment",
                "variable": "AmclNode::alpha3_",
                "unqualified_variable": "alpha3_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::odom_alpha3",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:547:3, col:20>",
                "kind": "assignment",
                "variable": "AmclNode::alpha4_",
                "unqualified_variable": "alpha4_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::odom_alpha4",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:548:3, col:20>",
                "kind": "assignment",
                "variable": "AmclNode::alpha5_",
                "unqualified_variable": "alpha5_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::odom_alpha5",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:550:3, col:19>",
                "kind": "assignment",
                "variable": "AmclNode::z_hit_",
                "unqualified_variable": "z_hit_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::laser_z_hit",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:551:3, col:21>",
                "kind": "assignment",
                "variable": "AmclNode::z_short_",
                "unqualified_variable": "z_short_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::laser_z_short",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:552:3, col:19>",
                "kind": "assignment",
                "variable": "AmclNode::z_max_",
                "unqualified_variable": "z_max_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::laser_z_max",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:553:3, col:20>",
                "kind": "assignment",
                "variable": "AmclNode::z_rand_",
                "unqualified_variable": "z_rand_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::laser_z_rand",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:554:3, col:23>",
                "kind": "assignment",
                "variable": "AmclNode::sigma_hit_",
                "unqualified_variable": "sigma_hit_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::laser_sigma_hit",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:555:3, col:26>",
                "kind": "assignment",
                "variable": "AmclNode::lambda_short_",
                "unqualified_variable": "lambda_short_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::laser_lambda_short",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:556:3, col:39>",
                "kind": "assignment",
                "variable": "AmclNode::laser_likelihood_max_dist_",
                "unqualified_variable": "laser_likelihood_max_dist_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::laser_likelihood_max_dist",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:558:3, line:563:25>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:559:5, col:25>",
                      "kind": "assignment",
                      "variable": "AmclNode::laser_model_type_",
                      "unqualified_variable": "laser_model_type_",
                      "value": {
                        "kind": "enum-ref",
                        "qualified_name": "amcl::LASER_MODEL_BEAM",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        },
                        "value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::first_reconfigure_call_",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": true
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "amcl::AMCLConfig::laser_model_type",
                            "type": "string",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "variable-reference",
                              "qualified_name": "config",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "string-literal",
                            "literal": "beam"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:559:5, col:25>",
                      "kind": "assignment",
                      "variable": "AmclNode::laser_model_type_",
                      "unqualified_variable": "laser_model_type_",
                      "value": {
                        "kind": "enum-ref",
                        "qualified_name": "amcl::LASER_MODEL_BEAM",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        },
                        "value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::first_reconfigure_call_",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": true
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "amcl::AMCLConfig::laser_model_type",
                            "type": "string",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "variable-reference",
                              "qualified_name": "config",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "string-literal",
                            "literal": "beam"
                          }
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:560:8, line:563:25>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:561:5, col:25>",
                            "kind": "assignment",
                            "variable": "AmclNode::laser_model_type_",
                            "unqualified_variable": "laser_model_type_",
                            "value": {
                              "kind": "enum-ref",
                              "qualified_name": "amcl::LASER_MODEL_LIKELIHOOD_FIELD",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              },
                              "value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "AmclNode::first_reconfigure_call_",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": true
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "amcl::AMCLConfig::laser_model_type",
                                      "type": "string",
                                      "initial-value": {
                                        "kind": "unknown"
                                      },
                                      "base": {
                                        "kind": "variable-reference",
                                        "qualified_name": "config",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "string-literal",
                                      "literal": "beam"
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "amcl::AMCLConfig::laser_model_type",
                                  "type": "string",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "variable-reference",
                                    "qualified_name": "config",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "string-literal",
                                  "literal": "likelihood_field"
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:561:5, col:25>",
                            "kind": "assignment",
                            "variable": "AmclNode::laser_model_type_",
                            "unqualified_variable": "laser_model_type_",
                            "value": {
                              "kind": "enum-ref",
                              "qualified_name": "amcl::LASER_MODEL_LIKELIHOOD_FIELD",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              },
                              "value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "AmclNode::first_reconfigure_call_",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": true
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "amcl::AMCLConfig::laser_model_type",
                                      "type": "string",
                                      "initial-value": {
                                        "kind": "unknown"
                                      },
                                      "base": {
                                        "kind": "variable-reference",
                                        "qualified_name": "config",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "string-literal",
                                      "literal": "beam"
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "amcl::AMCLConfig::laser_model_type",
                                  "type": "string",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "variable-reference",
                                    "qualified_name": "config",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "string-literal",
                                  "literal": "likelihood_field"
                                }
                              }
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:562:8, line:563:25>",
                            "kind": "if",
                            "trueBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": [
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:563:5, col:25>",
                                  "kind": "assignment",
                                  "variable": "AmclNode::laser_model_type_",
                                  "unqualified_variable": "laser_model_type_",
                                  "value": {
                                    "kind": "enum-ref",
                                    "qualified_name": "amcl::LASER_MODEL_LIKELIHOOD_FIELD_PROB",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 2
                                    },
                                    "value": {
                                      "kind": "int-literal",
                                      "literal": 2
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "AmclNode::first_reconfigure_call_",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "bool-literal",
                                              "literal": true
                                            },
                                            "base": {
                                              "kind": "this-expr"
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "amcl::AMCLConfig::laser_model_type",
                                              "type": "string",
                                              "initial-value": {
                                                "kind": "unknown"
                                              },
                                              "base": {
                                                "kind": "variable-reference",
                                                "qualified_name": "config",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "string-literal",
                                              "literal": "beam"
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "amcl::AMCLConfig::laser_model_type",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "unknown"
                                            },
                                            "base": {
                                              "kind": "variable-reference",
                                              "qualified_name": "config",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "unknown"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "likelihood_field"
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "amcl::AMCLConfig::laser_model_type",
                                        "type": "string",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "variable-reference",
                                          "qualified_name": "config",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "string-literal",
                                        "literal": "likelihood_field_prob"
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:563:5, col:25>",
                                  "kind": "assignment",
                                  "variable": "AmclNode::laser_model_type_",
                                  "unqualified_variable": "laser_model_type_",
                                  "value": {
                                    "kind": "enum-ref",
                                    "qualified_name": "amcl::LASER_MODEL_LIKELIHOOD_FIELD_PROB",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 2
                                    },
                                    "value": {
                                      "kind": "int-literal",
                                      "literal": 2
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "AmclNode::first_reconfigure_call_",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "bool-literal",
                                              "literal": true
                                            },
                                            "base": {
                                              "kind": "this-expr"
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "amcl::AMCLConfig::laser_model_type",
                                              "type": "string",
                                              "initial-value": {
                                                "kind": "unknown"
                                              },
                                              "base": {
                                                "kind": "variable-reference",
                                                "qualified_name": "config",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "string-literal",
                                              "literal": "beam"
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "amcl::AMCLConfig::laser_model_type",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "unknown"
                                            },
                                            "base": {
                                              "kind": "variable-reference",
                                              "qualified_name": "config",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "unknown"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "likelihood_field"
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "amcl::AMCLConfig::laser_model_type",
                                        "type": "string",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "variable-reference",
                                          "qualified_name": "config",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "string-literal",
                                        "literal": "likelihood_field_prob"
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "falseBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": []
                            },
                            "condition": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        ]
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  ]
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:565:3, line:572:24>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:566:5, col:24>",
                      "kind": "assignment",
                      "variable": "AmclNode::odom_model_type_",
                      "unqualified_variable": "odom_model_type_",
                      "value": {
                        "kind": "enum-ref",
                        "qualified_name": "amcl::ODOM_MODEL_DIFF",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        },
                        "value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::first_reconfigure_call_",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": true
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "amcl::AMCLConfig::odom_model_type",
                            "type": "string",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "variable-reference",
                              "qualified_name": "config",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "string-literal",
                            "literal": "diff"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:566:5, col:24>",
                      "kind": "assignment",
                      "variable": "AmclNode::odom_model_type_",
                      "unqualified_variable": "odom_model_type_",
                      "value": {
                        "kind": "enum-ref",
                        "qualified_name": "amcl::ODOM_MODEL_DIFF",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "int-literal",
                          "literal": 0
                        },
                        "value": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::first_reconfigure_call_",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": true
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "amcl::AMCLConfig::odom_model_type",
                            "type": "string",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "variable-reference",
                              "qualified_name": "config",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "string-literal",
                            "literal": "diff"
                          }
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:567:8, line:572:24>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:568:5, col:24>",
                            "kind": "assignment",
                            "variable": "AmclNode::odom_model_type_",
                            "unqualified_variable": "odom_model_type_",
                            "value": {
                              "kind": "enum-ref",
                              "qualified_name": "amcl::ODOM_MODEL_OMNI",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              },
                              "value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "AmclNode::first_reconfigure_call_",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": true
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "amcl::AMCLConfig::odom_model_type",
                                      "type": "string",
                                      "initial-value": {
                                        "kind": "unknown"
                                      },
                                      "base": {
                                        "kind": "variable-reference",
                                        "qualified_name": "config",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "string-literal",
                                      "literal": "diff"
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "amcl::AMCLConfig::odom_model_type",
                                  "type": "string",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "variable-reference",
                                    "qualified_name": "config",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "string-literal",
                                  "literal": "omni"
                                }
                              }
                            }
                          },
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:568:5, col:24>",
                            "kind": "assignment",
                            "variable": "AmclNode::odom_model_type_",
                            "unqualified_variable": "odom_model_type_",
                            "value": {
                              "kind": "enum-ref",
                              "qualified_name": "amcl::ODOM_MODEL_OMNI",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "int-literal",
                                "literal": 1
                              },
                              "value": {
                                "kind": "int-literal",
                                "literal": 1
                              }
                            },
                            "path_condition": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "member-var-ref",
                                    "qualified_name": "AmclNode::first_reconfigure_call_",
                                    "type": "bool",
                                    "initial-value": {
                                      "kind": "bool-literal",
                                      "literal": true
                                    },
                                    "base": {
                                      "kind": "this-expr"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "member-var-ref",
                                      "qualified_name": "amcl::AMCLConfig::odom_model_type",
                                      "type": "string",
                                      "initial-value": {
                                        "kind": "unknown"
                                      },
                                      "base": {
                                        "kind": "variable-reference",
                                        "qualified_name": "config",
                                        "type": "unsupported",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "string-literal",
                                      "literal": "diff"
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "member-var-ref",
                                  "qualified_name": "amcl::AMCLConfig::odom_model_type",
                                  "type": "string",
                                  "initial-value": {
                                    "kind": "unknown"
                                  },
                                  "base": {
                                    "kind": "variable-reference",
                                    "qualified_name": "config",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "string-literal",
                                  "literal": "omni"
                                }
                              }
                            }
                          }
                        ]
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:569:8, line:572:24>",
                            "kind": "if",
                            "trueBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": [
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:570:5, col:24>",
                                  "kind": "assignment",
                                  "variable": "AmclNode::odom_model_type_",
                                  "unqualified_variable": "odom_model_type_",
                                  "value": {
                                    "kind": "enum-ref",
                                    "qualified_name": "amcl::ODOM_MODEL_DIFF_CORRECTED",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 2
                                    },
                                    "value": {
                                      "kind": "int-literal",
                                      "literal": 2
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "AmclNode::first_reconfigure_call_",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "bool-literal",
                                              "literal": true
                                            },
                                            "base": {
                                              "kind": "this-expr"
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "amcl::AMCLConfig::odom_model_type",
                                              "type": "string",
                                              "initial-value": {
                                                "kind": "unknown"
                                              },
                                              "base": {
                                                "kind": "variable-reference",
                                                "qualified_name": "config",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "string-literal",
                                              "literal": "diff"
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "amcl::AMCLConfig::odom_model_type",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "unknown"
                                            },
                                            "base": {
                                              "kind": "variable-reference",
                                              "qualified_name": "config",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "unknown"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "omni"
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "amcl::AMCLConfig::odom_model_type",
                                        "type": "string",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "variable-reference",
                                          "qualified_name": "config",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "string-literal",
                                        "literal": "diff-corrected"
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:570:5, col:24>",
                                  "kind": "assignment",
                                  "variable": "AmclNode::odom_model_type_",
                                  "unqualified_variable": "odom_model_type_",
                                  "value": {
                                    "kind": "enum-ref",
                                    "qualified_name": "amcl::ODOM_MODEL_DIFF_CORRECTED",
                                    "type": "unsupported",
                                    "initial-value": {
                                      "kind": "int-literal",
                                      "literal": 2
                                    },
                                    "value": {
                                      "kind": "int-literal",
                                      "literal": 2
                                    }
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "AmclNode::first_reconfigure_call_",
                                            "type": "bool",
                                            "initial-value": {
                                              "kind": "bool-literal",
                                              "literal": true
                                            },
                                            "base": {
                                              "kind": "this-expr"
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "amcl::AMCLConfig::odom_model_type",
                                              "type": "string",
                                              "initial-value": {
                                                "kind": "unknown"
                                              },
                                              "base": {
                                                "kind": "variable-reference",
                                                "qualified_name": "config",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "string-literal",
                                              "literal": "diff"
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "negate-expr",
                                        "subExpr": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "member-var-ref",
                                            "qualified_name": "amcl::AMCLConfig::odom_model_type",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "unknown"
                                            },
                                            "base": {
                                              "kind": "variable-reference",
                                              "qualified_name": "config",
                                              "type": "unsupported",
                                              "initial-value": {
                                                "kind": "unknown"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "omni"
                                          }
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "member-var-ref",
                                        "qualified_name": "amcl::AMCLConfig::odom_model_type",
                                        "type": "string",
                                        "initial-value": {
                                          "kind": "unknown"
                                        },
                                        "base": {
                                          "kind": "variable-reference",
                                          "qualified_name": "config",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "string-literal",
                                        "literal": "diff-corrected"
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "falseBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": [
                                {
                                  "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:571:8, line:572:24>",
                                  "kind": "if",
                                  "trueBranchBody": {
                                    "source-location": "",
                                    "kind": "compound",
                                    "statements": [
                                      {
                                        "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:572:5, col:24>",
                                        "kind": "assignment",
                                        "variable": "AmclNode::odom_model_type_",
                                        "unqualified_variable": "odom_model_type_",
                                        "value": {
                                          "kind": "enum-ref",
                                          "qualified_name": "amcl::ODOM_MODEL_OMNI_CORRECTED",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "int-literal",
                                            "literal": 3
                                          },
                                          "value": {
                                            "kind": "int-literal",
                                            "literal": 3
                                          }
                                        },
                                        "path_condition": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "negate-expr",
                                                  "subExpr": {
                                                    "kind": "member-var-ref",
                                                    "qualified_name": "AmclNode::first_reconfigure_call_",
                                                    "type": "bool",
                                                    "initial-value": {
                                                      "kind": "bool-literal",
                                                      "literal": true
                                                    },
                                                    "base": {
                                                      "kind": "this-expr"
                                                    }
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "negate-expr",
                                                  "subExpr": {
                                                    "kind": "binary-expr",
                                                    "operator": "==",
                                                    "lhs": {
                                                      "kind": "member-var-ref",
                                                      "qualified_name": "amcl::AMCLConfig::odom_model_type",
                                                      "type": "string",
                                                      "initial-value": {
                                                        "kind": "unknown"
                                                      },
                                                      "base": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "config",
                                                        "type": "unsupported",
                                                        "initial-value": {
                                                          "kind": "unknown"
                                                        }
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "string-literal",
                                                      "literal": "diff"
                                                    }
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "member-var-ref",
                                                    "qualified_name": "amcl::AMCLConfig::odom_model_type",
                                                    "type": "string",
                                                    "initial-value": {
                                                      "kind": "unknown"
                                                    },
                                                    "base": {
                                                      "kind": "variable-reference",
                                                      "qualified_name": "config",
                                                      "type": "unsupported",
                                                      "initial-value": {
                                                        "kind": "unknown"
                                                      }
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "string-literal",
                                                    "literal": "omni"
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "member-var-ref",
                                                  "qualified_name": "amcl::AMCLConfig::odom_model_type",
                                                  "type": "string",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  },
                                                  "base": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "config",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "unknown"
                                                    }
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "string-literal",
                                                  "literal": "diff-corrected"
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "amcl::AMCLConfig::odom_model_type",
                                              "type": "string",
                                              "initial-value": {
                                                "kind": "unknown"
                                              },
                                              "base": {
                                                "kind": "variable-reference",
                                                "qualified_name": "config",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "string-literal",
                                              "literal": "omni-corrected"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:572:5, col:24>",
                                        "kind": "assignment",
                                        "variable": "AmclNode::odom_model_type_",
                                        "unqualified_variable": "odom_model_type_",
                                        "value": {
                                          "kind": "enum-ref",
                                          "qualified_name": "amcl::ODOM_MODEL_OMNI_CORRECTED",
                                          "type": "unsupported",
                                          "initial-value": {
                                            "kind": "int-literal",
                                            "literal": 3
                                          },
                                          "value": {
                                            "kind": "int-literal",
                                            "literal": 3
                                          }
                                        },
                                        "path_condition": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "negate-expr",
                                                  "subExpr": {
                                                    "kind": "member-var-ref",
                                                    "qualified_name": "AmclNode::first_reconfigure_call_",
                                                    "type": "bool",
                                                    "initial-value": {
                                                      "kind": "bool-literal",
                                                      "literal": true
                                                    },
                                                    "base": {
                                                      "kind": "this-expr"
                                                    }
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "negate-expr",
                                                  "subExpr": {
                                                    "kind": "binary-expr",
                                                    "operator": "==",
                                                    "lhs": {
                                                      "kind": "member-var-ref",
                                                      "qualified_name": "amcl::AMCLConfig::odom_model_type",
                                                      "type": "string",
                                                      "initial-value": {
                                                        "kind": "unknown"
                                                      },
                                                      "base": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "config",
                                                        "type": "unsupported",
                                                        "initial-value": {
                                                          "kind": "unknown"
                                                        }
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "string-literal",
                                                      "literal": "diff"
                                                    }
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "member-var-ref",
                                                    "qualified_name": "amcl::AMCLConfig::odom_model_type",
                                                    "type": "string",
                                                    "initial-value": {
                                                      "kind": "unknown"
                                                    },
                                                    "base": {
                                                      "kind": "variable-reference",
                                                      "qualified_name": "config",
                                                      "type": "unsupported",
                                                      "initial-value": {
                                                        "kind": "unknown"
                                                      }
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "string-literal",
                                                    "literal": "omni"
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "member-var-ref",
                                                  "qualified_name": "amcl::AMCLConfig::odom_model_type",
                                                  "type": "string",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  },
                                                  "base": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "config",
                                                    "type": "unsupported",
                                                    "initial-value": {
                                                      "kind": "unknown"
                                                    }
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "string-literal",
                                                  "literal": "diff-corrected"
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "member-var-ref",
                                              "qualified_name": "amcl::AMCLConfig::odom_model_type",
                                              "type": "string",
                                              "initial-value": {
                                                "kind": "unknown"
                                              },
                                              "base": {
                                                "kind": "variable-reference",
                                                "qualified_name": "config",
                                                "type": "unsupported",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "string-literal",
                                              "literal": "omni-corrected"
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "falseBranchBody": {
                                    "source-location": "",
                                    "kind": "compound",
                                    "statements": []
                                  },
                                  "condition": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                }
                              ]
                            },
                            "condition": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        ]
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  ]
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:574:3, line:578:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:577:5, col:35>",
                      "kind": "assignment",
                      "variable": "amcl::AMCLConfig::max_particles",
                      "unqualified_variable": "max_particles",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "amcl::AMCLConfig::min_particles",
                        "type": "integer",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "config",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::first_reconfigure_call_",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": true
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": ">",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "amcl::AMCLConfig::min_particles",
                            "type": "integer",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "variable-reference",
                              "qualified_name": "config",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "amcl::AMCLConfig::max_particles",
                            "type": "integer",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "variable-reference",
                              "qualified_name": "config",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:577:5, col:35>",
                      "kind": "assignment",
                      "variable": "amcl::AMCLConfig::max_particles",
                      "unqualified_variable": "max_particles",
                      "value": {
                        "kind": "member-var-ref",
                        "qualified_name": "amcl::AMCLConfig::min_particles",
                        "type": "integer",
                        "initial-value": {
                          "kind": "unknown"
                        },
                        "base": {
                          "kind": "variable-reference",
                          "qualified_name": "config",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::first_reconfigure_call_",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": true
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": ">",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "amcl::AMCLConfig::min_particles",
                            "type": "integer",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "variable-reference",
                              "qualified_name": "config",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "amcl::AMCLConfig::max_particles",
                            "type": "integer",
                            "initial-value": {
                              "kind": "unknown"
                            },
                            "base": {
                              "kind": "variable-reference",
                              "qualified_name": "config",
                              "type": "unsupported",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:580:3, col:27>",
                "kind": "assignment",
                "variable": "AmclNode::min_particles_",
                "unqualified_variable": "min_particles_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::min_particles",
                  "type": "integer",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:581:3, col:27>",
                "kind": "assignment",
                "variable": "AmclNode::max_particles_",
                "unqualified_variable": "max_particles_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::max_particles",
                  "type": "integer",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:582:3, col:24>",
                "kind": "assignment",
                "variable": "AmclNode::alpha_slow_",
                "unqualified_variable": "alpha_slow_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::recovery_alpha_slow",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:583:3, col:24>",
                "kind": "assignment",
                "variable": "AmclNode::alpha_fast_",
                "unqualified_variable": "alpha_fast_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::recovery_alpha_fast",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:584:3, col:26>",
                "kind": "assignment",
                "variable": "AmclNode::tf_broadcast_",
                "unqualified_variable": "tf_broadcast_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::tf_broadcast",
                  "type": "bool",
                  "initial-value": {
                    "kind": "bool-literal",
                    "literal": false
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:586:3, col:24>",
                "kind": "assignment",
                "variable": "AmclNode::do_beamskip_",
                "unqualified_variable": "do_beamskip_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::do_beamskip",
                  "type": "bool",
                  "initial-value": {
                    "kind": "bool-literal",
                    "literal": false
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:587:3, col:32>",
                "kind": "assignment",
                "variable": "AmclNode::beam_skip_distance_",
                "unqualified_variable": "beam_skip_distance_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::beam_skip_distance",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:588:3, col:33>",
                "kind": "assignment",
                "variable": "AmclNode::beam_skip_threshold_",
                "unqualified_variable": "beam_skip_threshold_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::beam_skip_threshold",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:595:3, line:599:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:598:5, col:11 <Spelling=/opt/rosdiscover/lib/clang/11.1.0/include/stddef.h:84:18>>",
                      "kind": "assignment",
                      "variable": "AmclNode::pf_",
                      "unqualified_variable": "pf_",
                      "value": {
                        "kind": "null-expr"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::first_reconfigure_call_",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": true
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "!=",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::pf_",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "null-expr"
                          }
                        }
                      }
                    },
                    {
                      "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:598:5, col:11 <Spelling=/opt/rosdiscover/lib/clang/11.1.0/include/stddef.h:84:18>>",
                      "kind": "assignment",
                      "variable": "AmclNode::pf_",
                      "unqualified_variable": "pf_",
                      "value": {
                        "kind": "null-expr"
                      },
                      "path_condition": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::first_reconfigure_call_",
                            "type": "bool",
                            "initial-value": {
                              "kind": "bool-literal",
                              "literal": true
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "!=",
                          "lhs": {
                            "kind": "member-var-ref",
                            "qualified_name": "AmclNode::pf_",
                            "type": "unsupported",
                            "initial-value": {
                              "kind": "int-literal",
                              "literal": 0
                            },
                            "base": {
                              "kind": "this-expr"
                            }
                          },
                          "rhs": {
                            "kind": "null-expr"
                          }
                        }
                      }
                    }
                  ]
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:600:3, line:603:30>",
                "kind": "assignment",
                "variable": "AmclNode::pf_",
                "unqualified_variable": "pf_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:605:3, col:20>",
                "kind": "assignment",
                "variable": "AmclNode::pf_err_",
                "unqualified_variable": "pf_err_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::kld_err",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:606:3, col:18>",
                "kind": "assignment",
                "variable": "AmclNode::pf_z_",
                "unqualified_variable": "pf_z_",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "amcl::AMCLConfig::kld_z",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "config",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:607:3, col:18>",
                "kind": "assignment",
                "variable": "_pf_t::pop_err",
                "unqualified_variable": "pop_err",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "AmclNode::pf_err_",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "this-expr"
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:608:3, col:16>",
                "kind": "assignment",
                "variable": "_pf_t::pop_z",
                "unqualified_variable": "pop_z",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "AmclNode::pf_z_",
                  "type": "float",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "this-expr"
                  }
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:620:3, col:14>",
                "kind": "assignment",
                "variable": "AmclNode::pf_init_",
                "unqualified_variable": "pf_init_",
                "value": {
                  "kind": "bool-literal",
                  "literal": false
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:625:3, col:24>",
                "kind": "assignment",
                "variable": "AmclNode::odom_",
                "unqualified_variable": "odom_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:630:3, col:42>",
                "kind": "assignment",
                "variable": "AmclNode::laser_",
                "unqualified_variable": "laser_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:650:3, col:51>",
                "kind": "assignment",
                "variable": "AmclNode::odom_frame_id_",
                "unqualified_variable": "odom_frame_id_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:651:3, col:51>",
                "kind": "assignment",
                "variable": "AmclNode::base_frame_id_",
                "unqualified_variable": "base_frame_id_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:652:3, col:55>",
                "kind": "assignment",
                "variable": "AmclNode::global_frame_id_",
                "unqualified_variable": "global_frame_id_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:655:3, line:660:65>",
                "kind": "assignment",
                "variable": "AmclNode::laser_scan_filter_",
                "unqualified_variable": "laser_scan_filter_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:661:3, line:662:61>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "unknown"
                },
                "format": "boost/_bi::bind_t",
                "callback-name": "AmclNode::laserReceived"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:661:3, line:662:61>",
                "kind": "call",
                "callee": "AmclNode::laserReceived",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:664:3, col:91>",
                "kind": "assignment",
                "variable": "AmclNode::initial_pose_sub_",
                "unqualified_variable": "initial_pose_sub_",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "negate-expr",
                  "subExpr": {
                    "kind": "member-var-ref",
                    "qualified_name": "AmclNode::first_reconfigure_call_",
                    "type": "bool",
                    "initial-value": {
                      "kind": "bool-literal",
                      "literal": true
                    },
                    "base": {
                      "kind": "this-expr"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:664:23, col:91>",
                "kind": "subscribes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "initialpose"
                  }
                },
                "format": "geometry_msgs/PoseWithCovarianceStamped",
                "callback-name": "AmclNode::initialPoseReceived"
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:664:23, col:91>",
                "kind": "call",
                "callee": "AmclNode::initialPoseReceived",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        },
        {
          "name": "AmclNode::initialPoseReceived",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": []
          }
        },
        {
          "name": "AmclNode::setMapCallback",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1112:3, col:17>",
                "kind": "assignment",
                "variable": "nav_msgs::SetMapResponse_<std::allocator<void>>::success",
                "unqualified_variable": "success",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/navigation/amcl/src/amcl_node.cpp:1112:3, col:17>",
                "kind": "assignment",
                "variable": "nav_msgs::SetMapResponse_<std::allocator<void>>::success",
                "unqualified_variable": "success",
                "value": {
                  "kind": "bool-literal",
                  "literal": true
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        }
      ]
    }
  }
}