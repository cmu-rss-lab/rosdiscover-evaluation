{
  "image": {
    "sha256": "b44a68ec6b77be4a6b184926233398821502330d02ca391cc08a48ba09dedc0f"
  },
  "node-name": "demo_scene",
  "package": {
    "name": "moveit_ros_planning",
    "path": "/ros_ws/src/moveit/moveit_ros_planning"
  },
  "sources": [
    "/ros_ws/src/moveit/moveit_ros_planning/./planning_scene_monitor/demos/demo_scene.cpp"
  ],
  "program": {
    "program": {
      "entrypoint": "main",
      "functions": [
        {
          "name": "main",
          "parameters": [
            {
              "index": 0,
              "name": "argc",
              "type": "integer"
            }
          ],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</ros_ws/src/moveit/moveit_ros_planning/planning_scene_monitor/demos/demo_scene.cpp:87:3, col:65>",
                "kind": "ros-init",
                "name": {
                  "kind": "string-literal",
                  "literal": "demo"
                }
              },
              {
                "source-location": "</ros_ws/src/moveit/moveit_ros_planning/planning_scene_monitor/demos/demo_scene.cpp:92:3, col:13>",
                "kind": "call",
                "callee": "sendKnife",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/moveit/moveit_ros_planning/planning_scene_monitor/demos/demo_scene.cpp:87:3, col:65>",
                "kind": "ros-init",
                "name": {
                  "kind": "string-literal",
                  "literal": "demo"
                }
              },
              {
                "source-location": "</ros_ws/src/moveit/moveit_ros_planning/planning_scene_monitor/demos/demo_scene.cpp:92:3, col:13>",
                "kind": "call",
                "callee": "sendKnife",
                "arguments": {},
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              }
            ]
          }
        },
        {
          "name": "sendKnife",
          "parameters": [],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</ros_ws/src/moveit/moveit_ros_planning/planning_scene_monitor/demos/demo_scene.cpp:45:28, col:110>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "attached_collision_object"
                  }
                },
                "format": "moveit_msgs/AttachedCollisionObject",
                "source_location": "</ros_ws/src/moveit/moveit_ros_planning/planning_scene_monitor/demos/demo_scene.cpp:45:28, col:110>"
              },
              {
                "source-location": "</ros_ws/src/moveit/moveit_ros_planning/planning_scene_monitor/demos/demo_scene.cpp:48:3, col:19>",
                "kind": "assignment",
                "variable": "moveit_msgs::AttachedCollisionObject_<std::allocator<void>>::link_name",
                "unqualified_variable": "link_name",
                "value": {
                  "kind": "string-literal",
                  "literal": "r_wrist_roll_link"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/moveit/moveit_ros_planning/planning_scene_monitor/demos/demo_scene.cpp:63:3, col:11>",
                "kind": "assignment",
                "variable": "moveit_msgs::CollisionObject_<std::allocator<void>>::id",
                "unqualified_variable": "id",
                "value": {
                  "kind": "string-literal",
                  "literal": "knife"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/moveit/moveit_ros_planning/planning_scene_monitor/demos/demo_scene.cpp:64:3, col:36>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                "unqualified_variable": "stamp",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/moveit/moveit_ros_planning/planning_scene_monitor/demos/demo_scene.cpp:65:3, col:28>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "moveit_msgs::AttachedCollisionObject_<std::allocator<void>>::link_name",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "aco",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/moveit/moveit_ros_planning/planning_scene_monitor/demos/demo_scene.cpp:66:3, col:48>",
                "kind": "assignment",
                "variable": "moveit_msgs::CollisionObject_<std::allocator<void>>::operation",
                "unqualified_variable": "operation",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "moveit_msgs::CollisionObject_<std::allocator<void>>::ADD",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 0
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 0
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/moveit/moveit_ros_planning/planning_scene_monitor/demos/demo_scene.cpp:68:3, col:55>",
                "kind": "assignment",
                "variable": "shape_msgs::SolidPrimitive_<std::allocator<void>>::type",
                "unqualified_variable": "type",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "shape_msgs::SolidPrimitive_<std::allocator<void>>::BOX",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 1
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 1
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/moveit/moveit_ros_planning/planning_scene_monitor/demos/demo_scene.cpp:73:3, col:38>",
                "kind": "assignment",
                "variable": "geometry_msgs::Point_<std::allocator<void>>::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.1
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/moveit/moveit_ros_planning/planning_scene_monitor/demos/demo_scene.cpp:74:3, col:38>",
                "kind": "assignment",
                "variable": "geometry_msgs::Point_<std::allocator<void>>::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "int-literal",
                  "literal": 0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/moveit/moveit_ros_planning/planning_scene_monitor/demos/demo_scene.cpp:75:3, col:39>",
                "kind": "assignment",
                "variable": "geometry_msgs::Point_<std::allocator<void>>::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "float-literal",
                  "literal": -0.2
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/moveit/moveit_ros_planning/planning_scene_monitor/demos/demo_scene.cpp:76:3, col:41>",
                "kind": "assignment",
                "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::w",
                "unqualified_variable": "w",
                "value": {
                  "kind": "float-literal",
                  "literal": 1.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/moveit/moveit_ros_planning/planning_scene_monitor/demos/demo_scene.cpp:78:3, col:22>",
                "kind": "publish",
                "publisher": "pub_aco",
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/moveit/moveit_ros_planning/planning_scene_monitor/demos/demo_scene.cpp:79:3, col:26>",
                "kind": "ratesleep",
                "rate": {
                  "kind": "float-literal",
                  "literal": 1.0
                }
              },
              {
                "source-location": "</ros_ws/src/moveit/moveit_ros_planning/planning_scene_monitor/demos/demo_scene.cpp:80:3, col:22>",
                "kind": "publish",
                "publisher": "pub_aco",
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/moveit/moveit_ros_planning/planning_scene_monitor/demos/demo_scene.cpp:82:3, col:28>",
                "kind": "ratesleep",
                "rate": {
                  "kind": "float-literal",
                  "literal": 0.6666666666666666
                }
              },
              {
                "source-location": "</ros_ws/src/moveit/moveit_ros_planning/planning_scene_monitor/demos/demo_scene.cpp:45:28, col:110>",
                "kind": "publishes-to",
                "name": {
                  "kind": "concatenate",
                  "lhs": {
                    "kind": "node-handle",
                    "namespace": {
                      "kind": "string-literal",
                      "literal": ""
                    }
                  },
                  "rhs": {
                    "kind": "string-literal",
                    "literal": "attached_collision_object"
                  }
                },
                "format": "moveit_msgs/AttachedCollisionObject",
                "source_location": "</ros_ws/src/moveit/moveit_ros_planning/planning_scene_monitor/demos/demo_scene.cpp:45:28, col:110>"
              },
              {
                "source-location": "</ros_ws/src/moveit/moveit_ros_planning/planning_scene_monitor/demos/demo_scene.cpp:48:3, col:19>",
                "kind": "assignment",
                "variable": "moveit_msgs::AttachedCollisionObject_<std::allocator<void>>::link_name",
                "unqualified_variable": "link_name",
                "value": {
                  "kind": "string-literal",
                  "literal": "r_wrist_roll_link"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/moveit/moveit_ros_planning/planning_scene_monitor/demos/demo_scene.cpp:63:3, col:11>",
                "kind": "assignment",
                "variable": "moveit_msgs::CollisionObject_<std::allocator<void>>::id",
                "unqualified_variable": "id",
                "value": {
                  "kind": "string-literal",
                  "literal": "knife"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/moveit/moveit_ros_planning/planning_scene_monitor/demos/demo_scene.cpp:64:3, col:36>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::stamp",
                "unqualified_variable": "stamp",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/moveit/moveit_ros_planning/planning_scene_monitor/demos/demo_scene.cpp:65:3, col:28>",
                "kind": "assignment",
                "variable": "std_msgs::Header_<std::allocator<void>>::frame_id",
                "unqualified_variable": "frame_id",
                "value": {
                  "kind": "member-var-ref",
                  "qualified_name": "moveit_msgs::AttachedCollisionObject_<std::allocator<void>>::link_name",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "unknown"
                  },
                  "base": {
                    "kind": "variable-reference",
                    "qualified_name": "aco",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/moveit/moveit_ros_planning/planning_scene_monitor/demos/demo_scene.cpp:66:3, col:48>",
                "kind": "assignment",
                "variable": "moveit_msgs::CollisionObject_<std::allocator<void>>::operation",
                "unqualified_variable": "operation",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "moveit_msgs::CollisionObject_<std::allocator<void>>::ADD",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 0
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 0
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/moveit/moveit_ros_planning/planning_scene_monitor/demos/demo_scene.cpp:68:3, col:55>",
                "kind": "assignment",
                "variable": "shape_msgs::SolidPrimitive_<std::allocator<void>>::type",
                "unqualified_variable": "type",
                "value": {
                  "kind": "enum-ref",
                  "qualified_name": "shape_msgs::SolidPrimitive_<std::allocator<void>>::BOX",
                  "type": "unsupported",
                  "initial-value": {
                    "kind": "int-literal",
                    "literal": 1
                  },
                  "value": {
                    "kind": "int-literal",
                    "literal": 1
                  }
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/moveit/moveit_ros_planning/planning_scene_monitor/demos/demo_scene.cpp:73:3, col:38>",
                "kind": "assignment",
                "variable": "geometry_msgs::Point_<std::allocator<void>>::x",
                "unqualified_variable": "x",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.1
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/moveit/moveit_ros_planning/planning_scene_monitor/demos/demo_scene.cpp:74:3, col:38>",
                "kind": "assignment",
                "variable": "geometry_msgs::Point_<std::allocator<void>>::y",
                "unqualified_variable": "y",
                "value": {
                  "kind": "int-literal",
                  "literal": 0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/moveit/moveit_ros_planning/planning_scene_monitor/demos/demo_scene.cpp:75:3, col:39>",
                "kind": "assignment",
                "variable": "geometry_msgs::Point_<std::allocator<void>>::z",
                "unqualified_variable": "z",
                "value": {
                  "kind": "float-literal",
                  "literal": -0.2
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/moveit/moveit_ros_planning/planning_scene_monitor/demos/demo_scene.cpp:76:3, col:41>",
                "kind": "assignment",
                "variable": "geometry_msgs::Quaternion_<std::allocator<void>>::w",
                "unqualified_variable": "w",
                "value": {
                  "kind": "float-literal",
                  "literal": 1.0
                },
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/moveit/moveit_ros_planning/planning_scene_monitor/demos/demo_scene.cpp:78:3, col:22>",
                "kind": "publish",
                "publisher": "pub_aco",
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/moveit/moveit_ros_planning/planning_scene_monitor/demos/demo_scene.cpp:79:3, col:26>",
                "kind": "ratesleep",
                "rate": {
                  "kind": "float-literal",
                  "literal": 1.0
                }
              },
              {
                "source-location": "</ros_ws/src/moveit/moveit_ros_planning/planning_scene_monitor/demos/demo_scene.cpp:80:3, col:22>",
                "kind": "publish",
                "publisher": "pub_aco",
                "path_condition": {
                  "kind": "bool-literal",
                  "literal": true
                }
              },
              {
                "source-location": "</ros_ws/src/moveit/moveit_ros_planning/planning_scene_monitor/demos/demo_scene.cpp:82:3, col:28>",
                "kind": "ratesleep",
                "rate": {
                  "kind": "float-literal",
                  "literal": 0.6666666666666666
                }
              }
            ]
          }
        }
      ]
    }
  }
}