{
  "image": {
    "sha256": "b44a68ec6b77be4a6b184926233398821502330d02ca391cc08a48ba09dedc0f"
  },
  "node-name": "unit_tests",
  "package": {
    "name": "octomap",
    "path": "/ros_ws/src/octomap/octomap"
  },
  "sources": [
    "/ros_ws/src/octomap/octomap/./src/testing/unit_tests.cpp"
  ],
  "program": {
    "program": {
      "entrypoint": "main",
      "functions": [
        {
          "name": "main",
          "parameters": [
            {
              "index": 0,
              "name": "argc",
              "type": "integer"
            }
          ],
          "body": {
            "source-location": "",
            "kind": "compound",
            "statements": [
              {
                "source-location": "</ros_ws/src/octomap/octomap/src/testing/unit_tests.cpp:88:5, col:9>",
                "kind": "assignment",
                "variable": "p",
                "unqualified_variable": "p",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.1
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "!=",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "argc",
                              "type": "integer",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            },
                            "rhs": {
                              "kind": "int-literal",
                              "literal": 2
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "test_name",
                              "type": "string",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            },
                            "rhs": {
                              "kind": "string-literal",
                              "literal": "MathVector"
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "negate-expr",
                        "subExpr": {
                          "kind": "binary-expr",
                          "operator": "==",
                          "lhs": {
                            "kind": "variable-reference",
                            "qualified_name": "test_name",
                            "type": "string",
                            "initial-value": {
                              "kind": "unknown"
                            }
                          },
                          "rhs": {
                            "kind": "string-literal",
                            "literal": "MathPose"
                          }
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "test_name",
                        "type": "string",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "string-literal",
                        "literal": "InsertRay"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "<=",
                    "lhs": {
                      "kind": "unknown"
                    },
                    "rhs": {
                      "kind": "float-literal",
                      "literal": 1e-05
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/octomap/octomap/src/testing/unit_tests.cpp:90:5, col:9>",
                "kind": "assignment",
                "variable": "p",
                "unqualified_variable": "p",
                "value": {
                  "kind": "float-literal",
                  "literal": 0.99
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "!=",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "argc",
                                "type": "integer",
                                "initial-value": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "int-literal",
                                "literal": 2
                              }
                            }
                          },
                          "rhs": {
                            "kind": "negate-expr",
                            "subExpr": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "test_name",
                                "type": "string",
                                "initial-value": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "string-literal",
                                "literal": "MathVector"
                              }
                            }
                          }
                        },
                        "rhs": {
                          "kind": "negate-expr",
                          "subExpr": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "test_name",
                              "type": "string",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            },
                            "rhs": {
                              "kind": "string-literal",
                              "literal": "MathPose"
                            }
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "==",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "test_name",
                          "type": "string",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "string-literal",
                          "literal": "InsertRay"
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "<=",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "float-literal",
                        "literal": 1e-05
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "<=",
                    "lhs": {
                      "kind": "unknown"
                    },
                    "rhs": {
                      "kind": "float-literal",
                      "literal": 1e-05
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/octomap/octomap/src/testing/unit_tests.cpp:95:5, col:10>",
                "kind": "assignment",
                "variable": "l",
                "unqualified_variable": "l",
                "value": {
                  "kind": "int-literal",
                  "literal": -4
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "!=",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "argc",
                                    "type": "integer",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "int-literal",
                                    "literal": 2
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "test_name",
                                    "type": "string",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "string-literal",
                                    "literal": "MathVector"
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "test_name",
                                  "type": "string",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "string-literal",
                                  "literal": "MathPose"
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "test_name",
                              "type": "string",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            },
                            "rhs": {
                              "kind": "string-literal",
                              "literal": "InsertRay"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "<=",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "float-literal",
                            "literal": 1e-05
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "<=",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "float-literal",
                          "literal": 1e-05
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "<=",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "float-literal",
                        "literal": 1e-05
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "<=",
                    "lhs": {
                      "kind": "unknown"
                    },
                    "rhs": {
                      "kind": "float-literal",
                      "literal": 1e-05
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/octomap/octomap/src/testing/unit_tests.cpp:97:5, col:9>",
                "kind": "assignment",
                "variable": "l",
                "unqualified_variable": "l",
                "value": {
                  "kind": "int-literal",
                  "literal": 2
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "!=",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "argc",
                                      "type": "integer",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "int-literal",
                                      "literal": 2
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "test_name",
                                      "type": "string",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "string-literal",
                                      "literal": "MathVector"
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "test_name",
                                    "type": "string",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "string-literal",
                                    "literal": "MathPose"
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "binary-expr",
                              "operator": "==",
                              "lhs": {
                                "kind": "variable-reference",
                                "qualified_name": "test_name",
                                "type": "string",
                                "initial-value": {
                                  "kind": "unknown"
                                }
                              },
                              "rhs": {
                                "kind": "string-literal",
                                "literal": "InsertRay"
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "<=",
                            "lhs": {
                              "kind": "unknown"
                            },
                            "rhs": {
                              "kind": "float-literal",
                              "literal": 1e-05
                            }
                          }
                        },
                        "rhs": {
                          "kind": "binary-expr",
                          "operator": "<=",
                          "lhs": {
                            "kind": "unknown"
                          },
                          "rhs": {
                            "kind": "float-literal",
                            "literal": 1e-05
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": "<=",
                        "lhs": {
                          "kind": "unknown"
                        },
                        "rhs": {
                          "kind": "float-literal",
                          "literal": 1e-05
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "<=",
                      "lhs": {
                        "kind": "unknown"
                      },
                      "rhs": {
                        "kind": "float-literal",
                        "literal": 1e-05
                      }
                    }
                  },
                  "rhs": {
                    "kind": "binary-expr",
                    "operator": "<=",
                    "lhs": {
                      "kind": "unknown"
                    },
                    "rhs": {
                      "kind": "float-literal",
                      "literal": 1e-05
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/octomap/octomap/src/testing/unit_tests.cpp:177:7, col:14>",
                "kind": "ratesleep",
                "rate": {
                  "kind": "float-literal",
                  "literal": 1.0
                }
              },
              {
                "source-location": "</ros_ws/src/octomap/octomap/src/testing/unit_tests.cpp:186:5, col:40>",
                "kind": "assignment",
                "variable": "result",
                "unqualified_variable": "result",
                "value": {
                  "kind": "unknown"
                },
                "path_condition": {
                  "kind": "binary-expr",
                  "operator": "&&",
                  "lhs": {
                    "kind": "binary-expr",
                    "operator": "&&",
                    "lhs": {
                      "kind": "binary-expr",
                      "operator": "&&",
                      "lhs": {
                        "kind": "binary-expr",
                        "operator": "&&",
                        "lhs": {
                          "kind": "binary-expr",
                          "operator": "&&",
                          "lhs": {
                            "kind": "binary-expr",
                            "operator": "&&",
                            "lhs": {
                              "kind": "binary-expr",
                              "operator": "&&",
                              "lhs": {
                                "kind": "binary-expr",
                                "operator": "&&",
                                "lhs": {
                                  "kind": "binary-expr",
                                  "operator": "&&",
                                  "lhs": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "!=",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "argc",
                                          "type": "integer",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "int-literal",
                                          "literal": 2
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "negate-expr",
                                      "subExpr": {
                                        "kind": "binary-expr",
                                        "operator": "==",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "test_name",
                                          "type": "string",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "string-literal",
                                          "literal": "MathVector"
                                        }
                                      }
                                    }
                                  },
                                  "rhs": {
                                    "kind": "negate-expr",
                                    "subExpr": {
                                      "kind": "binary-expr",
                                      "operator": "==",
                                      "lhs": {
                                        "kind": "variable-reference",
                                        "qualified_name": "test_name",
                                        "type": "string",
                                        "initial-value": {
                                          "kind": "unknown"
                                        }
                                      },
                                      "rhs": {
                                        "kind": "string-literal",
                                        "literal": "MathPose"
                                      }
                                    }
                                  }
                                },
                                "rhs": {
                                  "kind": "negate-expr",
                                  "subExpr": {
                                    "kind": "binary-expr",
                                    "operator": "==",
                                    "lhs": {
                                      "kind": "variable-reference",
                                      "qualified_name": "test_name",
                                      "type": "string",
                                      "initial-value": {
                                        "kind": "unknown"
                                      }
                                    },
                                    "rhs": {
                                      "kind": "string-literal",
                                      "literal": "InsertRay"
                                    }
                                  }
                                }
                              },
                              "rhs": {
                                "kind": "negate-expr",
                                "subExpr": {
                                  "kind": "binary-expr",
                                  "operator": "==",
                                  "lhs": {
                                    "kind": "variable-reference",
                                    "qualified_name": "test_name",
                                    "type": "string",
                                    "initial-value": {
                                      "kind": "unknown"
                                    }
                                  },
                                  "rhs": {
                                    "kind": "string-literal",
                                    "literal": "InsertScan"
                                  }
                                }
                              }
                            },
                            "rhs": {
                              "kind": "negate-expr",
                              "subExpr": {
                                "kind": "binary-expr",
                                "operator": "==",
                                "lhs": {
                                  "kind": "variable-reference",
                                  "qualified_name": "test_name",
                                  "type": "string",
                                  "initial-value": {
                                    "kind": "unknown"
                                  }
                                },
                                "rhs": {
                                  "kind": "string-literal",
                                  "literal": "ReadGraph"
                                }
                              }
                            }
                          },
                          "rhs": {
                            "kind": "binary-expr",
                            "operator": "==",
                            "lhs": {
                              "kind": "variable-reference",
                              "qualified_name": "test_name",
                              "type": "string",
                              "initial-value": {
                                "kind": "unknown"
                              }
                            },
                            "rhs": {
                              "kind": "string-literal",
                              "literal": "StampedTree"
                            }
                          }
                        },
                        "rhs": {
                          "kind": "variable-reference",
                          "qualified_name": "result",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        }
                      },
                      "rhs": {
                        "kind": "binary-expr",
                        "operator": ">",
                        "lhs": {
                          "kind": "variable-reference",
                          "qualified_name": "tree_time",
                          "type": "unsupported",
                          "initial-value": {
                            "kind": "unknown"
                          }
                        },
                        "rhs": {
                          "kind": "int-literal",
                          "literal": 0
                        }
                      }
                    },
                    "rhs": {
                      "kind": "binary-expr",
                      "operator": "==",
                      "lhs": {
                        "kind": "variable-reference",
                        "qualified_name": "node_time",
                        "type": "unsupported",
                        "initial-value": {
                          "kind": "unknown"
                        }
                      },
                      "rhs": {
                        "kind": "unknown"
                      }
                    }
                  },
                  "rhs": {
                    "kind": "variable-reference",
                    "qualified_name": "result2",
                    "type": "unsupported",
                    "initial-value": {
                      "kind": "unknown"
                    }
                  }
                }
              },
              {
                "source-location": "</ros_ws/src/octomap/octomap/src/testing/unit_tests.cpp:29:3, line:208:3>",
                "kind": "if",
                "trueBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": []
                },
                "falseBranchBody": {
                  "source-location": "",
                  "kind": "compound",
                  "statements": [
                    {
                      "source-location": "</ros_ws/src/octomap/octomap/src/testing/unit_tests.cpp:57:10, line:208:3>",
                      "kind": "if",
                      "trueBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": []
                      },
                      "falseBranchBody": {
                        "source-location": "",
                        "kind": "compound",
                        "statements": [
                          {
                            "source-location": "</ros_ws/src/octomap/octomap/src/testing/unit_tests.cpp:85:10, line:208:3>",
                            "kind": "if",
                            "trueBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": [
                                {
                                  "source-location": "</ros_ws/src/octomap/octomap/src/testing/unit_tests.cpp:88:5, col:9>",
                                  "kind": "assignment",
                                  "variable": "p",
                                  "unqualified_variable": "p",
                                  "value": {
                                    "kind": "float-literal",
                                    "literal": 0.1
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "argc",
                                                "type": "integer",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              },
                                              "rhs": {
                                                "kind": "int-literal",
                                                "literal": 2
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "test_name",
                                                "type": "string",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              },
                                              "rhs": {
                                                "kind": "string-literal",
                                                "literal": "MathVector"
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "test_name",
                                              "type": "string",
                                              "initial-value": {
                                                "kind": "unknown"
                                              }
                                            },
                                            "rhs": {
                                              "kind": "string-literal",
                                              "literal": "MathPose"
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "==",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "test_name",
                                          "type": "string",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "string-literal",
                                          "literal": "InsertRay"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "<=",
                                      "lhs": {
                                        "kind": "unknown"
                                      },
                                      "rhs": {
                                        "kind": "float-literal",
                                        "literal": 1e-05
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</ros_ws/src/octomap/octomap/src/testing/unit_tests.cpp:90:5, col:9>",
                                  "kind": "assignment",
                                  "variable": "p",
                                  "unqualified_variable": "p",
                                  "value": {
                                    "kind": "float-literal",
                                    "literal": 0.99
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "!=",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "argc",
                                                  "type": "integer",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "int-literal",
                                                  "literal": 2
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "test_name",
                                                  "type": "string",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "string-literal",
                                                  "literal": "MathVector"
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "test_name",
                                                "type": "string",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              },
                                              "rhs": {
                                                "kind": "string-literal",
                                                "literal": "MathPose"
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "test_name",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "InsertRay"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "<=",
                                        "lhs": {
                                          "kind": "unknown"
                                        },
                                        "rhs": {
                                          "kind": "float-literal",
                                          "literal": 1e-05
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "<=",
                                      "lhs": {
                                        "kind": "unknown"
                                      },
                                      "rhs": {
                                        "kind": "float-literal",
                                        "literal": 1e-05
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</ros_ws/src/octomap/octomap/src/testing/unit_tests.cpp:95:5, col:10>",
                                  "kind": "assignment",
                                  "variable": "l",
                                  "unqualified_variable": "l",
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": -4
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "negate-expr",
                                                  "subExpr": {
                                                    "kind": "binary-expr",
                                                    "operator": "!=",
                                                    "lhs": {
                                                      "kind": "variable-reference",
                                                      "qualified_name": "argc",
                                                      "type": "integer",
                                                      "initial-value": {
                                                        "kind": "unknown"
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "int-literal",
                                                      "literal": 2
                                                    }
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "negate-expr",
                                                  "subExpr": {
                                                    "kind": "binary-expr",
                                                    "operator": "==",
                                                    "lhs": {
                                                      "kind": "variable-reference",
                                                      "qualified_name": "test_name",
                                                      "type": "string",
                                                      "initial-value": {
                                                        "kind": "unknown"
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "string-literal",
                                                      "literal": "MathVector"
                                                    }
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "test_name",
                                                    "type": "string",
                                                    "initial-value": {
                                                      "kind": "unknown"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "string-literal",
                                                    "literal": "MathPose"
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "test_name",
                                                "type": "string",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              },
                                              "rhs": {
                                                "kind": "string-literal",
                                                "literal": "InsertRay"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "<=",
                                            "lhs": {
                                              "kind": "unknown"
                                            },
                                            "rhs": {
                                              "kind": "float-literal",
                                              "literal": 1e-05
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "<=",
                                          "lhs": {
                                            "kind": "unknown"
                                          },
                                          "rhs": {
                                            "kind": "float-literal",
                                            "literal": 1e-05
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "<=",
                                        "lhs": {
                                          "kind": "unknown"
                                        },
                                        "rhs": {
                                          "kind": "float-literal",
                                          "literal": 1e-05
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "<=",
                                      "lhs": {
                                        "kind": "unknown"
                                      },
                                      "rhs": {
                                        "kind": "float-literal",
                                        "literal": 1e-05
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</ros_ws/src/octomap/octomap/src/testing/unit_tests.cpp:97:5, col:9>",
                                  "kind": "assignment",
                                  "variable": "l",
                                  "unqualified_variable": "l",
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": 2
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "&&",
                                                  "lhs": {
                                                    "kind": "negate-expr",
                                                    "subExpr": {
                                                      "kind": "binary-expr",
                                                      "operator": "!=",
                                                      "lhs": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "argc",
                                                        "type": "integer",
                                                        "initial-value": {
                                                          "kind": "unknown"
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "int-literal",
                                                        "literal": 2
                                                      }
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "negate-expr",
                                                    "subExpr": {
                                                      "kind": "binary-expr",
                                                      "operator": "==",
                                                      "lhs": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "test_name",
                                                        "type": "string",
                                                        "initial-value": {
                                                          "kind": "unknown"
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "string-literal",
                                                        "literal": "MathVector"
                                                      }
                                                    }
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "negate-expr",
                                                  "subExpr": {
                                                    "kind": "binary-expr",
                                                    "operator": "==",
                                                    "lhs": {
                                                      "kind": "variable-reference",
                                                      "qualified_name": "test_name",
                                                      "type": "string",
                                                      "initial-value": {
                                                        "kind": "unknown"
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "string-literal",
                                                      "literal": "MathPose"
                                                    }
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "test_name",
                                                  "type": "string",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "string-literal",
                                                  "literal": "InsertRay"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "<=",
                                              "lhs": {
                                                "kind": "unknown"
                                              },
                                              "rhs": {
                                                "kind": "float-literal",
                                                "literal": 1e-05
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "<=",
                                            "lhs": {
                                              "kind": "unknown"
                                            },
                                            "rhs": {
                                              "kind": "float-literal",
                                              "literal": 1e-05
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "<=",
                                          "lhs": {
                                            "kind": "unknown"
                                          },
                                          "rhs": {
                                            "kind": "float-literal",
                                            "literal": 1e-05
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "<=",
                                        "lhs": {
                                          "kind": "unknown"
                                        },
                                        "rhs": {
                                          "kind": "float-literal",
                                          "literal": 1e-05
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "<=",
                                      "lhs": {
                                        "kind": "unknown"
                                      },
                                      "rhs": {
                                        "kind": "float-literal",
                                        "literal": 1e-05
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</ros_ws/src/octomap/octomap/src/testing/unit_tests.cpp:88:5, col:9>",
                                  "kind": "assignment",
                                  "variable": "p",
                                  "unqualified_variable": "p",
                                  "value": {
                                    "kind": "float-literal",
                                    "literal": 0.1
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "!=",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "argc",
                                                "type": "integer",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              },
                                              "rhs": {
                                                "kind": "int-literal",
                                                "literal": 2
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "test_name",
                                                "type": "string",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              },
                                              "rhs": {
                                                "kind": "string-literal",
                                                "literal": "MathVector"
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "negate-expr",
                                          "subExpr": {
                                            "kind": "binary-expr",
                                            "operator": "==",
                                            "lhs": {
                                              "kind": "variable-reference",
                                              "qualified_name": "test_name",
                                              "type": "string",
                                              "initial-value": {
                                                "kind": "unknown"
                                              }
                                            },
                                            "rhs": {
                                              "kind": "string-literal",
                                              "literal": "MathPose"
                                            }
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "==",
                                        "lhs": {
                                          "kind": "variable-reference",
                                          "qualified_name": "test_name",
                                          "type": "string",
                                          "initial-value": {
                                            "kind": "unknown"
                                          }
                                        },
                                        "rhs": {
                                          "kind": "string-literal",
                                          "literal": "InsertRay"
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "<=",
                                      "lhs": {
                                        "kind": "unknown"
                                      },
                                      "rhs": {
                                        "kind": "float-literal",
                                        "literal": 1e-05
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</ros_ws/src/octomap/octomap/src/testing/unit_tests.cpp:90:5, col:9>",
                                  "kind": "assignment",
                                  "variable": "p",
                                  "unqualified_variable": "p",
                                  "value": {
                                    "kind": "float-literal",
                                    "literal": 0.99
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "!=",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "argc",
                                                  "type": "integer",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "int-literal",
                                                  "literal": 2
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "negate-expr",
                                              "subExpr": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "test_name",
                                                  "type": "string",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "string-literal",
                                                  "literal": "MathVector"
                                                }
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "negate-expr",
                                            "subExpr": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "test_name",
                                                "type": "string",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              },
                                              "rhs": {
                                                "kind": "string-literal",
                                                "literal": "MathPose"
                                              }
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "==",
                                          "lhs": {
                                            "kind": "variable-reference",
                                            "qualified_name": "test_name",
                                            "type": "string",
                                            "initial-value": {
                                              "kind": "unknown"
                                            }
                                          },
                                          "rhs": {
                                            "kind": "string-literal",
                                            "literal": "InsertRay"
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "<=",
                                        "lhs": {
                                          "kind": "unknown"
                                        },
                                        "rhs": {
                                          "kind": "float-literal",
                                          "literal": 1e-05
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "<=",
                                      "lhs": {
                                        "kind": "unknown"
                                      },
                                      "rhs": {
                                        "kind": "float-literal",
                                        "literal": 1e-05
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</ros_ws/src/octomap/octomap/src/testing/unit_tests.cpp:95:5, col:10>",
                                  "kind": "assignment",
                                  "variable": "l",
                                  "unqualified_variable": "l",
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": -4
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "negate-expr",
                                                  "subExpr": {
                                                    "kind": "binary-expr",
                                                    "operator": "!=",
                                                    "lhs": {
                                                      "kind": "variable-reference",
                                                      "qualified_name": "argc",
                                                      "type": "integer",
                                                      "initial-value": {
                                                        "kind": "unknown"
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "int-literal",
                                                      "literal": 2
                                                    }
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "negate-expr",
                                                  "subExpr": {
                                                    "kind": "binary-expr",
                                                    "operator": "==",
                                                    "lhs": {
                                                      "kind": "variable-reference",
                                                      "qualified_name": "test_name",
                                                      "type": "string",
                                                      "initial-value": {
                                                        "kind": "unknown"
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "string-literal",
                                                      "literal": "MathVector"
                                                    }
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "negate-expr",
                                                "subExpr": {
                                                  "kind": "binary-expr",
                                                  "operator": "==",
                                                  "lhs": {
                                                    "kind": "variable-reference",
                                                    "qualified_name": "test_name",
                                                    "type": "string",
                                                    "initial-value": {
                                                      "kind": "unknown"
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "string-literal",
                                                    "literal": "MathPose"
                                                  }
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "==",
                                              "lhs": {
                                                "kind": "variable-reference",
                                                "qualified_name": "test_name",
                                                "type": "string",
                                                "initial-value": {
                                                  "kind": "unknown"
                                                }
                                              },
                                              "rhs": {
                                                "kind": "string-literal",
                                                "literal": "InsertRay"
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "<=",
                                            "lhs": {
                                              "kind": "unknown"
                                            },
                                            "rhs": {
                                              "kind": "float-literal",
                                              "literal": 1e-05
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "<=",
                                          "lhs": {
                                            "kind": "unknown"
                                          },
                                          "rhs": {
                                            "kind": "float-literal",
                                            "literal": 1e-05
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "<=",
                                        "lhs": {
                                          "kind": "unknown"
                                        },
                                        "rhs": {
                                          "kind": "float-literal",
                                          "literal": 1e-05
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "<=",
                                      "lhs": {
                                        "kind": "unknown"
                                      },
                                      "rhs": {
                                        "kind": "float-literal",
                                        "literal": 1e-05
                                      }
                                    }
                                  }
                                },
                                {
                                  "source-location": "</ros_ws/src/octomap/octomap/src/testing/unit_tests.cpp:97:5, col:9>",
                                  "kind": "assignment",
                                  "variable": "l",
                                  "unqualified_variable": "l",
                                  "value": {
                                    "kind": "int-literal",
                                    "literal": 2
                                  },
                                  "path_condition": {
                                    "kind": "binary-expr",
                                    "operator": "&&",
                                    "lhs": {
                                      "kind": "binary-expr",
                                      "operator": "&&",
                                      "lhs": {
                                        "kind": "binary-expr",
                                        "operator": "&&",
                                        "lhs": {
                                          "kind": "binary-expr",
                                          "operator": "&&",
                                          "lhs": {
                                            "kind": "binary-expr",
                                            "operator": "&&",
                                            "lhs": {
                                              "kind": "binary-expr",
                                              "operator": "&&",
                                              "lhs": {
                                                "kind": "binary-expr",
                                                "operator": "&&",
                                                "lhs": {
                                                  "kind": "binary-expr",
                                                  "operator": "&&",
                                                  "lhs": {
                                                    "kind": "negate-expr",
                                                    "subExpr": {
                                                      "kind": "binary-expr",
                                                      "operator": "!=",
                                                      "lhs": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "argc",
                                                        "type": "integer",
                                                        "initial-value": {
                                                          "kind": "unknown"
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "int-literal",
                                                        "literal": 2
                                                      }
                                                    }
                                                  },
                                                  "rhs": {
                                                    "kind": "negate-expr",
                                                    "subExpr": {
                                                      "kind": "binary-expr",
                                                      "operator": "==",
                                                      "lhs": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "test_name",
                                                        "type": "string",
                                                        "initial-value": {
                                                          "kind": "unknown"
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "string-literal",
                                                        "literal": "MathVector"
                                                      }
                                                    }
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "negate-expr",
                                                  "subExpr": {
                                                    "kind": "binary-expr",
                                                    "operator": "==",
                                                    "lhs": {
                                                      "kind": "variable-reference",
                                                      "qualified_name": "test_name",
                                                      "type": "string",
                                                      "initial-value": {
                                                        "kind": "unknown"
                                                      }
                                                    },
                                                    "rhs": {
                                                      "kind": "string-literal",
                                                      "literal": "MathPose"
                                                    }
                                                  }
                                                }
                                              },
                                              "rhs": {
                                                "kind": "binary-expr",
                                                "operator": "==",
                                                "lhs": {
                                                  "kind": "variable-reference",
                                                  "qualified_name": "test_name",
                                                  "type": "string",
                                                  "initial-value": {
                                                    "kind": "unknown"
                                                  }
                                                },
                                                "rhs": {
                                                  "kind": "string-literal",
                                                  "literal": "InsertRay"
                                                }
                                              }
                                            },
                                            "rhs": {
                                              "kind": "binary-expr",
                                              "operator": "<=",
                                              "lhs": {
                                                "kind": "unknown"
                                              },
                                              "rhs": {
                                                "kind": "float-literal",
                                                "literal": 1e-05
                                              }
                                            }
                                          },
                                          "rhs": {
                                            "kind": "binary-expr",
                                            "operator": "<=",
                                            "lhs": {
                                              "kind": "unknown"
                                            },
                                            "rhs": {
                                              "kind": "float-literal",
                                              "literal": 1e-05
                                            }
                                          }
                                        },
                                        "rhs": {
                                          "kind": "binary-expr",
                                          "operator": "<=",
                                          "lhs": {
                                            "kind": "unknown"
                                          },
                                          "rhs": {
                                            "kind": "float-literal",
                                            "literal": 1e-05
                                          }
                                        }
                                      },
                                      "rhs": {
                                        "kind": "binary-expr",
                                        "operator": "<=",
                                        "lhs": {
                                          "kind": "unknown"
                                        },
                                        "rhs": {
                                          "kind": "float-literal",
                                          "literal": 1e-05
                                        }
                                      }
                                    },
                                    "rhs": {
                                      "kind": "binary-expr",
                                      "operator": "<=",
                                      "lhs": {
                                        "kind": "unknown"
                                      },
                                      "rhs": {
                                        "kind": "float-literal",
                                        "literal": 1e-05
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "falseBranchBody": {
                              "source-location": "",
                              "kind": "compound",
                              "statements": [
                                {
                                  "source-location": "</ros_ws/src/octomap/octomap/src/testing/unit_tests.cpp:125:10, line:208:3>",
                                  "kind": "if",
                                  "trueBranchBody": {
                                    "source-location": "",
                                    "kind": "compound",
                                    "statements": []
                                  },
                                  "falseBranchBody": {
                                    "source-location": "",
                                    "kind": "compound",
                                    "statements": [
                                      {
                                        "source-location": "</ros_ws/src/octomap/octomap/src/testing/unit_tests.cpp:151:10, line:208:3>",
                                        "kind": "if",
                                        "trueBranchBody": {
                                          "source-location": "",
                                          "kind": "compound",
                                          "statements": []
                                        },
                                        "falseBranchBody": {
                                          "source-location": "",
                                          "kind": "compound",
                                          "statements": [
                                            {
                                              "source-location": "</ros_ws/src/octomap/octomap/src/testing/unit_tests.cpp:157:10, line:208:3>",
                                              "kind": "if",
                                              "trueBranchBody": {
                                                "source-location": "",
                                                "kind": "compound",
                                                "statements": [
                                                  {
                                                    "source-location": "</ros_ws/src/octomap/octomap/src/testing/unit_tests.cpp:177:7, col:14>",
                                                    "kind": "ratesleep",
                                                    "rate": {
                                                      "kind": "float-literal",
                                                      "literal": 1.0
                                                    }
                                                  },
                                                  {
                                                    "source-location": "</ros_ws/src/octomap/octomap/src/testing/unit_tests.cpp:186:5, col:40>",
                                                    "kind": "assignment",
                                                    "variable": "result",
                                                    "unqualified_variable": "result",
                                                    "value": {
                                                      "kind": "unknown"
                                                    },
                                                    "path_condition": {
                                                      "kind": "binary-expr",
                                                      "operator": "&&",
                                                      "lhs": {
                                                        "kind": "binary-expr",
                                                        "operator": "&&",
                                                        "lhs": {
                                                          "kind": "binary-expr",
                                                          "operator": "&&",
                                                          "lhs": {
                                                            "kind": "binary-expr",
                                                            "operator": "&&",
                                                            "lhs": {
                                                              "kind": "binary-expr",
                                                              "operator": "&&",
                                                              "lhs": {
                                                                "kind": "binary-expr",
                                                                "operator": "&&",
                                                                "lhs": {
                                                                  "kind": "binary-expr",
                                                                  "operator": "&&",
                                                                  "lhs": {
                                                                    "kind": "binary-expr",
                                                                    "operator": "&&",
                                                                    "lhs": {
                                                                      "kind": "binary-expr",
                                                                      "operator": "&&",
                                                                      "lhs": {
                                                                        "kind": "binary-expr",
                                                                        "operator": "&&",
                                                                        "lhs": {
                                                                          "kind": "negate-expr",
                                                                          "subExpr": {
                                                                            "kind": "binary-expr",
                                                                            "operator": "!=",
                                                                            "lhs": {
                                                                              "kind": "variable-reference",
                                                                              "qualified_name": "argc",
                                                                              "type": "integer",
                                                                              "initial-value": {
                                                                                "kind": "unknown"
                                                                              }
                                                                            },
                                                                            "rhs": {
                                                                              "kind": "int-literal",
                                                                              "literal": 2
                                                                            }
                                                                          }
                                                                        },
                                                                        "rhs": {
                                                                          "kind": "negate-expr",
                                                                          "subExpr": {
                                                                            "kind": "binary-expr",
                                                                            "operator": "==",
                                                                            "lhs": {
                                                                              "kind": "variable-reference",
                                                                              "qualified_name": "test_name",
                                                                              "type": "string",
                                                                              "initial-value": {
                                                                                "kind": "unknown"
                                                                              }
                                                                            },
                                                                            "rhs": {
                                                                              "kind": "string-literal",
                                                                              "literal": "MathVector"
                                                                            }
                                                                          }
                                                                        }
                                                                      },
                                                                      "rhs": {
                                                                        "kind": "negate-expr",
                                                                        "subExpr": {
                                                                          "kind": "binary-expr",
                                                                          "operator": "==",
                                                                          "lhs": {
                                                                            "kind": "variable-reference",
                                                                            "qualified_name": "test_name",
                                                                            "type": "string",
                                                                            "initial-value": {
                                                                              "kind": "unknown"
                                                                            }
                                                                          },
                                                                          "rhs": {
                                                                            "kind": "string-literal",
                                                                            "literal": "MathPose"
                                                                          }
                                                                        }
                                                                      }
                                                                    },
                                                                    "rhs": {
                                                                      "kind": "negate-expr",
                                                                      "subExpr": {
                                                                        "kind": "binary-expr",
                                                                        "operator": "==",
                                                                        "lhs": {
                                                                          "kind": "variable-reference",
                                                                          "qualified_name": "test_name",
                                                                          "type": "string",
                                                                          "initial-value": {
                                                                            "kind": "unknown"
                                                                          }
                                                                        },
                                                                        "rhs": {
                                                                          "kind": "string-literal",
                                                                          "literal": "InsertRay"
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  "rhs": {
                                                                    "kind": "negate-expr",
                                                                    "subExpr": {
                                                                      "kind": "binary-expr",
                                                                      "operator": "==",
                                                                      "lhs": {
                                                                        "kind": "variable-reference",
                                                                        "qualified_name": "test_name",
                                                                        "type": "string",
                                                                        "initial-value": {
                                                                          "kind": "unknown"
                                                                        }
                                                                      },
                                                                      "rhs": {
                                                                        "kind": "string-literal",
                                                                        "literal": "InsertScan"
                                                                      }
                                                                    }
                                                                  }
                                                                },
                                                                "rhs": {
                                                                  "kind": "negate-expr",
                                                                  "subExpr": {
                                                                    "kind": "binary-expr",
                                                                    "operator": "==",
                                                                    "lhs": {
                                                                      "kind": "variable-reference",
                                                                      "qualified_name": "test_name",
                                                                      "type": "string",
                                                                      "initial-value": {
                                                                        "kind": "unknown"
                                                                      }
                                                                    },
                                                                    "rhs": {
                                                                      "kind": "string-literal",
                                                                      "literal": "ReadGraph"
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "rhs": {
                                                                "kind": "binary-expr",
                                                                "operator": "==",
                                                                "lhs": {
                                                                  "kind": "variable-reference",
                                                                  "qualified_name": "test_name",
                                                                  "type": "string",
                                                                  "initial-value": {
                                                                    "kind": "unknown"
                                                                  }
                                                                },
                                                                "rhs": {
                                                                  "kind": "string-literal",
                                                                  "literal": "StampedTree"
                                                                }
                                                              }
                                                            },
                                                            "rhs": {
                                                              "kind": "variable-reference",
                                                              "qualified_name": "result",
                                                              "type": "unsupported",
                                                              "initial-value": {
                                                                "kind": "unknown"
                                                              }
                                                            }
                                                          },
                                                          "rhs": {
                                                            "kind": "binary-expr",
                                                            "operator": ">",
                                                            "lhs": {
                                                              "kind": "variable-reference",
                                                              "qualified_name": "tree_time",
                                                              "type": "unsupported",
                                                              "initial-value": {
                                                                "kind": "unknown"
                                                              }
                                                            },
                                                            "rhs": {
                                                              "kind": "int-literal",
                                                              "literal": 0
                                                            }
                                                          }
                                                        },
                                                        "rhs": {
                                                          "kind": "binary-expr",
                                                          "operator": "==",
                                                          "lhs": {
                                                            "kind": "variable-reference",
                                                            "qualified_name": "node_time",
                                                            "type": "unsupported",
                                                            "initial-value": {
                                                              "kind": "unknown"
                                                            }
                                                          },
                                                          "rhs": {
                                                            "kind": "unknown"
                                                          }
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "result2",
                                                        "type": "unsupported",
                                                        "initial-value": {
                                                          "kind": "unknown"
                                                        }
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "source-location": "</ros_ws/src/octomap/octomap/src/testing/unit_tests.cpp:177:7, col:14>",
                                                    "kind": "ratesleep",
                                                    "rate": {
                                                      "kind": "float-literal",
                                                      "literal": 1.0
                                                    }
                                                  },
                                                  {
                                                    "source-location": "</ros_ws/src/octomap/octomap/src/testing/unit_tests.cpp:186:5, col:40>",
                                                    "kind": "assignment",
                                                    "variable": "result",
                                                    "unqualified_variable": "result",
                                                    "value": {
                                                      "kind": "unknown"
                                                    },
                                                    "path_condition": {
                                                      "kind": "binary-expr",
                                                      "operator": "&&",
                                                      "lhs": {
                                                        "kind": "binary-expr",
                                                        "operator": "&&",
                                                        "lhs": {
                                                          "kind": "binary-expr",
                                                          "operator": "&&",
                                                          "lhs": {
                                                            "kind": "binary-expr",
                                                            "operator": "&&",
                                                            "lhs": {
                                                              "kind": "binary-expr",
                                                              "operator": "&&",
                                                              "lhs": {
                                                                "kind": "binary-expr",
                                                                "operator": "&&",
                                                                "lhs": {
                                                                  "kind": "binary-expr",
                                                                  "operator": "&&",
                                                                  "lhs": {
                                                                    "kind": "binary-expr",
                                                                    "operator": "&&",
                                                                    "lhs": {
                                                                      "kind": "binary-expr",
                                                                      "operator": "&&",
                                                                      "lhs": {
                                                                        "kind": "binary-expr",
                                                                        "operator": "&&",
                                                                        "lhs": {
                                                                          "kind": "negate-expr",
                                                                          "subExpr": {
                                                                            "kind": "binary-expr",
                                                                            "operator": "!=",
                                                                            "lhs": {
                                                                              "kind": "variable-reference",
                                                                              "qualified_name": "argc",
                                                                              "type": "integer",
                                                                              "initial-value": {
                                                                                "kind": "unknown"
                                                                              }
                                                                            },
                                                                            "rhs": {
                                                                              "kind": "int-literal",
                                                                              "literal": 2
                                                                            }
                                                                          }
                                                                        },
                                                                        "rhs": {
                                                                          "kind": "negate-expr",
                                                                          "subExpr": {
                                                                            "kind": "binary-expr",
                                                                            "operator": "==",
                                                                            "lhs": {
                                                                              "kind": "variable-reference",
                                                                              "qualified_name": "test_name",
                                                                              "type": "string",
                                                                              "initial-value": {
                                                                                "kind": "unknown"
                                                                              }
                                                                            },
                                                                            "rhs": {
                                                                              "kind": "string-literal",
                                                                              "literal": "MathVector"
                                                                            }
                                                                          }
                                                                        }
                                                                      },
                                                                      "rhs": {
                                                                        "kind": "negate-expr",
                                                                        "subExpr": {
                                                                          "kind": "binary-expr",
                                                                          "operator": "==",
                                                                          "lhs": {
                                                                            "kind": "variable-reference",
                                                                            "qualified_name": "test_name",
                                                                            "type": "string",
                                                                            "initial-value": {
                                                                              "kind": "unknown"
                                                                            }
                                                                          },
                                                                          "rhs": {
                                                                            "kind": "string-literal",
                                                                            "literal": "MathPose"
                                                                          }
                                                                        }
                                                                      }
                                                                    },
                                                                    "rhs": {
                                                                      "kind": "negate-expr",
                                                                      "subExpr": {
                                                                        "kind": "binary-expr",
                                                                        "operator": "==",
                                                                        "lhs": {
                                                                          "kind": "variable-reference",
                                                                          "qualified_name": "test_name",
                                                                          "type": "string",
                                                                          "initial-value": {
                                                                            "kind": "unknown"
                                                                          }
                                                                        },
                                                                        "rhs": {
                                                                          "kind": "string-literal",
                                                                          "literal": "InsertRay"
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  "rhs": {
                                                                    "kind": "negate-expr",
                                                                    "subExpr": {
                                                                      "kind": "binary-expr",
                                                                      "operator": "==",
                                                                      "lhs": {
                                                                        "kind": "variable-reference",
                                                                        "qualified_name": "test_name",
                                                                        "type": "string",
                                                                        "initial-value": {
                                                                          "kind": "unknown"
                                                                        }
                                                                      },
                                                                      "rhs": {
                                                                        "kind": "string-literal",
                                                                        "literal": "InsertScan"
                                                                      }
                                                                    }
                                                                  }
                                                                },
                                                                "rhs": {
                                                                  "kind": "negate-expr",
                                                                  "subExpr": {
                                                                    "kind": "binary-expr",
                                                                    "operator": "==",
                                                                    "lhs": {
                                                                      "kind": "variable-reference",
                                                                      "qualified_name": "test_name",
                                                                      "type": "string",
                                                                      "initial-value": {
                                                                        "kind": "unknown"
                                                                      }
                                                                    },
                                                                    "rhs": {
                                                                      "kind": "string-literal",
                                                                      "literal": "ReadGraph"
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "rhs": {
                                                                "kind": "binary-expr",
                                                                "operator": "==",
                                                                "lhs": {
                                                                  "kind": "variable-reference",
                                                                  "qualified_name": "test_name",
                                                                  "type": "string",
                                                                  "initial-value": {
                                                                    "kind": "unknown"
                                                                  }
                                                                },
                                                                "rhs": {
                                                                  "kind": "string-literal",
                                                                  "literal": "StampedTree"
                                                                }
                                                              }
                                                            },
                                                            "rhs": {
                                                              "kind": "variable-reference",
                                                              "qualified_name": "result",
                                                              "type": "unsupported",
                                                              "initial-value": {
                                                                "kind": "unknown"
                                                              }
                                                            }
                                                          },
                                                          "rhs": {
                                                            "kind": "binary-expr",
                                                            "operator": ">",
                                                            "lhs": {
                                                              "kind": "variable-reference",
                                                              "qualified_name": "tree_time",
                                                              "type": "unsupported",
                                                              "initial-value": {
                                                                "kind": "unknown"
                                                              }
                                                            },
                                                            "rhs": {
                                                              "kind": "int-literal",
                                                              "literal": 0
                                                            }
                                                          }
                                                        },
                                                        "rhs": {
                                                          "kind": "binary-expr",
                                                          "operator": "==",
                                                          "lhs": {
                                                            "kind": "variable-reference",
                                                            "qualified_name": "node_time",
                                                            "type": "unsupported",
                                                            "initial-value": {
                                                              "kind": "unknown"
                                                            }
                                                          },
                                                          "rhs": {
                                                            "kind": "unknown"
                                                          }
                                                        }
                                                      },
                                                      "rhs": {
                                                        "kind": "variable-reference",
                                                        "qualified_name": "result2",
                                                        "type": "unsupported",
                                                        "initial-value": {
                                                          "kind": "unknown"
                                                        }
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              "falseBranchBody": {
                                                "source-location": "",
                                                "kind": "compound",
                                                "statements": []
                                              },
                                              "condition": {
                                                "kind": "bool-literal",
                                                "literal": false
                                              }
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "kind": "bool-literal",
                                          "literal": false
                                        }
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "kind": "bool-literal",
                                    "literal": false
                                  }
                                }
                              ]
                            },
                            "condition": {
                              "kind": "bool-literal",
                              "literal": false
                            }
                          }
                        ]
                      },
                      "condition": {
                        "kind": "bool-literal",
                        "literal": false
                      }
                    }
                  ]
                },
                "condition": {
                  "kind": "bool-literal",
                  "literal": false
                }
              }
            ]
          }
        }
      ]
    }
  }
}