{"package": "decision_maker", "node": "planner_selector_node", "periodic_behavior": [], "reactive_behavior": [{"publisher": {"variable": "Pubs[\"final_waypoints\"].publish"}, "subscriber": {"callback": "decision_maker::PlannerSelector::callbackFromWaypoints"}}, {"publisher": {"variable": "Pubs[\"final_waypoints\"].publish"}, "subscriber": {"callback": "decision_maker::PlannerSelector::callbackFromWaypoints"}}, {"publisher": {"variable": "Pubs[\"final_waypoints\"].publish"}, "subscriber": {"callback": "decision_maker::PlannerSelector::callbackFromWaypoints"}}, {"publisher": {"variable": "Pubs[\"closest_waypoint\"].publish"}, "subscriber": {"callback": "decision_maker::PlannerSelector::callbackFromClosest"}}], "potential_state_vars": [{"kind": "member-var-ref", "qualified_name": "decision_maker::PlannerSelector::enableLattice_", "type": "integer", "initial-value": {"kind": "unknown"}, "base": {"kind": "this-expr"}}, {"kind": "member-var-ref", "qualified_name": "decision_maker::PlannerSelector::pastWaypoint", "type": "bool", "initial-value": {"kind": "unknown"}, "base": {"kind": "this-expr"}}, {"kind": "member-var-ref", "qualified_name": "std_msgs::Int32_<std::allocator<void>>::data", "type": "unsupported", "initial-value": {"kind": "int-literal", "literal": 0}, "base": {"kind": "variable-reference", "qualified_name": "msg", "type": "unsupported", "initial-value": {"kind": "unknown"}}}, {"kind": "member-var-ref", "qualified_name": "decision_maker::PlannerSelector::config_waypoints_num_", "type": "unsupported", "initial-value": {"kind": "unknown"}, "base": {"kind": "this-expr"}}, {"kind": "member-var-ref", "qualified_name": "decision_maker::PlannerSelector::config_latency_num_", "type": "unsupported", "initial-value": {"kind": "unknown"}, "base": {"kind": "this-expr"}}, {"kind": "member-var-ref", "qualified_name": "decision_maker::PlannerSelector::way_offset", "type": "unsupported", "initial-value": {"kind": "unknown"}, "base": {"kind": "this-expr"}}, {"kind": "member-var-ref", "qualified_name": "decision_maker::PlannerSelector::closest_waypoint_astar_", "type": "integer", "initial-value": {"kind": "unknown"}, "base": {"kind": "this-expr"}}], "transitions": [{"type": "message", "condition": "True", "callback": "decision_maker::PlannerSelector::callbackFromConfig", "topic": "/config/PlannerSelector", "state_changes": [{"variable": "decision_maker::PlannerSelector::config_waypoints_num_", "new_value": "msg.autoware_config_msgs::ConfigPlannerSelector_<std::allocator<void>>::waypoints_num"}, {"variable": "decision_maker::PlannerSelector::config_latency_num_", "new_value": "msg.autoware_config_msgs::ConfigPlannerSelector_<std::allocator<void>>::latency_num"}], "outputs": []}, {"type": "message", "condition": "((((((this.decision_maker::PlannerSelector::enableLattice_ && (!this.decision_maker::PlannerSelector::enableLattice_)) || (!this.decision_maker::PlannerSelector::enableLattice_)) && (!this.decision_maker::PlannerSelector::enableLattice_)) && (!this.decision_maker::PlannerSelector::enableLattice_)) && this.decision_maker::PlannerSelector::pastWaypoint) && unknown)", "callback": "decision_maker::PlannerSelector::callbackFromWaypoints", "topic": "/astar/final_waypoints", "state_changes": [{"variable": "decision_maker::PlannerSelector::pastWaypoint", "new_value": "False"}, {"variable": "decision_maker::PlannerSelector::way_offset", "new_value": "0"}], "outputs": []}, {"type": "message", "condition": "(this.decision_maker::PlannerSelector::enableLattice_ && this.decision_maker::PlannerSelector::enableLattice_)", "callback": "decision_maker::PlannerSelector::callbackFromWaypoints", "topic": "/astar/final_waypoints", "state_changes": [], "outputs": [{"publisher": {"variable": "Pubs[\"final_waypoints\"].publish", "topic": "unknown_topic"}}]}, {"type": "message", "condition": "(((((this.decision_maker::PlannerSelector::enableLattice_ && (!this.decision_maker::PlannerSelector::enableLattice_)) || (!this.decision_maker::PlannerSelector::enableLattice_)) && (!this.decision_maker::PlannerSelector::enableLattice_)) && (!this.decision_maker::PlannerSelector::enableLattice_)) && this.decision_maker::PlannerSelector::pastWaypoint)", "callback": "decision_maker::PlannerSelector::callbackFromWaypoints", "topic": "/astar/final_waypoints", "state_changes": [], "outputs": [{"publisher": {"variable": "Pubs[\"final_waypoints\"].publish", "topic": "unknown_topic"}}]}, {"type": "message", "condition": "(((((this.decision_maker::PlannerSelector::enableLattice_ && (!this.decision_maker::PlannerSelector::enableLattice_)) || (!this.decision_maker::PlannerSelector::enableLattice_)) && (!this.decision_maker::PlannerSelector::enableLattice_)) && (!this.decision_maker::PlannerSelector::enableLattice_)) && (!this.decision_maker::PlannerSelector::pastWaypoint))", "callback": "decision_maker::PlannerSelector::callbackFromWaypoints", "topic": "/astar/final_waypoints", "state_changes": [], "outputs": [{"publisher": {"variable": "Pubs[\"final_waypoints\"].publish", "topic": "unknown_topic"}}]}, {"type": "message", "condition": "((unknown == 0) && unknown)", "callback": "decision_maker::PlannerSelector::callbackFromClosest", "topic": "/astar/closest_waypoint", "state_changes": [{"variable": "std_msgs::Int32_<std::allocator<void>>::data", "new_value": "this.decision_maker::PlannerSelector::closest_waypoint_astar_"}], "outputs": []}, {"type": "message", "condition": "((this.decision_maker::PlannerSelector::pastWaypoint && (!(this.decision_maker::PlannerSelector::pastWaypoint && (unknown > (this.decision_maker::PlannerSelector::closest_waypoint_astar_ + this.decision_maker::PlannerSelector::way_offset))))) || (!this.decision_maker::PlannerSelector::pastWaypoint))", "callback": "decision_maker::PlannerSelector::callbackFromClosest", "topic": "/astar/closest_waypoint", "state_changes": [{"variable": "std_msgs::Int32_<std::allocator<void>>::data", "new_value": "this.decision_maker::PlannerSelector::closest_waypoint_astar_"}], "outputs": []}, {"type": "message", "condition": "(this.decision_maker::PlannerSelector::pastWaypoint && (this.decision_maker::PlannerSelector::pastWaypoint && (unknown > (this.decision_maker::PlannerSelector::closest_waypoint_astar_ + this.decision_maker::PlannerSelector::way_offset))))", "callback": "decision_maker::PlannerSelector::callbackFromClosest", "topic": "/astar/closest_waypoint", "state_changes": [{"variable": "std_msgs::Int32_<std::allocator<void>>::data", "new_value": "(this.decision_maker::PlannerSelector::closest_waypoint_astar_ + this.decision_maker::PlannerSelector::way_offset)"}], "outputs": []}, {"type": "message", "condition": "((!(unknown == 0)) && (unknown == 0))", "callback": "decision_maker::PlannerSelector::callbackFromClosest", "topic": "/astar/closest_waypoint", "state_changes": [{"variable": "decision_maker::PlannerSelector::closest_waypoint_astar_", "new_value": "temp"}], "outputs": []}, {"type": "message", "condition": "(msg.std_msgs::Int32_<std::allocator<void>>::data != this.decision_maker::PlannerSelector::enableLattice_)", "callback": "decision_maker::PlannerSelector::callbackFromLattice", "topic": "/enableLattice", "state_changes": [{"variable": "decision_maker::PlannerSelector::enableLattice_", "new_value": "msg.std_msgs::Int32_<std::allocator<void>>::data"}], "outputs": []}, {"type": "message", "condition": "((((msg.std_msgs::Int32_<std::allocator<void>>::data != this.decision_maker::PlannerSelector::enableLattice_) && (this.decision_maker::PlannerSelector::enableLattice_ == 1)) && ((this.decision_maker::PlannerSelector::enableLattice_ == 1) && (msg.std_msgs::Int32_<std::allocator<void>>::data == 0))) && (this.decision_maker::PlannerSelector::pastWaypoint == False))", "callback": "decision_maker::PlannerSelector::callbackFromLattice", "topic": "/enableLattice", "state_changes": [{"variable": "decision_maker::PlannerSelector::pastWaypoint", "new_value": "True"}, {"variable": "decision_maker::PlannerSelector::way_offset", "new_value": "this.decision_maker::PlannerSelector::config_waypoints_num_"}], "outputs": []}, {"type": "message", "condition": "((unknown >= this.decision_maker::PlannerSelector::config_latency_num_) && (!(this.decision_maker::PlannerSelector::way_offset > 0)))", "callback": "decision_maker::PlannerSelector::callbackFromLattice", "topic": "/enableLattice", "state_changes": [{"variable": "decision_maker::PlannerSelector::pastWaypoint", "new_value": "False"}], "outputs": []}, {"type": "message", "condition": "((((((this.decision_maker::PlannerSelector::enableLattice_ && (!this.decision_maker::PlannerSelector::enableLattice_)) || (!this.decision_maker::PlannerSelector::enableLattice_)) && (!this.decision_maker::PlannerSelector::enableLattice_)) && (!this.decision_maker::PlannerSelector::enableLattice_)) && this.decision_maker::PlannerSelector::pastWaypoint) && unknown)", "callback": "decision_maker::PlannerSelector::callbackFromWaypoints", "topic": "/dp/final_waypoints", "state_changes": [{"variable": "decision_maker::PlannerSelector::pastWaypoint", "new_value": "False"}, {"variable": "decision_maker::PlannerSelector::way_offset", "new_value": "0"}], "outputs": []}, {"type": "message", "condition": "(this.decision_maker::PlannerSelector::enableLattice_ && this.decision_maker::PlannerSelector::enableLattice_)", "callback": "decision_maker::PlannerSelector::callbackFromWaypoints", "topic": "/dp/final_waypoints", "state_changes": [], "outputs": [{"publisher": {"variable": "Pubs[\"final_waypoints\"].publish", "topic": "unknown_topic"}}]}, {"type": "message", "condition": "(((((this.decision_maker::PlannerSelector::enableLattice_ && (!this.decision_maker::PlannerSelector::enableLattice_)) || (!this.decision_maker::PlannerSelector::enableLattice_)) && (!this.decision_maker::PlannerSelector::enableLattice_)) && (!this.decision_maker::PlannerSelector::enableLattice_)) && this.decision_maker::PlannerSelector::pastWaypoint)", "callback": "decision_maker::PlannerSelector::callbackFromWaypoints", "topic": "/dp/final_waypoints", "state_changes": [], "outputs": [{"publisher": {"variable": "Pubs[\"final_waypoints\"].publish", "topic": "unknown_topic"}}]}, {"type": "message", "condition": "(((((this.decision_maker::PlannerSelector::enableLattice_ && (!this.decision_maker::PlannerSelector::enableLattice_)) || (!this.decision_maker::PlannerSelector::enableLattice_)) && (!this.decision_maker::PlannerSelector::enableLattice_)) && (!this.decision_maker::PlannerSelector::enableLattice_)) && (!this.decision_maker::PlannerSelector::pastWaypoint))", "callback": "decision_maker::PlannerSelector::callbackFromWaypoints", "topic": "/dp/final_waypoints", "state_changes": [], "outputs": [{"publisher": {"variable": "Pubs[\"final_waypoints\"].publish", "topic": "unknown_topic"}}]}, {"type": "message", "condition": "((unknown == 0) && unknown)", "callback": "decision_maker::PlannerSelector::callbackFromClosest", "topic": "/dp/closest_waypoint", "state_changes": [{"variable": "std_msgs::Int32_<std::allocator<void>>::data", "new_value": "this.decision_maker::PlannerSelector::closest_waypoint_astar_"}], "outputs": []}, {"type": "message", "condition": "((this.decision_maker::PlannerSelector::pastWaypoint && (!(this.decision_maker::PlannerSelector::pastWaypoint && (unknown > (this.decision_maker::PlannerSelector::closest_waypoint_astar_ + this.decision_maker::PlannerSelector::way_offset))))) || (!this.decision_maker::PlannerSelector::pastWaypoint))", "callback": "decision_maker::PlannerSelector::callbackFromClosest", "topic": "/dp/closest_waypoint", "state_changes": [{"variable": "std_msgs::Int32_<std::allocator<void>>::data", "new_value": "this.decision_maker::PlannerSelector::closest_waypoint_astar_"}], "outputs": []}, {"type": "message", "condition": "(this.decision_maker::PlannerSelector::pastWaypoint && (this.decision_maker::PlannerSelector::pastWaypoint && (unknown > (this.decision_maker::PlannerSelector::closest_waypoint_astar_ + this.decision_maker::PlannerSelector::way_offset))))", "callback": "decision_maker::PlannerSelector::callbackFromClosest", "topic": "/dp/closest_waypoint", "state_changes": [{"variable": "std_msgs::Int32_<std::allocator<void>>::data", "new_value": "(this.decision_maker::PlannerSelector::closest_waypoint_astar_ + this.decision_maker::PlannerSelector::way_offset)"}], "outputs": []}, {"type": "message", "condition": "((!(unknown == 0)) && (unknown == 0))", "callback": "decision_maker::PlannerSelector::callbackFromClosest", "topic": "/dp/closest_waypoint", "state_changes": [{"variable": "decision_maker::PlannerSelector::closest_waypoint_astar_", "new_value": "temp"}], "outputs": []}], "unclassified_publish": []}