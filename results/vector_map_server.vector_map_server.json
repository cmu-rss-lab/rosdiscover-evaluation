{"package": "vector_map_server", "node": "vector_map_server", "periodic_behavior": [], "reactive_behavior": [{"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getNode"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getRoadEdge"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getUtilityPole"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getRailCrossing"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getWayArea"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getSideStrip"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getStopLine"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getRoadMark"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getStreetLight"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getWall"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getCrossWalk"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getRoadPole"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getGuardRail"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getCurb"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getCurveMirror"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getRoadSign"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getFence"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getSignal"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getCrossRoad"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getSideWalk"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getDriveOnPortion"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getWhiteLine"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getGutter"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getZebraZone"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getDTLane"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getLane"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getNode"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getRoadEdge"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getUtilityPole"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getRailCrossing"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getWayArea"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getSideStrip"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getStopLine"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getRoadMark"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getStreetLight"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getWall"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getCrossWalk"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getRoadPole"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getGuardRail"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getCurb"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getCurveMirror"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getRoadSign"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getFence"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getSignal"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getCrossRoad"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getSideWalk"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getDriveOnPortion"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getWhiteLine"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getGutter"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getZebraZone"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getDTLane"}}, {"publisher": {"variable": "marker_array_pub_"}, "subscriber": {"callback": "(anonymous namespace)::VectorMapServer::getLane"}}], "potential_state_vars": [], "transitions": [{"type": "message", "condition": "!unknown && !nearest_lane.vector_map_msgs::Lane_<std::allocator<void>>::lnid == 0 && this.(anonymous namespace)::VectorMapServer::debug_ && !unknown", "callback": "(anonymous namespace)::VectorMapServer::getGuardRail", "state_changes": [], "outputs": [{"publisher": {"variable": "marker_array_pub_"}}, {"publisher": {"variable": "marker_array_pub_"}}]}, {"type": "message", "condition": "!unknown && !nearest_lane.vector_map_msgs::Lane_<std::allocator<void>>::lnid == 0 && this.(anonymous namespace)::VectorMapServer::debug_ && !unknown", "callback": "(anonymous namespace)::VectorMapServer::getSideWalk", "state_changes": [], "outputs": [{"publisher": {"variable": "marker_array_pub_"}}, {"publisher": {"variable": "marker_array_pub_"}}]}, {"type": "message", "condition": "!unknown && !nearest_lane.vector_map_msgs::Lane_<std::allocator<void>>::lnid == 0 && this.(anonymous namespace)::VectorMapServer::debug_ && !unknown", "callback": "(anonymous namespace)::VectorMapServer::getSideStrip", "state_changes": [], "outputs": [{"publisher": {"variable": "marker_array_pub_"}}, {"publisher": {"variable": "marker_array_pub_"}}]}, {"type": "message", "condition": "!unknown && !nearest_lane.vector_map_msgs::Lane_<std::allocator<void>>::lnid == 0 && this.(anonymous namespace)::VectorMapServer::debug_ && !unknown", "callback": "(anonymous namespace)::VectorMapServer::getRoadSign", "state_changes": [], "outputs": [{"publisher": {"variable": "marker_array_pub_"}}, {"publisher": {"variable": "marker_array_pub_"}}]}, {"type": "message", "condition": "!unknown && !nearest_lane.vector_map_msgs::Lane_<std::allocator<void>>::lnid == 0 && this.(anonymous namespace)::VectorMapServer::debug_ && !unknown", "callback": "(anonymous namespace)::VectorMapServer::getCurveMirror", "state_changes": [], "outputs": [{"publisher": {"variable": "marker_array_pub_"}}, {"publisher": {"variable": "marker_array_pub_"}}]}, {"type": "message", "condition": "!unknown && !nearest_lane.vector_map_msgs::Lane_<std::allocator<void>>::lnid == 0 && this.(anonymous namespace)::VectorMapServer::debug_ && !unknown", "callback": "(anonymous namespace)::VectorMapServer::getRoadPole", "state_changes": [], "outputs": [{"publisher": {"variable": "marker_array_pub_"}}, {"publisher": {"variable": "marker_array_pub_"}}]}, {"type": "message", "condition": "!unknown && !nearest_lane.vector_map_msgs::Lane_<std::allocator<void>>::lnid == 0 && this.(anonymous namespace)::VectorMapServer::debug_ && !unknown", "callback": "(anonymous namespace)::VectorMapServer::getDriveOnPortion", "state_changes": [], "outputs": [{"publisher": {"variable": "marker_array_pub_"}}, {"publisher": {"variable": "marker_array_pub_"}}]}, {"type": "message", "condition": "!unknown && !nearest_lane.vector_map_msgs::Lane_<std::allocator<void>>::lnid == 0 && this.(anonymous namespace)::VectorMapServer::debug_ && !unknown", "callback": "(anonymous namespace)::VectorMapServer::getGutter", "state_changes": [], "outputs": [{"publisher": {"variable": "marker_array_pub_"}}, {"publisher": {"variable": "marker_array_pub_"}}]}, {"type": "message", "condition": "!unknown && !nearest_lane.vector_map_msgs::Lane_<std::allocator<void>>::lnid == 0 && this.(anonymous namespace)::VectorMapServer::debug_ && !unknown", "callback": "(anonymous namespace)::VectorMapServer::getWall", "state_changes": [], "outputs": [{"publisher": {"variable": "marker_array_pub_"}}, {"publisher": {"variable": "marker_array_pub_"}}]}, {"type": "message", "condition": "!unknown && !nearest_lane.vector_map_msgs::Lane_<std::allocator<void>>::lnid == 0 && this.(anonymous namespace)::VectorMapServer::debug_ && !unknown", "callback": "(anonymous namespace)::VectorMapServer::getCurb", "state_changes": [], "outputs": [{"publisher": {"variable": "marker_array_pub_"}}, {"publisher": {"variable": "marker_array_pub_"}}]}, {"type": "message", "condition": "!unknown && !nearest_lane.vector_map_msgs::Lane_<std::allocator<void>>::lnid == 0 && this.(anonymous namespace)::VectorMapServer::debug_ && !unknown", "callback": "(anonymous namespace)::VectorMapServer::getZebraZone", "state_changes": [], "outputs": [{"publisher": {"variable": "marker_array_pub_"}}, {"publisher": {"variable": "marker_array_pub_"}}]}, {"type": "message", "condition": "!unknown && !nearest_lane.vector_map_msgs::Lane_<std::allocator<void>>::lnid == 0 && this.(anonymous namespace)::VectorMapServer::debug_ && !unknown", "callback": "(anonymous namespace)::VectorMapServer::getLane", "state_changes": [], "outputs": [{"publisher": {"variable": "marker_array_pub_"}}, {"publisher": {"variable": "marker_array_pub_"}}]}, {"type": "message", "condition": "!unknown && !nearest_lane.vector_map_msgs::Lane_<std::allocator<void>>::lnid == 0 && this.(anonymous namespace)::VectorMapServer::debug_ && !unknown", "callback": "(anonymous namespace)::VectorMapServer::getNode", "state_changes": [], "outputs": [{"publisher": {"variable": "marker_array_pub_"}}, {"publisher": {"variable": "marker_array_pub_"}}]}, {"type": "message", "condition": "!unknown && !nearest_lane.vector_map_msgs::Lane_<std::allocator<void>>::lnid == 0 && this.(anonymous namespace)::VectorMapServer::debug_ && !unknown", "callback": "(anonymous namespace)::VectorMapServer::getFence", "state_changes": [], "outputs": [{"publisher": {"variable": "marker_array_pub_"}}, {"publisher": {"variable": "marker_array_pub_"}}]}, {"type": "message", "condition": "!unknown && !nearest_lane.vector_map_msgs::Lane_<std::allocator<void>>::lnid == 0 && this.(anonymous namespace)::VectorMapServer::debug_ && !unknown", "callback": "(anonymous namespace)::VectorMapServer::getRoadEdge", "state_changes": [], "outputs": [{"publisher": {"variable": "marker_array_pub_"}}, {"publisher": {"variable": "marker_array_pub_"}}]}, {"type": "message", "condition": "!unknown && !nearest_lane.vector_map_msgs::Lane_<std::allocator<void>>::lnid == 0 && this.(anonymous namespace)::VectorMapServer::debug_ && !unknown", "callback": "(anonymous namespace)::VectorMapServer::getCrossRoad", "state_changes": [], "outputs": [{"publisher": {"variable": "marker_array_pub_"}}, {"publisher": {"variable": "marker_array_pub_"}}]}, {"type": "message", "condition": "!unknown && !nearest_lane.vector_map_msgs::Lane_<std::allocator<void>>::lnid == 0 && this.(anonymous namespace)::VectorMapServer::debug_ && !unknown", "callback": "(anonymous namespace)::VectorMapServer::getRoadMark", "state_changes": [], "outputs": [{"publisher": {"variable": "marker_array_pub_"}}, {"publisher": {"variable": "marker_array_pub_"}}]}, {"type": "message", "condition": "!unknown && !nearest_lane.vector_map_msgs::Lane_<std::allocator<void>>::lnid == 0 && this.(anonymous namespace)::VectorMapServer::debug_ && !unknown", "callback": "(anonymous namespace)::VectorMapServer::getCrossWalk", "state_changes": [], "outputs": [{"publisher": {"variable": "marker_array_pub_"}}, {"publisher": {"variable": "marker_array_pub_"}}]}, {"type": "message", "condition": "!unknown && !nearest_lane.vector_map_msgs::Lane_<std::allocator<void>>::lnid == 0 && this.(anonymous namespace)::VectorMapServer::debug_ && !unknown", "callback": "(anonymous namespace)::VectorMapServer::getUtilityPole", "state_changes": [], "outputs": [{"publisher": {"variable": "marker_array_pub_"}}, {"publisher": {"variable": "marker_array_pub_"}}]}, {"type": "message", "condition": "!unknown && !nearest_lane.vector_map_msgs::Lane_<std::allocator<void>>::lnid == 0 && this.(anonymous namespace)::VectorMapServer::debug_ && !unknown", "callback": "(anonymous namespace)::VectorMapServer::getWhiteLine", "state_changes": [], "outputs": [{"publisher": {"variable": "marker_array_pub_"}}, {"publisher": {"variable": "marker_array_pub_"}}]}, {"type": "message", "condition": "!unknown && !nearest_lane.vector_map_msgs::Lane_<std::allocator<void>>::lnid == 0 && this.(anonymous namespace)::VectorMapServer::debug_ && !unknown", "callback": "(anonymous namespace)::VectorMapServer::getRailCrossing", "state_changes": [], "outputs": [{"publisher": {"variable": "marker_array_pub_"}}, {"publisher": {"variable": "marker_array_pub_"}}]}, {"type": "message", "condition": "!unknown && !nearest_lane.vector_map_msgs::Lane_<std::allocator<void>>::lnid == 0 && this.(anonymous namespace)::VectorMapServer::debug_ && !unknown", "callback": "(anonymous namespace)::VectorMapServer::getStreetLight", "state_changes": [], "outputs": [{"publisher": {"variable": "marker_array_pub_"}}, {"publisher": {"variable": "marker_array_pub_"}}]}, {"type": "message", "condition": "!unknown && !nearest_lane.vector_map_msgs::Lane_<std::allocator<void>>::lnid == 0 && this.(anonymous namespace)::VectorMapServer::debug_ && !unknown", "callback": "(anonymous namespace)::VectorMapServer::getDTLane", "state_changes": [], "outputs": [{"publisher": {"variable": "marker_array_pub_"}}, {"publisher": {"variable": "marker_array_pub_"}}]}, {"type": "message", "condition": "!unknown && !nearest_lane.vector_map_msgs::Lane_<std::allocator<void>>::lnid == 0 && this.(anonymous namespace)::VectorMapServer::debug_ && !unknown", "callback": "(anonymous namespace)::VectorMapServer::getSignal", "state_changes": [], "outputs": [{"publisher": {"variable": "marker_array_pub_"}}, {"publisher": {"variable": "marker_array_pub_"}}]}, {"type": "message", "condition": "!unknown && !nearest_lane.vector_map_msgs::Lane_<std::allocator<void>>::lnid == 0 && this.(anonymous namespace)::VectorMapServer::debug_ && !unknown", "callback": "(anonymous namespace)::VectorMapServer::getWayArea", "state_changes": [], "outputs": [{"publisher": {"variable": "marker_array_pub_"}}, {"publisher": {"variable": "marker_array_pub_"}}]}, {"type": "message", "condition": "!unknown && !nearest_lane.vector_map_msgs::Lane_<std::allocator<void>>::lnid == 0 && this.(anonymous namespace)::VectorMapServer::debug_ && !unknown", "callback": "(anonymous namespace)::VectorMapServer::getStopLine", "state_changes": [], "outputs": [{"publisher": {"variable": "marker_array_pub_"}}, {"publisher": {"variable": "marker_array_pub_"}}]}], "unclassified_publish": []}